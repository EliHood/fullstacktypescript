{"version":3,"sources":["serviceWorker.ts","utils/sessionData.tsx","ourAxios.tsx","utils/setAuthToken.tsx","actions/userActions.tsx","actionTypes/userActionTypes.tsx","ourHistory.tsx","utils/userSession.tsx","utils/validation.tsx","reducers/postReducer.tsx","actionTypes/postActionTypes.tsx","reducers/userReducer.tsx","reducers/index.tsx","api/api.tsx","sagas/auth.tsx","actions/postActions.tsx","sagas/post.tsx","sagas/index.tsx","store.tsx","common/OurLink.tsx","selectors/selectors.tsx","common/notificationHook.tsx","common/storeHooks.tsx","common/Date.tsx","common/ButtonFunction.tsx","common/LikeButton.tsx","common/OurModal.tsx","common/AuthButtons.tsx","components/forms/comment/GifSection.tsx","common/OurTextField.tsx","components/forms/comment/CommentForm.tsx","common/OurSecondaryButton.tsx","components/forms/commentBody/commentBody.tsx","components/forms/commentItem/CommentItem.tsx","components/forms/reply/ReplyForm.tsx","components/forms/commentAuthorData/commentAuthorData.tsx","components/forms/commentListContainer/commentListContainer.tsx","components/forms/commentList/CommentList.tsx","components/forms/commentbottom/commentBottom.tsx","components/forms/PostItemContainer/PostItemContainer.tsx","common/OurLoader.tsx","components/forms/postList/postList.tsx","components/hoc/grid.tsx","common/usePostHook.tsx","common/OurError.tsx","common/OurWrapper.tsx","components/landing/landing.tsx","components/forms/createPost/createPost.tsx","components/tabs/OurTabs.tsx","common/handleHook.tsx","components/dashboard/dashboard.tsx","components/emailConfirmation/emailConfirmation.tsx","components/emailConfirmationSuccess/emailConfirmationSuccess.tsx","components/Likes/Likes.tsx","containers/Likes.tsx","components/forms/login/login.tsx","components/hoc/isAuthenticated.tsx","common/GoogleButton.tsx","components/login/login.tsx","components/post/post.tsx","components/forms/editProfile/editForm.tsx","components/editProfile/editProfile.tsx","components/profile/profile.tsx","components/forms/signUp/signUp.tsx","components/register/register.tsx","PrivateRoute.tsx","components/404/404.tsx","components/menus/Menu.tsx","containers/notificationTooltip.tsx","components/notificationPopOver/notification.tsx","common/NavLink.tsx","common/NavButton.tsx","common/OurMenuItem.tsx","components/menus/DynamicMenu.tsx","components/menus/CollapsedMenu.tsx","common/ButtonBar.tsx","components/menus/MainNav.tsx","common/useWrapperSlide.tsx","components/search/Search.tsx","components/userPosts/UserPosts.tsx","containers/UserPosts.tsx","common/SearchResults.tsx","components/searchResultPage/searchResultPage.tsx","Router.tsx","Nav.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","token","localStorage","setItem","removeItem","getItem","AxiosInstance","Axios","create","baseURL","process","REACT_APP_BASE_URL","withCredentials","headers","Accept","interceptors","response","use","setAuthToken","defaults","common","Authorization","signUpSuccess","payload","user","type","logOutInit","history","loginSuccess","followUserFailure","err","initGetNotifications","createBrowserHistory","forceRefresh","jwtToken","decoded","jwt_decode","store","dispatch","currentTime","Date","now","iat","clear","href","chars","length","password","initialState","posts","postPage","isLoading","titleError","bodyError","title","postContent","error","isNotified","notification","searchValue","results","searchPageResults","selectedUser","mentionedUser","commenterId","postReducer","state","action","produce","draft","console","log","post","findKey","findIndex","x","id","likeCounts","likedByMe","message","newfindKey","filter","item","data","validation","postKey","postId","commentKey","Comments","comment_body","sort","a","b","createdAt","newPostKey","findCommentKey2","comment","date1","userId","repostPostKey","RepostedByMe","replyPostId","reply","replyCommentId","commentId","postReplyIndex","commentIndex","commentReplies","deleteReplyPostId","deleteReplyCommentId","replyId","deleteReplyIdx","commentIdx","unRepostId","unrepostPostKey","isAuthenticated","googleAccount","emailVerified","currentUser","profileData","profilePage","usernameError","passwordError","emailError","email","passwordConf","passwordConfError","getNotifications","username","notDark","authReducer","meta","loginStatus","sessionData","verified","loginStatus2","emailVerified2","verified2","follow","UserFollowers","followerId","isFollowing","markKey","notificationId","status","notifications","persistConfig","key","storage","whitelist","pesistedReducer","persistReducer","rootReducer","combineReducers","signUp","userData","then","res","autoLogin","get","logOut","logIn","editProfile","getProfile","followUser","unfollowUser","delete","resendConfirmation","emailConfirmation","updateProfile","put","markAsRead","createPost","postData","repost","unrepost","getPosts","likePost","deletePost","getPost","dislikePost","postComment","commentData","deleteComment","editComment","replyComment","replyData","deleteReply","searchPosts","query","searchPostsNull","registerUser","getAutoLoginStatus","getUserProfile","updateUserProfile","login","resendEmailConfirmation","watchNotifications","watchMarkAsRead","watchLogin","watchFollowUser","watchUnFollowUser","watchProfile","watchResendEmailConfirmation","watchEmailConfirmation","watchUpdateProfile","watchEditProfile","watchAuthLogin","watchUserRegister","watchLogout","call","api","actionTypes","push","pathname","errMsg","googleId","profile","logout","jwtDecode","email_verified","toString","unfollow","mark","takeLatest","fork","likePostInit","dislikePostInit","dislikePostFailiure","deletePostInit","postCommentInit","deleteCommentInit","deleteReplyFailure","searchPostsSuccess","setSelectedUser","commentUpdates","getNotification","fetchPost","repostPost","unRepostPost","watchSearchPosts","watchSearchPageResults","watchDeleteReply","watchFetchPost","watchReplyComment","watchRepostPost","watchUnRepostPost","watchEditComment","watchDeletePost","watchDeleteComment","watchLikePost","watchdisLikePost","watchPostComment","watchPosts","watchCreatePost","createEventChannel","pusher","eventChannel","emitter","channel","subscribe","bind","body","toast","success","info","unbind","createCommentChannel","pusherClient","Pusher","cluster","forceTLS","take","like","dislike","confirm","deleteConfirmation","replyBody","search","auth","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","persitor","persistStore","sagas","map","run","TheLink","styled","Link","OurLink","props","postSelector","userSelector","userStore","createSelector","getProfileData","getDark","getIsNotified","userConfirmation","userError","postError","userMessage","getPopPosts","slice","getUser","getTitleError","getBodyError","searchQuery","getSelectedUser","mentionUser","getCommenterId","fetchRelatedUsers","keyFn","array","mySet","Set","isNew","has","add","removeDuplicatesBy","recursGetUsers","flatMap","v","author","concat","useNotificationHook","useDispatch","useSelector","React","useEffect","useStoreMethods","ourTitle","ourBodyError","ourPostContent","popPosts","userErr","errPost","loading","postResults","searchResults","mentionUsers","setSelectedOptionValue","optionValue","setMentioned","getSearch","searchQ","deleteRep","replyComm","rePost","repostPostInit","unRepost","unrepostPostInit","OurDate","Typography","variant","align","moment","calendar","style","fontSize","ButtonSpan","span","ButtonFunction","onReply","update","setEditComment","replyUserId","storeHooks","onClick","color","margin","display","float","LikeContainer","div","LikeCount","FavIcon","FavoriteIcon","FavBorderIcon","FavoriteBorderIcon","LikeButton","OurModal","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","to","DialogActions","Button","autoFocus","UnAuthLike","AuthButtons","writeComment","openForm","openModal","handleCloseModal","handleClickOpen","storehooks","memoizedLike","useCallback","memoizedDislike","checkUser","undefined","ifGifComment","gifUrl","Object","entries","component","GifSection","wrapperClassName","searchFormClassName","padding","apiKey","onSelect","e","select","masonryConfig","columns","imageWidth","gutter","mq","OurTextField","commentChange","handleTitleChange","handleContentChange","post_content","setCommentEdit","setGifSelected","TextField","label","width","name","value","onChange","className","borderRadius","multiline","size","rows","fullWidth","InputProps","startAdornment","InputAdornment","cursor","alignItems","position","paddingTop","inputProps","defaultValue","CommentForm","isGif","setCommentBody","onSubmit","setMentionedUser","useState","isGifSelected","selectedOption","option","options","FormHelperText","target","disabled","Grid","container","spacing","sm","lg","buttonStyle","OurSecondaryButton","data-testid","test","children","Img","img","CommentBody","source","src","CommentItem","commentEdit","editCommentValue","memoizedDeleteReply","memoizedUpdate","replyButton","xs","ReplyForm","replyChange","CommentAuthorData","isBold","isReply","alt","gravatar","height","fontWeight","ourStyle","forwardRef","ref","setReplyComment","addReply","setReply","replySubmit","preventDefault","List","innerRef","paddingBottom","marginLeft","i","showMore","setShowMore","setOpenModal","showLessFlag","setShowLessFlag","the_comments","comments","inc","min","Math","showLessComments","filterComments","reverse","showMoreLess","showComments","CommentBottom","setOpenForm","setGifUrl","divRef","useRef","regex","words","split","letter","selectGif","images","downsized_large","url","commentSubmit","setTimeout","current","scrollIntoView","behavior","block","inline","commentsView","commentForm","PostItemContainer","ifOnPosts","indexOf","autoClose","POSITION","BOTTOM_RIGHT","md","Paper","Avatar","sizes","OurLoader","memo","WrappedComponent","justify","this","Component","usePostsHooks","myStyles","bottom","left","right","flexWrap","alignContent","zIndex","OurError","Alert","severity","OurWrapper","classnames","appBar","appBarShift","appOpen","GridHoc","usePostsHook","storeMethods","PostForm","disButton","TabPanel","index","other","role","hidden","Box","p","a11yProps","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","background","paper","OurTabs","classes","setValue","Tabs","event","newValue","Tab","useInputChange","addTitle","addContent","addUsername","addEmail","addPassword","addPasswordConf","handleInputChange","isEnabled","ResendEmailCard","emailMessage","didMountRef","params","emailConfirmationInit","includes","AlertTitle","notificationInit","connect","ownProps","createStructuredSelector","Likes","find","getPostsInit","LoginForm","submit","passwordChange","usernameChange","IsAuth","ourState","errors","initLogin","createStyles","button","shape","boxShadow","shadows","textDecoration","wrapper","marginTop","justifyContent","icon","text","textTransform","textAlign","alignSelf","GoogleLoginButton","xmlns","viewBox","fill","d","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","secondary","main","form","setUsername","setPassword","CssBaseline","elevation","square","goBack","loginInit","Post","parseInt","lineHeight","EditProfileForm","bio","handleBio","handleGravatar","FormGroup","FormLabel","setBio","setGravatar","mounted","handleSubmit","userFollowerCount","followerPlural","letterSpacing","followUserInit","unfollowUserInit","userFollow","followerDetails","SignUpForm","emailChange","passwordConfChange","ifPasswordError","FormHelper","signUpInit","signup","PrivateRoute","exact","path","NotFoundImage","withStyles","buttonCollapse","up","drawerPaper","top","withTheme","IconButton","setOpen","Drawer","anchor","direction","ModalProps","keepMounted","mapStateToProps","markAsReadInit","handleNotificationClick","anchorEl","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Divider","CleanLink","NavLink","NavButton","OurStyledMenuItem","MenuItem","OurMenuItem","UnOrderedList","ul","UnOrderedListItem","li","MenuItemLink","GuestMenuItemLink","DyanmicMenu","darkTheme","authenticatedNavItems","menus","link","guestNavItems","guestMenu","authenticatedMenuItems","guestMenuItems","CollapasedMenu","DynamicMenu","styles","buttonBar","ButtonBar","MainNav","transition","transitions","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","drawerClose","overflowX","useWrapperSlide","appSetOpen","Search","disableIfEmpty","ifTyping","fadeIfempty","InputBase","placeholder","opacity","outline","UserPosts","SearchCard","NoPostsCard","Gravatar","SearchResults","MyRouter","hasError","setAnchorEl","currentTarget","AppBar","Toolbar","flex","render","EmailConfirmation","SearchResultPage","EmailConfirmationSuccess","Dashboard","Profile","EditProfile","NotFound","Nav","ourLogOut","setState","Router","userSession","createMuiTheme","primary","defaultTheme","typography","h6","h5","dark","App","isDark","ThemeProvider","app","persistor","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fa261980.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n            window.location.href,\n        );\n\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n\n            if (\n                response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.',\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","export default {\n    // save logged session\n    setUserLoggedIn: (token: any) => {\n        localStorage.setItem('jwtToken', token);\n    },\n    // remove token\n    setUserLoggdOut: () => {\n        localStorage.removeItem('jwtToken');\n    },\n    //   check if a user is signed in and stuff\n    getLoginStatus: () => (localStorage.getItem('jwtToken') !== 'null'),\n    emailVerifiedStatus: () => (localStorage.getItem('email_verified') === 'true'),\n    googleIdStatus: () => (localStorage.getItem('googleId') !== null),\n};\n","/* eslint-disable import/no-extraneous-dependencies */\nimport Axios from 'axios'\nimport 'dotenv/config'\n\nconst AxiosInstance = Axios.create({\n    baseURL: process.env.REACT_APP_BASE_URL, // localhost:3000\n    withCredentials: true,\n    headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n    },\n})\n\nAxiosInstance.interceptors.response.use(\n    (response) =>\n        // const token = localStorage.getItem('auth');\n        // response.headers.Authorization =  token ? `Bearer ${token}` : '';\n\n        response\n)\n\nexport default AxiosInstance\n","import Axios from '../ourAxios';\n\nconst setAuthToken = (token) => {\n    if (token) {\n    // Apply to every request\n        Axios.defaults.headers.common.Authorization = token;\n    } else {\n    // Delete auth header\n        delete Axios.defaults.headers.common.Authorization;\n    }\n};\n\nexport default setAuthToken;\n","import * as types from '../actionTypes/userActionTypes';\n\nexport const emailConfirmationInit = (payload: object) => ({\n    type: types.EMAIL_CONFIRMATION_INIT,\n    payload,\n});\n\nexport const emailConfirmationSuccess = (payload: object) => ({\n    type: types.EMAIL_CONFIRMATION_SUCCESS,\n    payload,\n});\n\nexport const emailConfirmationFailure = (error: object) => ({\n    type: types.EMAIL_CONFIRMATION_FAILURE,\n    error,\n});\n\nexport const setDark = () => ({\n    type: types.SET_DARK,\n});\n\nexport const resendEmailConfirmationInit = () => ({\n    type: types.RESEND_EMAIL_CONFIRMATION_INIT,\n});\n\nexport const resendEmailConfirmationSuccess = (payload: object) => ({\n    type: types.RESEND_EMAIL_CONFIRMATION_SUCCESS,\n    payload,\n});\n\nexport const resendEmailConfirmationFailure = (error: object) => ({\n    type: types.RESEND_EMAIL_CONFIRMATION_FAILURE,\n    error,\n});\n\nexport const signUpInit = (payload: object, history: object) => ({\n    type: types.SIGN_UP_INIT,\n    payload,\n    history,\n});\n\nexport const signUpSuccess = (payload: object, user: object) => ({\n    type: types.SIGN_UP_SUCCESS,\n    payload,\n    user,\n});\n\nexport const signUpFailure = (error: object) => ({\n    type: types.SIGN_UP_FAILURE,\n    error,\n});\n\nexport const fetchAutoAuthInit = () => ({\n    type: types.FETCH_AUTO_LOGIN,\n});\n\nexport const fetchAuthAuthSuccess = (payload: object) => ({\n    type: types.FETCH_AUTO_LOGIN_SUCCESS,\n    payload,\n});\n\nexport const fetchAuthAuthFailure = (error: object) => ({\n    type: types.FETCH_AUTO_LOGIN_FAILURE,\n    error,\n});\n\nexport const logOutInit = (history: object) => ({\n    type: types.LOG_OUT_INIT,\n    history,\n});\n\nexport const logOutSuccess = (payload: object) => ({\n    type: types.LOG_OUT_SUCCESS,\n    payload,\n});\n\nexport const logOutFailure = (error: object) => ({\n    type: types.LOG_OUT_FAILURE,\n    error,\n});\n\nexport const loginInit = (payload: object, history: object) => ({\n    type: types.LOG_IN_INIT,\n    payload,\n    history,\n});\n\nexport const loginSuccess = (payload: object) => ({\n    type: types.LOG_IN_SUCCESS,\n    payload,\n});\n\nexport const loginFailure = (error: string) => ({\n    type: types.LOG_IN_FAILURE,\n    error,\n});\n\nexport const getUser = () => ({\n    type: types.GET_USER,\n});\n\nexport const getUserSuccess = (payload: object) => ({\n    type: types.GET_USER_SUCCESS,\n    payload,\n});\n\nexport const getUserFailure = (error: string) => ({\n    type: types.GET_USER_FAILURE,\n    error,\n});\n\nexport const getUserProfile = () => ({\n    type: types.GET_USER_PROFILE,\n});\n\nexport const getUserProfileSuccess = (payload: object) => ({\n    type: types.GET_USER_PROFILE_SUCCESS,\n    payload,\n});\n\nexport const getUserProfileFailure = (error: string) => ({\n    type: types.GET_USER_PROFILE_FAILURE,\n    error,\n});\n\nexport const updateUserProfile = (payload: object) => ({\n    type: types.UPDATE_USER_PROFILE,\n    payload,\n});\n\nexport const updateUserProfileSuccess = (payload: object) => ({\n    type: types.UPDATE_USER_PROFILE_SUCCESS,\n    payload,\n});\n\nexport const updateUserProfileFailure = (error: string) => ({\n    type: types.UPDATE_USER_PROFILE_FAILURE,\n    error,\n});\n\nexport const addUsername = (data: string) => ({\n    type: types.ADD_USERNAME,\n    data,\n});\n\nexport const addEmail = (data: string) => ({\n    type: types.ADD_EMAIL,\n    data,\n});\n\nexport const addPasswordConf = (data: string) => ({\n    type: types.ADD_PASSWORD_CONF,\n    data,\n});\n\nexport const addPassword = (data: string) => ({\n    type: types.ADD_PASSWORD,\n    data,\n});\n\nexport const initLogin = () => ({\n    type: types.INIT_LOGIN,\n});\n\nexport const getProfileInit = (data: string) => ({\n    type: types.GET_PROFILE_INIT,\n    data,\n});\n\nexport const getProfileSuccess = (data: string) => ({\n    type: types.GET_PROFILE_SUCCESS,\n    data,\n});\n\nexport const getProfileFailure = (err: object) => ({\n    type: types.GET_USER_PROFILE_FAILURE,\n    err,\n});\n\nexport const followUserInit = (data: string, id: number) => ({\n    type: types.FOLLOW_USER_INIT,\n    data,\n    id,\n});\n\nexport const followUserSuccess = (payload: object, id: number) => ({\n    type: types.FOLLOW_USER_SUCCESS,\n    payload,\n    id,\n});\n\nexport const followUserFailure = (err: object) => ({\n    type: types.FOLLOW_USER_FAILURE,\n    err,\n});\n\nexport const unfollowUserInit = (data: string, id: number) => ({\n    type: types.UNFOLLOW_USER_INIT,\n    data,\n    id,\n});\n\nexport const unfollowUserSuccess = (payload: object, id: number) => ({\n    type: types.UNFOLLOW_USER_SUCCESS,\n    payload,\n    id,\n});\n\nexport const unfollowUserFailure = (err: object) => ({\n    type: types.UNFOLLOW_USER_FAILURE,\n    err,\n});\n\nexport const initGetNotifications = (payload: number) => ({\n    type: types.INIT_GET_NOTIFICATIONS,\n    payload,\n});\n\nexport const getNotificationsSuccess = (payload: object) => ({\n    type: types.GET_NOTIFICATIONS_SUCCESS,\n    payload,\n});\n\nexport const getNotificationsFailure = (err: object) => ({\n    type: types.GET_NOTIFICATIONS_FAILURE,\n    err,\n});\n\nexport const markAsReadInit = (payload: number) => ({\n    type: types.MARK_AS_READ_INIT,\n    payload,\n});\n\nexport const markAsReadSuccess = (payload: object, id: number) => ({\n    type: types.MARK_AS_READ_SUCCESS,\n    payload,\n    id,\n});\n\nexport const markAsReadFailure = (err: object) => ({\n    type: types.MARK_AS_READ_FAILURE,\n    err,\n});\n","export const SIGN_UP_INIT = 'SIGN_UP_INIT';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const EMAIL_CONFIRMATION_INIT = 'EMAIL_CONFIRMATION_INIT';\nexport const EMAIL_CONFIRMATION_SUCCESS = 'EMAIL_CONFIRMATION_SUCCESS';\nexport const EMAIL_CONFIRMATION_FAILURE = 'EMAIL_CONFIRMATION_FAILURE';\n\nexport const GET_PROFILE_INIT = 'GET_PROFILE_INIT';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAILURE = 'GET_PROFILE_FAILURE';\n\nexport const FOLLOW_USER_INIT = 'FOLLOW_USER_INIT';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_INIT = 'UNFOLLOW_USER_INIT';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const RESEND_EMAIL_CONFIRMATION_INIT = 'RESEND_EMAIL_CONFIRMATION_INIT';\nexport const RESEND_EMAIL_CONFIRMATION_SUCCESS = 'RESEND_EMAIL_CONFIRMATION_SUCCESS';\nexport const RESEND_EMAIL_CONFIRMATION_FAILURE = 'RESEND_EMAIL_CONFIRMATION_FAILURE';\n\nexport const FETCH_AUTO_LOGIN = 'FETCH_AUTO_LOGIN';\nexport const FETCH_AUTO_LOGIN_SUCCESS = 'FETCH_AUTO_LOGIN_SUCCESS';\nexport const FETCH_AUTO_LOGIN_FAILURE = 'FETCH_AUTO_LOGIN_FAILURE';\n\nexport const LOG_OUT_INIT = 'LOG_OUT_INIT';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOG_IN_INIT = 'LOG_IN_INIT';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n\nexport const GET_USER = 'GET_USER';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\n\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE';\nexport const GET_USER_PROFILE_SUCCESS = 'GET_USER_PROFILE_SUCCESS';\nexport const GET_USER_PROFILE_FAILURE = 'GET_USER_PROFILE_FAILURE';\n\nexport const UPDATE_USER_PROFILE = 'UPDATE_USER_PROFILE';\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS';\nexport const UPDATE_USER_PROFILE_FAILURE = 'UPDATE_USER_PROFILE_FAILURE';\n\nexport const ADD_USERNAME = 'ADD_USERNAME';\nexport const ADD_EMAIL = 'ADD_EMAIL';\nexport const ADD_PASSWORD = 'ADD_PASSWORD';\nexport const ADD_PASSWORD_CONF = 'ADD_PASSWORD_CONF';\nexport const INIT_LOGIN = 'INIT_LOGIN';\n\nexport const INIT_GET_NOTIFICATIONS = 'INIT_GET_NOTIFICATIONS';\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS';\nexport const GET_NOTIFICATIONS_FAILURE = 'GET_NOTIFICATIONS_FAILURE';\n\nexport const MARK_AS_READ_INIT = 'MARK_AS_READ_INIT';\nexport const MARK_AS_READ_SUCCESS = 'MARK_AS_READ_SUCCESS';\nexport const MARK_AS_READ_FAILURE = 'MARK_AS_READ_FAILURE';\n\nexport const SET_DARK = 'SET_DARK';\n","/* eslint-disable import/prefer-default-export */\nimport { createBrowserHistory } from 'history'\n\nexport const history = createBrowserHistory({ forceRefresh: true })\n","import jwt_decode from 'jwt-decode';\nimport { getUser, loginSuccess, logOutInit } from '../actions/userActions';\nimport { store } from '../store';\nimport { setAuthToken } from '.';\nimport { history } from '../ourHistory';\n\nexport default {\n    userSession: () => {\n        if (localStorage.jwtToken) {\n            // console.log(\"googletoken\", localStorage.jwtToken);\n            // Set auth token header auth\n            setAuthToken(localStorage.jwtToken);\n            // Decode token and get user info and exp\n            const token = localStorage.getItem('jwtToken');\n\n            if (token !== 'null') {\n                const decoded = jwt_decode(token);\n                // console.log(decoded);\n                // Set user and isAuthenticated\n                store.dispatch(loginSuccess(decoded));\n                // store.dispatch(getCurrentUser());\n                // this line of code may be unneccessary, because we are calling getUser from Nav component.\n                // store.dispatch(getUser());\n                // Check for expired token\n                const currentTime = Date.now() / 1000;\n\n                if (decoded.iat > currentTime) {\n                    // Logout user\n                    store.dispatch(logOutInit(history));\n                    // Redirect to login\n                    localStorage.clear();\n                    window.location.href = '/login';\n                }\n            }\n        }\n    },\n};\n","const isEmail = (email: string) => {\n    const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    if (email.match(regEx)) {\n        return true;\n    }\n    return false;\n};\n\nexport default {\n    validateEmail: (chars: string) => {\n        if (chars.length > 0) {\n            if (isEmail(chars)) {\n                return true;\n            }\n\n            return 'Email not valid';\n        }\n\n        return 'Field cannot be empty';\n    },\n\n    validateUsername: (chars: string) => {\n        if (chars.length > 0) {\n            if (chars.length > 6) {\n                return true;\n            }\n\n            return 'Username must be at least 6 chars';\n        }\n\n        return 'Field cannot be empty';\n    },\n    validatePassword: (chars: string) => {\n        if (chars.length > 0) {\n            if (chars.length > 6) {\n                return true;\n            }\n\n            return 'Must be at least 6 chars';\n        }\n\n        return 'Field cannot be empty';\n    },\n    validatePasswordConf: (chars: string, password: string) => {\n        if (chars.length > 0) {\n            if (chars.length < 6) {\n                return 'Must be at least 6 chars';\n            } if (chars !== password) {\n                return 'Passwords doesn\\'t match';\n            }\n\n            return true;\n        }\n\n        return 'Field cannot be empty';\n    },\n    validateString: (chars: string) => {\n        if (chars.length > 0) {\n            if (chars.length > 6) {\n                return true;\n            }\n\n            return 'Must be at least 6 chars';\n        }\n\n        return 'Field cannot be empty';\n    },\n    validateContent: (chars: string) => {\n        if (chars.length > 0) {\n            if (chars.length > 10) {\n                return true;\n            }\n\n            return 'Must be at least 10 chars';\n        }\n\n        return 'Field cannot be empty';\n    },\n};\n","import produce from 'immer'\nimport * as types from '../actionTypes/postActionTypes'\nimport { validation } from '../utils'\nimport { IPostState } from '../utils/types'\n\nconst initialState: IPostState = {\n    posts: [],\n    postPage: {},\n    isLoading: false,\n    titleError: null,\n    bodyError: null,\n    title: '',\n    postContent: '',\n    error: null,\n    isNotified: false,\n    notification: '',\n    searchValue: '',\n    results: [],\n    searchPageResults: [],\n    selectedUser: '',\n    mentionedUser: false,\n    commenterId: null,\n}\n\nconst postReducer = (state = initialState, action: any): IPostState =>\n    produce(state, (draft) => {\n        switch (action.type) {\n            case types.GET_POSTS_INIT:\n                draft.isLoading = true\n                return\n            case types.GET_POSTS_SUCCESS:\n                console.log(action)\n                draft.isLoading = false\n                draft.posts = action.payload\n\n                return\n            case types.GET_POSTS_FAILURE:\n                console.log(action)\n                draft.isLoading = false\n                draft.error = action.error\n\n                return\n            case types.CREATE_POST_SUCCESS:\n                console.log(action.payload)\n                draft.posts = [action.payload.post, ...draft.posts]\n                draft.title = ''\n                draft.postContent = ''\n\n                return\n            case types.LIKE_POST_SUCCESS:\n                console.log('fsfsfssfsf', action)\n                const findKey = state.posts.findIndex(\n                    (x) => x.id === action.payload.id\n                )\n                console.log(findKey)\n                draft.posts[findKey].likeCounts =\n                    draft.posts[findKey].likeCounts + 1\n                draft.posts[findKey].likedByMe = true\n                draft.error = null\n\n                // draft.posts[findKey] = [...(draft.posts[findKey].likeCounts + 1)];\n                return\n            case types.LIKE_POST_FAILURE:\n                console.log('testing', action)\n                draft.error = action.error.message\n\n                return\n            case types.FETCH_POST_SUCCESS:\n                console.log(action)\n                draft.postPage = action.payload\n\n                return\n            case types.FETCH_POST_FAILURE:\n                console.log(action)\n                draft.error = action.error\n\n                return\n            case types.DISLIKE_POST_SUCCESS:\n                console.log(action)\n                const newfindKey = state.posts.findIndex(\n                    (x) => x.id === action.payload.id\n                )\n                draft.posts[newfindKey].likeCounts =\n                    draft.posts[newfindKey].likeCounts - 1\n                draft.posts[newfindKey].likedByMe = false\n                draft.error = null\n\n                return\n            case types.DELETE_POST_SUCCESS:\n                console.log(action)\n                draft.posts = [\n                    ...draft.posts.filter((item) => item.id !== action.id),\n                ]\n\n                return\n\n            case types.DISLIKE_POST_FAILURE:\n                console.log('test', action)\n                draft.error = action.error.message\n\n                return\n            // Post comment will not be appending comment to the array state, comment update\n            // success will because comments will be real time\n            case types.POST_COMMENT_SUCCESS:\n                console.log(action)\n\n                return\n            case types.POST_COMMENT_FAILURE:\n                draft.error = action.error\n\n                return\n            case types.DISLIKE_POST_FAILURE:\n                console.log(action)\n                draft.error = action.error\n\n                return\n            case types.ADD_TITLE:\n                draft.title = action.data\n                draft.titleError = validation.validateString(action.data)\n\n                return\n            case types.ADD_CONTENT:\n                draft.postContent = action.data\n                draft.bodyError = validation.validateContent(action.data)\n\n                return\n            case types.EDIT_COMMENT_SUCCESS:\n                console.log(action)\n                const postKey = state.posts.findIndex(\n                    (x) => x.id === action.payload.data.postId\n                )\n                const commentKey = draft.posts[postKey].Comments.findIndex(\n                    (x) => x.id === action.payload.data.id\n                )\n                draft.posts[postKey].Comments[commentKey].comment_body =\n                    action.payload.data.comment_body\n                draft.posts[postKey].Comments = [\n                    // add comment first, then sort it out by the most recent comment\n                    ...draft.posts[postKey].Comments.sort((a, b) => {\n                        const date1 = new Date(a.createdAt) as any\n                        const date2 = new Date(b.createdAt) as any\n\n                        return date1 - date2\n                    }),\n                ]\n\n                return\n            case types.EDIT_COMMENT_FAILURE:\n                console.log(action)\n                draft.error = action.data\n\n                return\n            case types.DELETE_COMMENT_SUCCESS:\n                const newPostKey = state.posts.findIndex(\n                    (x) => x.id === action.postId\n                )\n                draft.posts[newPostKey].Comments = [\n                    ...draft.posts[newPostKey].Comments.filter(\n                        (item) => item.id !== action.id\n                    ),\n                ]\n\n                // draft.posts = draft.posts[newPostKey].Comments.filter((item) => item.id !== action.id);\n                return\n            case types.DELETE_COMMENT_FAILURE:\n                draft.error = action.error\n\n                return\n            case types.NOTIFICATION_SUCCESS:\n                console.log(action)\n                draft.notification = action.payload\n\n                return\n            case types.NOTIFICATION_FAILURE:\n                console.log(action)\n                draft.error = action.error\n\n                return\n            case types.COMMENT_UPDATES_SUCCESS:\n                console.log(action)\n                const findCommentKey2 = draft.posts.findIndex(\n                    (x) => x.id === action.payload.comment.postId\n                )\n                draft.posts[findCommentKey2].Comments = [\n                    action.payload.comment,\n                    // add comment first, then sort it out by the most recent comment\n                    ...draft.posts[findCommentKey2].Comments.sort((a, b) => {\n                        const date1 = new Date(a.createdAt) as any\n                        const date2 = new Date(b.createdAt) as any\n\n                        return date2 - date1\n                    }),\n                ]\n                draft.commenterId = action.payload.comment.userId\n\n                return\n            case types.COMMENT_UPDATES_FAILURE:\n                console.log(action)\n\n                return\n            case types.REPOST_POST_SUCCESS:\n                console.log(action)\n                const { postId } = action.payload.post\n                const repostPostKey = state.posts.findIndex(\n                    (x) => x.id === postId\n                )\n                console.log('checking repost post Key', repostPostKey)\n                draft.posts[repostPostKey].RepostedByMe = true\n\n                return\n            case types.REPOST_POST_FAILURE:\n                console.log(action)\n\n                return\n            case types.COMMENT_REPLY_SUCCESS:\n                const replyPostId = action.payload.reply.postId\n                const replyCommentId = action.payload.reply.commentId\n                const postReplyIndex = state.posts.findIndex(\n                    (x) => x.id === replyPostId\n                )\n                const commentIndex = state.posts[\n                    postReplyIndex\n                ].Comments.findIndex((x) => x.id === replyCommentId)\n                draft.posts[postReplyIndex].Comments[\n                    commentIndex\n                ].commentReplies = [\n                    action.payload.reply,\n                    ...draft.posts[postReplyIndex].Comments[commentIndex]\n                        .commentReplies,\n                ]\n\n                return\n            case types.COMMENT_REPLY_FAILURE:\n                console.log(action.error)\n\n                return\n            case types.REPLY_DELETE_SUCCESS:\n                console.log(action)\n                const deleteReplyPostId = action.payload.action.payload.postId\n                const deleteReplyCommentId =\n                    action.payload.action.payload.commentId\n                const { replyId } = action.payload.action.payload\n                const deleteReplyIdx = state.posts.findIndex(\n                    (x) => x.id === deleteReplyPostId\n                )\n                const commentIdx = state.posts[\n                    deleteReplyIdx\n                ].Comments.findIndex((x) => x.id === deleteReplyCommentId)\n                draft.posts[deleteReplyIdx].Comments[\n                    commentIdx\n                ].commentReplies = [\n                    ...draft.posts[deleteReplyIdx].Comments[\n                        commentIdx\n                    ].commentReplies.filter((item) => item.id !== replyId),\n                ]\n\n                return\n            case types.UNREPOST_POST_SUCCESS:\n                console.log(action)\n                const unRepostId = action.payload.postId\n                const unrepostPostKey = state.posts.findIndex(\n                    (x) => x.id === unRepostId\n                )\n                console.log('checking repost post Key', unrepostPostKey)\n                draft.posts[unrepostPostKey].RepostedByMe = false\n\n                return\n            case types.UNREPOST_POST_FAILURE:\n                console.log(action)\n\n                return\n            case types.SEARCH_POSTS_INIT:\n                console.log(action)\n                draft.searchValue = action.payload\n\n                return\n            case types.SEARCH_POSTS_SUCCESS:\n                console.log(action)\n                draft.results = action.payload.post\n\n                return\n            case types.SEARCH_POSTS_FAILURE:\n                console.log(action)\n                draft.results = []\n\n                return\n            case types.GET_SEARCH_SUCCESS:\n                console.log(action)\n                draft.posts = action.payload.post\n                return\n            case types.GET_SEARCH_FAILURE:\n                console.log(action)\n                return\n            case types.SET_SELECTED_USER:\n                console.log(action)\n                draft.selectedUser = action.payload\n                draft.mentionedUser = false\n                return\n            case types.SET_MENTIONED_USER:\n                draft.mentionedUser = true\n                break\n            default:\n                return state\n        }\n    })\n\nexport default postReducer\n","export const CREATE_POST_INIT = 'CREATE_POST_INIT';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_FAILURE = 'CREATE_POST_FAILURE';\n\nexport const GET_POSTS_INIT = 'GET_POSTS_INIT';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\n\nexport const POST_COMMENT_INIT = 'POST_COMMENT_INIT';\nexport const POST_COMMENT_SUCCESS = 'POST_COMMENT_SUCCESS';\nexport const POST_COMMENT_FAILURE = 'POST_COMMENT_FAILURE';\n\nexport const EDIT_COMMENT_INIT = 'EDIT_COMMENT_INIT';\nexport const EDIT_COMMENT_SUCCESS = 'EDIT_COMMENT_SUCCESS';\nexport const EDIT_COMMENT_FAILURE = 'EDIT_COMMENT_FAILURE';\n\nexport const DELETE_COMMENT_INIT = 'DELETE_COMMENT_INIT';\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport const DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\n\nexport const LIKE_POST_INIT = 'LIKE_POST_INIT';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const DELETE_POST_INIT = 'DELETE_POST_INIT';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\nexport const DISLIKE_POST_INIT = 'DISLIKE_POST_INIT';\nexport const DISLIKE_POST_SUCCESS = 'DISLIKE_POST_SUCCESS';\nexport const DISLIKE_POST_FAILURE = 'DISLIKE_POST_FAILURE';\n\nexport const FETCH_POST_INIT = 'FETCH_POST_INIT';\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\nexport const FETCH_POST_FAILURE = 'FETCH_POST_FAILURE';\n\nexport const ADD_TITLE = 'ADD_TITLE';\nexport const ADD_CONTENT = 'ADD_CONTENT';\n\nexport const INIT_NOTIFICATION = 'INIT_NOTIFICATION';\nexport const NOTIFICATION_SUCCESS = 'NOTIFICATION_SUCCESS';\nexport const NOTIFICATION_FAILURE = 'NOTIFICATION_FAILURE';\n\nexport const INIT_COMMENT_UPDATES = 'INIT_COMMENT_UPDATES';\nexport const COMMENT_UPDATES_SUCCESS = 'COMMENT_UPDATES_SUCCESS';\nexport const COMMENT_UPDATES_FAILURE = 'COMMENT_UPDATES_FAILURE';\n\nexport const REPOST_POST_INIT = 'REPOST_POST_INIT';\nexport const REPOST_POST_SUCCESS = 'REPOST_POST_SUCCESS';\nexport const REPOST_POST_FAILURE = 'REPOST_POST_FAILURE';\n\nexport const UNREPOST_POST_INIT = 'UNREPOST_POST_INIT';\nexport const UNREPOST_POST_SUCCESS = 'UNREPOST_POST_SUCCESS';\nexport const UNREPOST_POST_FAILURE = 'UNREPOST_POST_FAILURE';\n\nexport const COMMENT_REPLY_INIT = 'COMMENT_REPLY_INIT';\nexport const COMMENT_REPLY_SUCCESS = 'COMMENT_REPLY_SUCCESS';\nexport const COMMENT_REPLY_FAILURE = 'COMMENT_REPLY_FAILURE';\n\nexport const REPLY_DELETE_INIT = 'REPLY_DELETE_INIT';\nexport const REPLY_DELETE_SUCCESS = 'REPLY_DELETE_SUCCESS';\nexport const REPLY_DELETE_FAILURE = 'REPLY_DELETE_FAILURE';\n\nexport const SEARCH_POSTS_INIT = 'SEARCH_POSTS_INIT';\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\nexport const SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\n\nexport const GET_SEARCH_INIT = 'GET_SEARCH_INIT';\nexport const GET_SEARCH_SUCCESS = 'GET_SEARCH_SUCCESS';\nexport const GET_SEARCH_FAILURE = 'GET_SEARCH_FAILURE';\n\nexport const SET_SELECTED_USER = 'SET_SELECTED_USER';\n\nexport const SET_MENTIONED_USER = 'SET_MENTIONED_USER';\n","import produce from 'immer'\nimport * as types from '../actionTypes/userActionTypes'\nimport { sessionData, validation } from '../utils'\nimport { IUserState } from '../utils/types'\n\nconst initialState: IUserState = {\n    isAuthenticated: false,\n    googleAccount: null,\n    error: '',\n    emailVerified: false,\n    currentUser: {},\n    profileData: {},\n    profilePage: null,\n    isLoading: true,\n    message: '',\n    usernameError: '',\n    passwordError: '',\n    emailError: '',\n    email: '',\n    password: '',\n    passwordConf: '',\n    passwordConfError: '',\n    getNotifications: [],\n    username: '',\n    notDark: true,\n}\nconst authReducer = (state = initialState, action: any): IUserState =>\n    produce(state, (draft) => {\n        switch (action.type) {\n            case types.SIGN_UP_SUCCESS:\n                // draft.isAuthenticated = sessionData.getLoginStatus();\n                draft.email = ''\n                draft.password = ''\n                draft.username = ''\n                draft.error = ''\n                draft.message = action.user.meta.message\n                draft.isAuthenticated = false\n                break\n            case types.SIGN_UP_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.GET_USER_SUCCESS:\n                const loginStatus = sessionData.getLoginStatus()\n                const emailVerified = sessionData.emailVerifiedStatus()\n                const verified = !!(\n                    loginStatus == true && emailVerified == true\n                )\n                draft.isAuthenticated = verified\n                draft.googleAccount = sessionData.googleIdStatus()\n                draft.currentUser = action.payload\n                break\n            case types.GET_USER_FAILURE:\n                console.log(action)\n                // console.log(sessionData.getLoginStatus());\n                draft.isAuthenticated = false\n                draft.googleAccount = null\n                draft.currentUser = {}\n                break\n            case types.LOG_OUT_SUCCESS:\n                draft.isAuthenticated = false\n                draft.googleAccount = null\n                draft.currentUser = {}\n                break\n            case types.LOG_IN_SUCCESS:\n                // console.log(\"login reducer\", action.payload.login.user.email_verified);\n                const loginStatus2 = sessionData.getLoginStatus()\n                const emailVerified2 = sessionData.emailVerifiedStatus()\n                const verified2 = !!(\n                    loginStatus2 == true && emailVerified2 == true\n                )\n                draft.error = ''\n                draft.googleAccount = sessionData.googleIdStatus()\n                draft.isAuthenticated = verified2\n                draft.isLoading = false\n                break\n            case types.INIT_LOGIN:\n                draft.error = ''\n                break\n            case types.LOG_IN_FAILURE:\n                console.log(action.error)\n                draft.error = action.error\n                break\n            case types.GET_USER_PROFILE_SUCCESS:\n                draft.message = ''\n                draft.profileData = action.payload\n                break\n            case types.GET_USER_PROFILE_FAILURE:\n                draft.error = action.error\n                break\n            case types.UPDATE_USER_PROFILE_SUCCESS:\n                draft.profileData = action.payload.user\n                draft.message = action.payload.message\n                break\n            case types.UPDATE_USER_PROFILE_FAILURE:\n                console.log(action.error)\n                draft.error = action.error\n                break\n            case types.ADD_EMAIL:\n                console.log(validation.validateEmail(action.data))\n                draft.email = action.data\n                draft.emailError = validation.validateEmail(action.data)\n                break\n            case types.ADD_PASSWORD:\n                draft.password = action.data\n                draft.passwordError = validation.validatePassword(action.data)\n                draft.passwordConf = ''\n                draft.passwordConfError = ''\n                break\n            case types.ADD_PASSWORD_CONF:\n                const { password } = state\n                draft.passwordConf = action.data\n                draft.passwordConfError = validation.validatePasswordConf(\n                    action.data,\n                    password\n                )\n                break\n            case types.ADD_USERNAME:\n                draft.username = action.data\n                draft.usernameError = validation.validateUsername(action.data)\n                break\n            case types.EMAIL_CONFIRMATION_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                draft.emailVerified = false\n                break\n            case types.EMAIL_CONFIRMATION_SUCCESS:\n                console.log('email_confirmation', action)\n                draft.message = action.payload.message\n                break\n            case types.RESEND_EMAIL_CONFIRMATION_SUCCESS:\n                console.log(action.payload)\n                draft.message = action.payload.meta.message\n                break\n            case types.RESEND_EMAIL_CONFIRMATION_FAILURE:\n                draft.error = action.error\n                break\n            case types.GET_PROFILE_SUCCESS:\n                console.log(action)\n                draft.profilePage = action.data\n                break\n            case types.GET_PROFILE_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.FOLLOW_USER_SUCCESS:\n                console.log(action.payload)\n                console.log(action)\n                const findKey = action.payload.follow.UserFollowers.findIndex(\n                    (item) => item.followerId === action.id\n                )\n                console.log(findKey)\n                draft.profilePage.UserFollowers = [\n                    ...draft.profilePage.UserFollowers,\n                    action.payload.follow.UserFollowers[findKey],\n                ]\n                draft.profilePage.isFollowing = true\n                break\n            case types.FOLLOW_USER_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.UNFOLLOW_USER_SUCCESS:\n                console.log(action)\n                console.log(action.payload.follow.UserFollowers)\n                draft.profilePage.UserFollowers = [\n                    ...draft.profilePage.UserFollowers.filter(\n                        (item) => item.followerId !== action.id\n                    ),\n                ]\n                draft.profilePage.isFollowing = false\n                break\n            case types.UNFOLLOW_USER_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.GET_NOTIFICATIONS_SUCCESS:\n                draft.getNotifications = action.payload\n                break\n            case types.GET_NOTIFICATIONS_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.MARK_AS_READ_SUCCESS:\n                const markKey = state.getNotifications.findIndex(\n                    (notification) => notification.notificationId === action.id\n                )\n                draft.getNotifications[markKey].status = [\n                    ...action.payload.notifications[markKey].status,\n                ]\n                break\n            case types.MARK_AS_READ_FAILURE:\n                console.log(action)\n                draft.error = action.error\n                break\n            case types.SET_DARK:\n                console.log(action)\n                draft.notDark = !draft.notDark\n                break\n            default:\n                return state\n        }\n    })\n\nexport default authReducer\n","import { combineReducers } from 'redux'\nimport storage from 'redux-persist/lib/storage'\nimport { persistReducer } from 'redux-persist'\nimport postReducer from './postReducer'\nimport authReducer from './userReducer'\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n    whitelist: ['notDark'],\n}\nconst pesistedReducer = persistReducer(persistConfig, authReducer)\n\nconst rootReducer = combineReducers({\n    user: pesistedReducer,\n    post: postReducer,\n})\n\nexport default rootReducer\n","import Axios from '../ourAxios';\n\nexport default {\n    user: {\n        signUp: (userData: any) => Axios.post('/api/v1/users/signup', userData).then((res) => res.data),\n        autoLogin: () => Axios.get('/api/v1/users/auth').then((res) => res.data),\n        logOut: () => Axios.get('/api/v1/users/logout').then((res) => res.data),\n        logIn: (userData: any) => Axios.post('/api/v1/users/login', userData).then((res) => res.data),\n        currentUser: () => Axios.get('/api/v1/users/currentUser').then((res) => res.data),\n        editProfile: () => Axios.get('/api/v1/users/editProfile').then((res) => res.data),\n        getProfile: (username: string) => Axios.get(`/api/v1/users/profile/${username}`).then((res) => res.data),\n        followUser: (username: string) => Axios.post(`/api/v1/users/followUser/${username}`).then((res) => res.data),\n        unfollowUser: (username: string) => Axios.delete(`/api/v1/users/unfollowUser/${username}`).then((res) => res.data),\n        resendConfirmation: () => Axios.post('/api/v1/users/resendConfirmation').then((res) => res.data),\n        emailConfirmation: (userId: number, token: number) => Axios.get(`/api/v1/users/emailConfirmation/${userId}/${token}`).then((res) => res.data),\n        updateProfile: (userData: any) => Axios.put('/api/v1/users/updateProfile', userData).then((res) => res.data),\n        getNotifications: (id: number) => Axios.get(`/api/v1/notifications/${id}`).then((res) => res.data),\n        markAsRead: (id: number) => Axios.post(`/api/v1/notifications/markAsRead/${id}`).then((res) => res.data),\n    },\n    post: {\n        createPost: (postData: any) => Axios.post('/api/v1/posts/createPost', postData).then((res) => res.data),\n        repost: (id: number, userId: number) => Axios.post(`/api/v1/posts/repost/${userId}/${id}`).then((res) => res.data),\n        unrepost: (id: number, userId: number) => Axios.delete(`/api/v1/posts/unRepost/${userId}/${id}`).then((res) => res.data),\n        getPosts: () => Axios.get('/api/v1/posts/getPosts').then((res) => res.data),\n        likePost: (id: number) => Axios.post(`/api/v1/posts/likePost/${id}`).then((res) => res.data),\n        deletePost: (id: number, userId: number) => Axios.delete(`/api/v1/posts/deletePost/${userId}/${id}`).then((res) => res.data),\n        getPost: (id: number) => Axios.get(`/api/v1/posts/post/${id}`).then((res) => res.data),\n        dislikePost: (id: number) => Axios.post(`/api/v1/posts/dislikePost/${id}`).then((res) => res.data),\n        postComment: (commentData: any) => Axios.post('/api/v1/posts/postComment', commentData).then((res) => res.data),\n        deleteComment: (id: number, userId: number) => Axios.delete(`/api/v1/posts/deleteComment/${userId}/${id}`).then((res) => res.data),\n        editComment: (id: number, userId: number, commentData: any) => Axios.put(`/api/v1/posts/editComment/${userId}/${id}`, commentData).then((res) => res.data),\n        replyComment: (postId: number, commentId: number, replyData: any) => Axios.post(`/api/v1/posts/replyComment/${postId}/${commentId}`, replyData).then((res) => res.data),\n        deleteReply: (postId: number, commentId: number, userId: number) => Axios.delete(`/api/v1/posts/deleteReply/${postId}/${userId}/${commentId}`).then((res) => res.data),\n        searchPosts: (query: string) => Axios.get(`/api/v1/posts/searchq=${query}`).then((res) => res.data),\n        searchPostsNull: (query: string) => Axios.get(`/api/v1/posts/searchq=${query}`).then((res) => res.data),\n    },\n};\n","import jwtDecode from 'jwt-decode';\nimport {\n    call, fork, put, takeLatest,\n} from 'redux-saga/effects';\nimport * as actionTypes from '../actions/userActions';\nimport * as types from '../actionTypes/userActionTypes';\nimport api from '../api/api';\nimport { sessionData, setAuthToken } from '../utils';\n\nexport function* registerUser(action) {\n    try {\n        console.log(action);\n        const { history } = action;\n        const user = yield call(api.user.signUp, action.payload);\n        console.log(user);\n        // const token = user.meta.token;\n        // setAuthToken(token);\n        // sessionData.setUserLoggedIn(token);\n        // const decoded = jwtDecode(token);\n        console.log(user);\n        yield put(actionTypes.signUpSuccess({}, user));\n        history.push({ pathname: '/emailConfirmation', state: user });\n    } catch (error) {\n        console.log(error);\n        const errMsg = error.response.data.meta.message;\n        console.log(errMsg);\n        yield put(actionTypes.signUpFailure(errMsg));\n    }\n}\nexport function* getAutoLoginStatus(action) {\n    try {\n        const login = yield call(api.user.currentUser);\n        const { token } = login;\n\n        if (login.user.googleId !== null) {\n            localStorage.setItem('googleId', login.user.googleId);\n        }\n        setAuthToken(token);\n        sessionData.setUserLoggedIn(token);\n        yield put(actionTypes.getUserSuccess(login));\n    } catch (error) {\n        localStorage.clear();\n        yield put(actionTypes.getUserFailure(error.response.data.message));\n    }\n}\n\nexport function* getUserProfile() {\n    try {\n        const profile = yield call(api.user.editProfile);\n        console.log(profile);\n        yield put(actionTypes.getUserProfileSuccess(profile));\n    } catch (error) {\n        yield put(actionTypes.getUserProfileFailure(error));\n    }\n}\n\nexport function* updateUserProfile(action) {\n    try {\n        const profile = yield call(api.user.updateProfile, action.payload);\n        yield put(actionTypes.updateUserProfileSuccess(profile));\n    } catch (err) {\n        yield put(actionTypes.updateUserProfileFailure(err.response.data.meta.message));\n    }\n}\n\nexport function* logOut(action) {\n    try {\n        const { history } = action;\n        const logout = yield call(api.user.logOut);\n        sessionData.setUserLoggdOut();\n        localStorage.removeItem('CurrentUserId');\n        localStorage.removeItem('email_verified');\n        localStorage.removeItem('googleId');\n        yield put(actionTypes.logOutSuccess(logout));\n        history.push('/login');\n    } catch (error) {\n        yield put(actionTypes.logOutFailure(error));\n    }\n}\n\nexport function* login(action) {\n    try {\n        const login = yield call(api.user.logIn, action.payload);\n        console.log('checking login', login);\n        const { token } = login.meta;\n        console.log(token);\n        sessionData.setUserLoggedIn(token);\n        const decoded = jwtDecode(token);\n        setAuthToken(token);\n        console.log('login saga', login.user.email_verified);\n\n        if (login.user.email_verified !== null) {\n            localStorage.setItem('email_verified', login.user.email_verified.toString());\n        }\n        yield put(actionTypes.loginSuccess(decoded));\n    } catch (err) {\n        const errMsg = err.response.data.meta.message;\n        yield put(actionTypes.loginFailure(errMsg));\n    }\n}\n\nexport function* emailConfirmation(action) {\n    try {\n        const emailConfirmation = yield call(api.user.emailConfirmation, action.payload.userId, action.payload.token);\n\n        console.log('email called', emailConfirmation);\n\n        yield put(actionTypes.emailConfirmationSuccess(emailConfirmation));\n    } catch (err) {\n        console.log(err.response.data);\n        console.log(err.response.data.meta.message);\n        yield put(actionTypes.emailConfirmationFailure(err.response.data.meta.message));\n    }\n}\n\nexport function* getProfile(action) {\n    try {\n        const profile = yield call(api.user.getProfile, action.data);\n        yield put(actionTypes.getProfileSuccess(profile));\n    } catch (err) {\n        yield put(actionTypes.getProfileFailure(err));\n    }\n}\n\nexport function* followUser(action) {\n    try {\n        const follow = yield call(api.user.followUser, action.data);\n        console.log(follow);\n        yield put(actionTypes.followUserSuccess(follow, action.id));\n    } catch (err) {\n        yield put(actionTypes.followUserFailure(err));\n    }\n}\n\nexport function* unfollowUser(action) {\n    try {\n        const unfollow = yield call(api.user.unfollowUser, action.data);\n        console.log(unfollow);\n        yield put(actionTypes.unfollowUserSuccess(unfollow, action.id));\n    } catch (err) {\n        yield put(actionTypes.followUserFailure(err));\n    }\n}\n\nexport function* resendEmailConfirmation(action) {\n    try {\n        const resendEmailConfirmation = yield call(api.user.resendConfirmation);\n        console.log(resendEmailConfirmation);\n        yield put(actionTypes.resendEmailConfirmationSuccess(resendEmailConfirmation));\n    } catch (err) {\n        console.log(err);\n        yield put(actionTypes.resendEmailConfirmationFailure(err));\n    }\n}\n\nexport function* getNotifications(action) {\n    try {\n        const notifications = yield call(api.user.getNotifications, action.payload);\n        yield put(actionTypes.getNotificationsSuccess(notifications));\n    } catch (err) {\n        yield put(actionTypes.getNotificationsFailure(err));\n    }\n}\n\nexport function* markAsRead(action) {\n    console.log(action);\n\n    try {\n        const mark = yield call(api.user.markAsRead, action.payload);\n        console.log(mark);\n        yield put(actionTypes.markAsReadSuccess(mark, action.payload));\n    } catch (err) {\n        yield put(actionTypes.markAsReadFailure(err));\n    }\n}\n\nexport function* watchNotifications() {\n    yield takeLatest(types.INIT_GET_NOTIFICATIONS, getNotifications);\n}\n\nexport function* watchMarkAsRead() {\n    yield takeLatest(types.MARK_AS_READ_INIT, markAsRead);\n}\n\nexport function* watchLogin() {\n    yield takeLatest(types.LOG_IN_INIT, login);\n}\n\nexport function* watchFollowUser() {\n    yield takeLatest(types.FOLLOW_USER_INIT, followUser);\n}\nexport function* watchUnFollowUser() {\n    yield takeLatest(types.UNFOLLOW_USER_INIT, unfollowUser);\n}\n\nexport function* watchProfile() {\n    yield takeLatest(types.GET_PROFILE_INIT, getProfile);\n}\n\nexport function* watchResendEmailConfirmation() {\n    yield takeLatest(types.RESEND_EMAIL_CONFIRMATION_INIT, resendEmailConfirmation);\n}\nexport function* watchEmailConfirmation() {\n    yield takeLatest(types.EMAIL_CONFIRMATION_INIT, emailConfirmation);\n}\nexport function* watchUpdateProfile() {\n    yield takeLatest(types.UPDATE_USER_PROFILE, updateUserProfile);\n}\nexport function* watchEditProfile() {\n    yield takeLatest(types.GET_USER_PROFILE, getUserProfile);\n}\nexport function* watchAuthLogin() {\n    yield takeLatest(types.GET_USER, getAutoLoginStatus);\n}\nexport function* watchUserRegister() {\n    yield takeLatest(types.SIGN_UP_INIT, registerUser);\n}\nexport function* watchLogout() {\n    yield takeLatest(types.LOG_OUT_INIT, logOut);\n}\n// export function*\nexport default function* () {\n    yield fork(watchUserRegister);\n    yield fork(watchMarkAsRead);\n    yield fork(watchNotifications);\n    yield fork(watchAuthLogin);\n    yield fork(watchFollowUser);\n    yield fork(watchUnFollowUser);\n    yield fork(watchResendEmailConfirmation);\n    yield fork(watchProfile);\n    yield fork(watchLogout);\n    yield fork(watchLogin);\n    yield fork(watchEmailConfirmation);\n    yield fork(watchEditProfile);\n    yield fork(watchUpdateProfile);\n}\n","import * as types from '../actionTypes/postActionTypes';\n\nexport const createPostInit = (payload: object) => ({\n    type: types.CREATE_POST_INIT,\n    payload,\n});\n\nexport const createPostSuccess = (payload: object) => ({\n    type: types.CREATE_POST_SUCCESS,\n    payload,\n});\n\nexport const createPostFailure = (error: object) => ({\n    type: types.CREATE_POST_FAILURE,\n    error,\n});\n\nexport const getPostsInit = () => ({\n    type: types.GET_POSTS_INIT,\n});\n\nexport const getPostsSuccess = (payload: object) => ({\n    type: types.GET_POSTS_SUCCESS,\n    payload,\n});\n\nexport const getPostsFailure = (error: object) => ({\n    type: types.GET_POSTS_FAILURE,\n    error,\n});\n\nexport const likePostInit = (payload: number) => ({\n    type: types.LIKE_POST_INIT,\n    payload,\n});\n\nexport const likePostSuccess = (payload: object) => ({\n    type: types.LIKE_POST_SUCCESS,\n    payload,\n});\n\nexport const likePostFailiure = (error: object) => ({\n    type: types.LIKE_POST_FAILURE,\n    error,\n});\n\nexport const dislikePostInit = (payload: number) => ({\n    type: types.DISLIKE_POST_INIT,\n    payload,\n});\n\nexport const dislikePostSuccess = (payload: object) => ({\n    type: types.DISLIKE_POST_SUCCESS,\n    payload,\n});\n\nexport const dislikePostFailiure = (error: object) => ({\n    type: types.DISLIKE_POST_FAILURE,\n    error,\n});\n\nexport const fetchPostInit = (payload: number) => ({\n    type: types.FETCH_POST_INIT,\n    payload,\n});\n\nexport const fetchPostSuccess = (payload: object) => ({\n    type: types.FETCH_POST_SUCCESS,\n    payload,\n});\n\nexport const fetchPostFailure = (error: object) => ({\n    type: types.FETCH_POST_FAILURE,\n    error,\n});\n\nexport const deletePostInit = (payload: number, userId: number) => ({\n    type: types.DELETE_POST_INIT,\n    payload,\n    userId,\n});\n\nexport const deletePostSuccess = (payload: object, id: number) => ({\n    type: types.DELETE_POST_SUCCESS,\n    payload,\n    id,\n});\n\nexport const deletePostFailure = (error: object) => ({\n    type: types.DELETE_POST_FAILURE,\n    error,\n});\n\nexport const postCommentInit = (payload: object) => ({\n    type: types.POST_COMMENT_INIT,\n    payload,\n});\n\nexport const deleteCommentInit = (payload: number, postId: number, userId: number) => ({\n    type: types.DELETE_COMMENT_INIT,\n    payload,\n    postId,\n    userId,\n});\n\nexport const deleteCommentSuccess = (payload: object, id: number, postId: number) => ({\n    type: types.DELETE_COMMENT_SUCCESS,\n    payload,\n    id,\n    postId,\n});\n\nexport const deleteCommentFailure = (error: object) => ({\n    type: types.DELETE_COMMENT_FAILURE,\n    error,\n});\n\nexport const postCommentSuccess = (payload: object, id: number) => ({\n    type: types.POST_COMMENT_SUCCESS,\n    payload,\n    id,\n});\n\nexport const postCommentFailure = (error: object) => ({\n    type: types.POST_COMMENT_FAILURE,\n    error,\n});\n\nexport const addTitle = (data: string) => ({\n    type: types.ADD_TITLE,\n    data,\n});\n\nexport const addContent = (data: string) => ({\n    type: types.ADD_CONTENT,\n    data,\n});\nexport const notificationInit = () => ({\n    type: types.INIT_NOTIFICATION,\n});\n\nexport const notificationSuccess = (payload: object) => ({\n    type: types.NOTIFICATION_SUCCESS,\n    payload,\n});\n\nexport const notificationFailure = (err: object) => ({\n    type: types.NOTIFICATION_FAILURE,\n    err,\n});\n\nexport const initCommentUpdates = () => ({\n    type: types.INIT_COMMENT_UPDATES,\n});\n\nexport const commentUpdatesSuccess = (payload: object) => ({\n    type: types.COMMENT_UPDATES_SUCCESS,\n    payload,\n});\n\nexport const commentUpdatesFailure = (err: object) => ({\n    type: types.COMMENT_UPDATES_FAILURE,\n    err,\n});\n\nexport const editCommentInit = (payload) => ({\n    type: types.EDIT_COMMENT_INIT,\n    payload,\n});\n\nexport const editCommentSuccess = (payload: object) => ({\n    type: types.EDIT_COMMENT_SUCCESS,\n    payload,\n});\n\nexport const editCommentFailure = (err: object) => ({\n    type: types.EDIT_COMMENT_FAILURE,\n    err,\n});\n\nexport const repostPostInit = (payload: number, id: number) => ({\n    type: types.REPOST_POST_INIT,\n    payload,\n    id,\n});\n\nexport const repostPostSuccess = (payload: object) => ({\n    type: types.REPOST_POST_SUCCESS,\n    payload,\n});\n\nexport const repostPostFailure = (error: object) => ({\n    type: types.REPOST_POST_FAILURE,\n    error,\n});\n\nexport const unrepostPostInit = (payload: number, id: number) => ({\n    type: types.UNREPOST_POST_INIT,\n    payload,\n    id,\n});\n\nexport const unrepostPostSuccess = (payload: object) => ({\n    type: types.UNREPOST_POST_SUCCESS,\n    payload,\n});\n\nexport const unrepostPostFailure = (error: object) => ({\n    type: types.UNREPOST_POST_FAILURE,\n    error,\n});\n\nexport const commentReplyInit = (payload: object) => ({\n    type: types.COMMENT_REPLY_INIT,\n    payload,\n});\n\nexport const commentReplySuccess = (payload: object) => ({\n    type: types.COMMENT_REPLY_SUCCESS,\n    payload,\n});\n\nexport const commentReplyFailure = (error: object) => ({\n    type: types.COMMENT_REPLY_FAILURE,\n    error,\n});\n\nexport const deleteReplyInit = (payload: object) => ({\n    type: types.REPLY_DELETE_INIT,\n    payload,\n});\n\nexport const deleteReplySuccess = (payload: object) => ({\n    type: types.REPLY_DELETE_SUCCESS,\n    payload,\n});\n\nexport const deleteReplyFailure = (payload: object) => ({\n    type: types.REPLY_DELETE_FAILURE,\n    payload,\n});\n\nexport const searchPostsInit = (payload: string) => ({\n    type: types.SEARCH_POSTS_INIT,\n    payload,\n});\n\nexport const searchPostsSuccess = (payload: object) => ({\n    type: types.SEARCH_POSTS_SUCCESS,\n    payload,\n});\n\nexport const searchPostsFailure = (error: object) => ({\n    type: types.SEARCH_POSTS_FAILURE,\n    error,\n});\n\nexport const getSearchInit = (payload: string) => ({\n    type: types.GET_SEARCH_INIT,\n    payload,\n});\n\nexport const getSearchSuccess = (payload: object) => ({\n    type: types.GET_SEARCH_SUCCESS,\n    payload,\n});\n\nexport const getSearchFailure = (error: object) => ({\n    type: types.GET_SEARCH_FAILURE,\n    error,\n});\n\nexport const setSelectedUser = (payload: string) => ({\n    type: types.SET_SELECTED_USER,\n    payload,\n});\n\nexport const setMentionedUser = () => ({\n    type: types.SET_MENTIONED_USER,\n});\n","import Pusher from 'pusher-js';\nimport { toast } from 'react-toastify';\nimport { eventChannel } from 'redux-saga';\nimport {\n    call, fork, put, take, takeLatest,\n} from 'redux-saga/effects';\nimport * as actionTypes from '../actions/postActions';\nimport * as types from '../actionTypes/postActionTypes';\nimport api from '../api/api';\n\ntype commentType = {\n  body: string;\n  userId: number;\n  currentUser: number;\n  commenterId: number;\n};\n\nfunction createEventChannel(pusher: Pusher) {\n    return eventChannel((emitter) => {\n        const channel = pusher.subscribe('notification');\n        channel.bind('my-event', (data: commentType) => {\n            console.log('sdd', data);\n            // we need an emitter for notificationSuccess method to work\n            emitter(data.body);\n\n            toast.success(data.body);\n        });\n        channel.bind('user-mention', (data: string) => {\n            console.log('sdd usermention', data);\n            // we need an emitter for notificationSuccess method to work\n            emitter(data);\n            toast.info(data);\n        });\n\n        return () => {\n            channel.unbind('my-event', emitter);\n            channel.unbind('user-mention', emitter);\n        };\n    });\n}\n\nfunction createCommentChannel(pusher: Pusher) {\n    return eventChannel((emitter) => {\n        const channel = pusher.subscribe('post-comments');\n        channel.bind('new-comment', (data: string) => {\n            // we need an emitter for notificationSuccess method to work\n            emitter(data);\n        });\n\n        return () => {\n            channel.unbind('new-comment', emitter);\n        };\n    });\n}\n\nexport function* commentUpdates() {\n    try {\n        const pusherClient = new Pusher('0d45d56558d5bdcbc179', {\n            cluster: 'us2',\n            forceTLS: true,\n        });\n        const channel = yield call(createCommentChannel, pusherClient);\n\n        while (true) {\n            const data = yield take(channel);\n            console.log(data);\n            yield put(actionTypes.commentUpdatesSuccess(data));\n        }\n    } catch (err) {\n        yield put(actionTypes.commentUpdatesFailure(err));\n    }\n}\n\nexport function* getNotification() {\n    try {\n        const pusherClient = new Pusher('0d45d56558d5bdcbc179', {\n            cluster: 'us2',\n            forceTLS: true,\n        });\n        const channel = yield call(createEventChannel, pusherClient);\n\n        while (true) {\n            const data = yield take(channel);\n            yield put(actionTypes.notificationSuccess(data));\n        }\n    } catch (err) {\n        yield put(actionTypes.notificationFailure(err));\n    }\n}\n\nexport function* getPosts() {\n    try {\n        const posts = yield call(api.post.getPosts); // call api from axios express back end\n        yield put(actionTypes.getPostsSuccess(posts));\n    } catch (error) {\n        yield put(actionTypes.getPostsFailure(error));\n    }\n}\n\nexport function* fetchPost(action) {\n    try {\n        const postPage = yield call(api.post.getPost, action.payload);\n        yield put(actionTypes.fetchPostSuccess(postPage));\n    } catch (error) {\n        yield put(actionTypes.fetchPostFailure(error));\n    }\n}\nexport function* createPost(action) {\n    try {\n        const post = yield call(api.post.createPost, action.payload);\n        yield put(actionTypes.createPostSuccess(post));\n    } catch (error) {\n        console.log(error);\n        yield put(actionTypes.createPostFailure(error.response.data.meta.message));\n    }\n}\n\nexport function* editComment(action) {\n    try {\n        console.log(action);\n        const data = action.payload;\n        const comment = yield call(api.post.editComment, action.payload.id, action.payload.userId, { commentData: action.payload.comment_body });\n        yield put(actionTypes.editCommentSuccess({ comment, data }));\n    } catch (err) {\n        yield put(actionTypes.editCommentFailure(err));\n    }\n}\n\nexport function* likePost(action) {\n    try {\n        console.log(action);\n        const like = yield call(api.post.likePost, action.payload);\n        console.log(like);\n        const id = action.payload;\n        yield put(actionTypes.likePostSuccess({ like, id }));\n    } catch (error) {\n        console.log(error);\n        yield put(actionTypes.likePostFailiure(error.response.data));\n    }\n}\nexport function* dislikePost(action) {\n    try {\n        console.log(action);\n        const dislike = yield call(api.post.dislikePost, action.payload);\n        console.log(dislike);\n        const id = action.payload;\n        yield put(actionTypes.dislikePostSuccess({ dislike, id }));\n    } catch (error) {\n        console.log('yrsgdgdgd', error.response.data);\n        yield put(actionTypes.dislikePostFailiure(error.response.data));\n    }\n}\n\nexport function* deletePost(action) {\n    const deleteConfirmation = window.confirm('Are you sure you want to delete your post ?');\n\n    if (deleteConfirmation) {\n        try {\n            const deletePost = yield call(api.post.deletePost, action.payload, action.userId);\n            yield put(actionTypes.deletePostSuccess(deletePost, action.payload));\n        } catch (error) {\n            yield put(actionTypes.dislikePostFailiure(error));\n        }\n    } else {\n        return null;\n    }\n}\n\nexport function* postComment(action) {\n    try {\n        const data = yield call(api.post.postComment, action.payload);\n        yield put(actionTypes.postCommentSuccess(data.comment, action.payload.id));\n    } catch (error) {\n        yield put(actionTypes.postCommentFailure(error.response.data));\n    }\n}\n\nexport function* deleteComment(action) {\n    const deleteConfirmation = window.confirm('Are you sure you want to delete your comment ?');\n    console.log(action);\n\n    if (deleteConfirmation) {\n        try {\n            const deleteComment = yield call(api.post.deleteComment, action.payload, action.userId);\n            yield put(actionTypes.deleteCommentSuccess(deleteComment, action.payload, action.postId));\n        } catch (error) {\n            yield put(actionTypes.deleteCommentFailure(error));\n        }\n    } else {\n        return null;\n    }\n}\n\nexport function* repostPost(action) {\n    try {\n        console.log(action);\n        const userId = action.payload;\n        const postId = action.id;\n        const repost = yield call(api.post.repost, userId, postId);\n        yield put(actionTypes.repostPostSuccess(repost));\n    } catch (err) {\n        yield put(actionTypes.repostPostFailure(err));\n    }\n}\nexport function* unRepostPost(action) {\n    try {\n        console.log(action);\n        const userId = action.payload;\n        const postId = action.id;\n        const repost = yield call(api.post.unrepost, userId, postId);\n\n        yield put(actionTypes.unrepostPostSuccess(repost));\n    } catch (err) {\n        yield put(actionTypes.unrepostPostFailure(err));\n    }\n}\n\nexport function* replyComment(action) {\n    try {\n        const { postId } = action.payload;\n        const { commentId } = action.payload;\n        const { replyBody } = action.payload;\n        const replyComment = yield call(api.post.replyComment, postId, commentId, { replyBody });\n        yield put(actionTypes.commentReplySuccess(replyComment));\n    } catch (err) {\n        yield put(actionTypes.commentReplyFailure(err));\n    }\n}\n\nexport function* deleteReply(action) {\n    const deleteConfirmation = window.confirm('Are you sure you want to delete your reply ?');\n\n    if (deleteConfirmation) {\n        try {\n            const { postId } = action.payload;\n            const { replyId } = action.payload;\n            const { userId } = action.payload;\n            const deleteReply = yield call(api.post.deleteReply, postId, replyId, userId);\n            const data = {\n                deleteReply,\n                action,\n            };\n            yield put(actionTypes.deleteReplySuccess(data));\n        } catch (err) {\n            yield put(actionTypes.deleteReplyFailure(err));\n        }\n    } else {\n        return null;\n    }\n}\n\nexport function* searchPosts(action) {\n    try {\n        if (action.payload === '') {\n            const search = yield call(api.post.searchPostsNull, action.payload);\n            yield put(actionTypes.searchPostsSuccess(search));\n        } else {\n            const search = yield call(api.post.searchPosts, action.payload);\n            yield put(actionTypes.searchPostsSuccess(search));\n        }\n    } catch (err) {\n        yield put(actionTypes.searchPostsFailure(err));\n    }\n}\n\nexport function* searchPageResults(action) {\n    const query = action.payload;\n\n    try {\n        const search = yield call(api.post.searchPosts, query);\n        yield put(actionTypes.getSearchSuccess(search));\n    } catch (err) {\n        console.log('error here', err);\n        yield put(actionTypes.getSearchFailure(err));\n    }\n}\n\nexport function* watchSearchPosts() {\n    yield takeLatest(types.SEARCH_POSTS_INIT, searchPosts);\n}\nexport function* watchSearchPageResults() {\n    yield takeLatest(types.GET_SEARCH_INIT, searchPageResults);\n}\nexport function* watchDeleteReply() {\n    yield takeLatest(types.REPLY_DELETE_INIT, deleteReply);\n}\n\nexport function* watchFetchPost() {\n    yield takeLatest(types.FETCH_POST_INIT, fetchPost);\n}\nexport function* watchReplyComment() {\n    yield takeLatest(types.COMMENT_REPLY_INIT, replyComment);\n}\n// dont use a watcher for notifications, it will keep calling itself\n// export function* watchNotifications() {\n//   yield takeEvery(types.INIT_NOTIFICATION, getNotification)\n// }\nexport function* watchRepostPost() {\n    yield takeLatest(types.REPOST_POST_INIT, repostPost);\n}\nexport function* watchUnRepostPost() {\n    yield takeLatest(types.UNREPOST_POST_INIT, unRepostPost);\n}\nexport function* watchEditComment() {\n    yield takeLatest(types.EDIT_COMMENT_INIT, editComment);\n}\n\nexport function* watchDeletePost() {\n    yield takeLatest(types.DELETE_POST_INIT, deletePost);\n}\nexport function* watchDeleteComment() {\n    yield takeLatest(types.DELETE_COMMENT_INIT, deleteComment);\n}\nexport function* watchLikePost() {\n    yield takeLatest(types.LIKE_POST_INIT, likePost);\n}\nexport function* watchdisLikePost() {\n    yield takeLatest(types.DISLIKE_POST_INIT, dislikePost);\n}\nexport function* watchPostComment() {\n    yield takeLatest(types.POST_COMMENT_INIT, postComment);\n}\nexport function* watchPosts() {\n    yield takeLatest(types.GET_POSTS_INIT, getPosts);\n}\nexport function* watchCreatePost() {\n    yield takeLatest(types.CREATE_POST_INIT, createPost);\n}\n\n// export function*\nexport default function* () {\n    yield fork(watchPosts);\n    yield fork(watchSearchPageResults);\n    yield fork(watchReplyComment);\n    yield fork(watchDeleteReply);\n    yield fork(commentUpdates);\n    yield fork(watchRepostPost);\n    yield fork(getNotification);\n    yield fork(watchUnRepostPost);\n    yield fork(watchPostComment);\n    yield fork(watchDeletePost);\n    yield fork(watchFetchPost);\n    yield fork(watchDeleteComment);\n    yield fork(watchCreatePost);\n    yield fork(watchLikePost);\n    yield fork(watchEditComment);\n    yield fork(watchdisLikePost);\n    yield fork(watchSearchPosts);\n}\n","import auth from './auth';\nimport post from './post';\n\nexport default [auth, post];\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './reducers';\n// NEW CODE: You can also remove the redux-thunk dependency\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nexport const persitor = persistStore(store);\nsagas.map(sagaMiddleware.run);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst TheLink = styled(Link)`\n    color: #333;\n    text-decoration: none;\n`;\nconst OurLink = (props: any) => (\n    <TheLink {...props}>\n        {' '}\n        {props.title}\n    </TheLink>\n);\n\nexport default OurLink;\n","import { createSelector } from 'reselect'\n\n// calling educer postInitialState, so it will have access to initialState properties\nconst postSelector = (state: any) => state.post\nconst userSelector = (state: any) => state.user\nconst postSelectorId = (state: any) => state.post\n\nexport const userStore = createSelector(userSelector, (state) => state)\nexport const profile = createSelector(postSelector, (state) => state.postPage)\n\nexport const getPosts =\n    // this gets all posts\n    createSelector(postSelector, (state) => state.posts)\n\nexport const getUserLikedPosts = (params) =>\n    createSelector(postSelector, (state) =>\n        state.posts.filter((post) =>\n            post.Likes.find((like) => like.userId == params.userId)\n        )\n    )\n\nexport const getUserPosts = (params) =>\n    createSelector(postSelector, (state) =>\n        state.posts.filter(\n            (post) => post.userId == params.userId || post.RepostedByMe == true\n        )\n    )\n\nexport const getProfileData = createSelector(\n    userSelector,\n    (state) => state.profileData\n)\nexport const getDark = createSelector(userSelector, (state) => state.notDark)\n\nexport const getNotification = createSelector(\n    postSelector,\n    (state) => state.notification\n)\n\nexport const getIsNotified = createSelector(\n    postSelector,\n    (state) => state.isNotified\n)\nexport const userConfirmation = createSelector(\n    userSelector,\n    (state) => state.message\n)\nexport const getGoogleAccount = createSelector(\n    userSelector,\n    (state) => state.googleAccount\n)\nexport const userError = createSelector(userSelector, (state) => state.error)\nexport const postError = createSelector(postSelector, (state) => state.error)\nexport const userMessage = createSelector(\n    userSelector,\n    (state) => state.message\n)\n\n// will sort through original posts array by highest likeCount in DESC order, showing only 2\nexport const getPopPosts = createSelector(postSelector, (state) =>\n    state.posts\n        .filter((item) => item.likeCounts > 1)\n        .sort((a, b) => b.likeCounts - a.likeCounts)\n        .slice(0, 2)\n)\nexport const getUser = createSelector(\n    userSelector,\n    (state) => state.currentUser.user\n)\nexport const getTitleError = createSelector(\n    postSelector,\n    (state) => state.titleError\n)\nexport const getBodyError = createSelector(\n    postSelector,\n    (state) => state.bodyError\n)\nexport const title = createSelector(postSelector, (state) => state.title)\nexport const postContent = createSelector(\n    postSelector,\n    (state) => state.postContent\n)\nexport const isLoading = createSelector(\n    postSelector,\n    (state) => state.isLoading\n)\n\nexport const getNotifications = createSelector(\n    userSelector,\n    (state) => state.getNotifications\n)\n\nexport const searchQuery = createSelector(\n    postSelector,\n    (state) => state.searchValue\n)\nexport const results = createSelector(postSelector, (state) => state.results)\nexport const searchPageResults = createSelector(\n    postSelector,\n    (state) => state.searchPageResults\n)\nexport const getSelectedUser = createSelector(\n    postSelector,\n    (state) => state.selectedUser\n)\nexport const mentionUser = createSelector(\n    postSelector,\n    (state) => state.mentionedUser\n)\nexport const getCommenterId = createSelector(\n    postSelector,\n    (state) => state.commenterId\n)\nexport const fetchRelatedUsers = createSelector(postSelector, (state) => {\n    // const users = state.posts.flatMap((x) => [x.author.username].concat(x.Comments.flatMap((y) => y.commentReplies.map((z) => z.author.username).concat(y.author.username))));\n    function removeDuplicatesBy(keyFn, array) {\n        const mySet = new Set()\n\n        return array.filter((x) => {\n            const key = keyFn(x)\n            const isNew = !mySet.has(key)\n\n            if (isNew) mySet.add(key)\n\n            return isNew\n        })\n    }\n\n    // Recursion\n    function recursGetUsers(array) {\n        if (!array) return []\n\n        return array.flatMap((v) =>\n            [v.author.username]\n                .concat(recursGetUsers(v.Comments))\n                .concat(recursGetUsers(v.commentReplies))\n        )\n    }\n\n    const users = recursGetUsers(state.posts)\n    const newUsers = removeDuplicatesBy((x) => x, users)\n\n    return newUsers\n})\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNotifications } from '../selectors/selectors';\nimport { notificationInit } from '../actions/postActions';\n\nfunction useNotificationHook() {\n    const dispatch = useDispatch();\n    const notifications = useSelector(getNotifications);\n    React.useEffect(() => {\n        dispatch(notificationInit());\n    }, []);\n\n    return [notifications];\n}\n\nexport default useNotificationHook;\n","import { useDispatch, useSelector } from 'react-redux'\nimport useNotificationHook from './notificationHook'\nimport { getUserProfile, updateUserProfile } from '../actions/userActions'\nimport {\n    likePostInit,\n    dislikePostInit,\n    deletePostInit,\n    repostPostInit,\n    unrepostPostInit,\n    commentReplyInit,\n    setSelectedUser,\n    searchPostsInit,\n    deleteReplyInit,\n    createPostInit,\n    setMentionedUser,\n    deleteCommentInit,\n    editCommentInit,\n    postCommentInit,\n    getSearchInit,\n} from '../actions/postActions'\nimport {\n    getIsNotified,\n    searchQuery,\n    getUser,\n    getPosts,\n    getPopPosts,\n    isLoading,\n    postError,\n    userError,\n    getBodyError,\n    getSelectedUser,\n    mentionUser,\n    userMessage,\n    getTitleError,\n    postContent,\n    searchPageResults,\n    getProfileData,\n    results,\n    title,\n    fetchRelatedUsers,\n    getCommenterId,\n} from '../selectors/selectors'\n\nfunction useStoreMethods() {\n    const dispatch = useDispatch()\n    const [notifications] = useNotificationHook()\n    const isNotified = useSelector(getIsNotified)\n    const user = useSelector(getUser)\n    const likePost = (id: number) => dispatch(likePostInit(id))\n    const dislikePost = (id: number) => dispatch(dislikePostInit(id))\n    const deletePost = (id: number, userId: number) =>\n        dispatch(deletePostInit(id, userId))\n    const deleteComment = (id: number, postId: number, userId: number) =>\n        dispatch(deleteCommentInit(id, postId, userId))\n    const postComment = (commentData: object) =>\n        dispatch(postCommentInit(commentData))\n    const editComment = (commentData: object) =>\n        dispatch(editCommentInit(commentData))\n    const createPost = (postData: object) => dispatch(createPostInit(postData))\n    const rePost = (id: number, userId: number) =>\n        dispatch(repostPostInit(id, userId))\n    const unRepost = (id: number, userId: number) =>\n        dispatch(unrepostPostInit(id, userId))\n    const getProfile = () => dispatch(getUserProfile())\n    const updateProfile = (userData) => dispatch(updateUserProfile(userData))\n    const replyComm = (data: object) => dispatch(commentReplyInit(data))\n    const deleteRep = (data: object) => dispatch(deleteReplyInit(data))\n    const searchQ = (query: string) => dispatch(searchPostsInit(query))\n    const getSearch = (query: string) => dispatch(getSearchInit(query))\n    const setSelectedOptionValue = (optionValue: string) =>\n        dispatch(setSelectedUser(optionValue))\n    const setMentioned = () => dispatch(setMentionedUser())\n    const ourTitle = useSelector(title)\n    const titleError = useSelector(getTitleError)\n    const ourBodyError = useSelector(getBodyError)\n    const ourPostContent = useSelector(postContent)\n    const profileData = useSelector(getProfileData)\n    const popPosts = useSelector(getPopPosts)\n    const posts = useSelector(getPosts)\n    const userErr = useSelector(userError)\n    const message = useSelector(userMessage)\n    const errPost = useSelector(postError)\n    const loading = useSelector(isLoading)\n    const query = useSelector(searchQuery)\n    const postResults = useSelector(results)\n    const searchResults = useSelector(searchPageResults)\n    const mentionUsers = useSelector(fetchRelatedUsers)\n    const selectedUser = useSelector(getSelectedUser)\n    const mentionedUser = useSelector(mentionUser)\n    const commenterId = useSelector(getCommenterId)\n\n    return {\n        posts,\n        notifications,\n        user,\n        mentionUsers,\n        setSelectedOptionValue,\n        setMentioned,\n        commenterId,\n        mentionedUser,\n        loading,\n        errPost,\n        message,\n        userErr,\n        query,\n        selectedUser,\n        searchResults,\n        isNotified,\n        getProfile,\n        setSelectedUser,\n        getSearch,\n        postResults,\n        searchQ,\n        deleteRep,\n        profileData,\n        updateProfile,\n        replyComm,\n        likePost,\n        dislikePost,\n        deletePost,\n        deleteComment,\n        postComment,\n        editComment,\n        createPost,\n        rePost,\n        unRepost,\n        ourTitle,\n        titleError,\n        popPosts,\n        ourBodyError,\n        ourPostContent,\n    }\n}\n\nexport default useStoreMethods\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport { OurDateType } from '../utils/types';\n\nconst OurDate: React.FC<OurDateType> = ({ type = 'post-date', createdAt }) => (\n    <>\n        {type === 'post-date' && (\n            <Typography variant=\"subtitle1\" align=\"left\">\n                {moment(createdAt).calendar()}\n            </Typography>\n        )}\n\n        {type === 'comment-date' && (\n            <Typography id=\"date\" style={{ fontSize: '12px' }} variant=\"caption\" align=\"left\">\n                {moment(createdAt).calendar()}\n            </Typography>\n        )}\n\n        {type === 'reply-date' && (\n            <Typography style={{ fontSize: '12px' }} variant=\"caption\" align=\"left\">\n                {moment(createdAt).calendar()}\n            </Typography>\n        )}\n    </>\n);\n\nexport default OurDate;\n","import React, { Fragment, useState } from 'react'\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\nimport EditIcon from '@material-ui/icons/Edit'\nimport ClearIcon from '@material-ui/icons/Clear'\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline'\nimport Typography from '@material-ui/core/Typography'\nimport ReplyIcon from '@material-ui/icons/Reply'\nimport styled from 'styled-components'\nimport storeHooks from './storeHooks'\nimport { ButtonFunctionProps } from '../utils/types'\n\nconst ButtonSpan = styled.span`\n    cursor: pointer;\n    padding-right: 20px;\n`\n\nconst ButtonFunction: React.FC<ButtonFunctionProps> = ({\n    type,\n    onReply,\n    update,\n    postId,\n    userId,\n    comment,\n    setEditComment,\n    deleteReply,\n    replyId,\n    replyUserId,\n}) => {\n    const { deleteComment } = storeHooks()\n    return (\n        <>\n            {type === 'reply' && (\n                <ButtonSpan onClick={() => onReply?.()}>\n                    <ReplyIcon color=\"primary\" style={{ margin: '-5px 0px' }} />{' '}\n                    <span>Reply</span>\n                </ButtonSpan>\n            )}\n            {type === 'delete' && (\n                <ButtonSpan\n                    onClick={() => deleteComment(comment?.id, postId, userId)}\n                >\n                    <DeleteOutlineOutlinedIcon\n                        style={{ margin: '-5px 0px' }}\n                        color=\"primary\"\n                    />{' '}\n                    <span>Delete</span>\n                </ButtonSpan>\n            )}\n            {type === 'edit' && (\n                <ButtonSpan onClick={() => setEditComment?.(true)}>\n                    <EditIcon style={{ margin: '-5px 0px' }} color=\"primary\" />{' '}\n                    <span>Edit</span>\n                </ButtonSpan>\n            )}\n            {type === 'cancel' && (\n                <ButtonSpan onClick={() => setEditComment?.(false)}>\n                    <ClearIcon style={{ margin: '-7px 0px' }} color=\"primary\" />{' '}\n                    <span>Cancel</span>\n                </ButtonSpan>\n            )}\n            {type === 'update' && (\n                <ButtonSpan onClick={() => update?.(comment)}>\n                    <AddCircleOutlineIcon\n                        style={{ margin: '-7px 0px' }}\n                        color=\"primary\"\n                    />{' '}\n                    <span>Update</span>\n                </ButtonSpan>\n            )}\n            {type === 'deleteReply' && (\n                <Typography\n                    style={{ display: 'inline-block', float: 'right' }}\n                    align=\"right\"\n                >\n                    <ButtonSpan\n                        onClick={() =>\n                            deleteReply?.(\n                                replyId,\n                                postId,\n                                replyUserId,\n                                comment?.id\n                            )\n                        }\n                    >\n                        <DeleteOutlineOutlinedIcon\n                            style={{ margin: '-5px 0px' }}\n                            color=\"primary\"\n                        />{' '}\n                        <span>Delete</span>\n                    </ButtonSpan>\n                </Typography>\n            )}\n        </>\n    )\n}\n\nexport default ButtonFunction\n","import React, { Fragment } from 'react'\nimport FavoriteIcon from '@material-ui/icons/Favorite'\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder'\nimport styled from 'styled-components'\nimport { LikeButtonPropsType } from '../utils/types'\n\nconst LikeContainer = styled.div`\n    cursor: pointer;\n`\n\nconst LikeCount = styled.span`\n    padding: 12px;\n`\nconst FavIcon = styled(FavoriteIcon)`\n    color: red;\n    cursor: pointer;\n    margin: -7px;\n`\nconst FavBorderIcon = styled(FavoriteBorderIcon)`\n    color: red;\n    cursor: pointer;\n    margin: -7px;\n`\n\nconst LikeButton: React.FC<LikeButtonPropsType> = ({\n    dislike,\n    postId,\n    like,\n    likeCounts,\n    type,\n}) => (\n    <>\n        {type === 'liked' && (\n            <LikeContainer onClick={() => dislike?.(postId!)}>\n                <LikeCount>Likes {likeCounts} </LikeCount>\n                <FavIcon />\n            </LikeContainer>\n        )}\n        {type === 'unliked' && (\n            <LikeContainer onClick={() => like?.(postId!)}>\n                <LikeCount>Likes {likeCounts} </LikeCount>\n                <FavBorderIcon />\n            </LikeContainer>\n        )}\n    </>\n)\n\nexport default LikeButton\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport OurLink from './OurLink';\n\nexport default function OurModal(props) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog fullScreen={fullScreen} open={props.open} onClose={props.handleClose} aria-labelledby=\"responsive-dialog-title\">\n            <DialogTitle id=\"responsive-dialog-title\">You have to be signed in to do that</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    <OurLink\n                        style={{ color: '#333' }}\n                        to={{\n                            pathname: '/login',\n                        }}\n                        title=\"Sign In\"\n                    />\n                </DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={props.handleClose} color=\"primary\">\n                    Close\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Fragment } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Button } from '@material-ui/core'\nimport styled from 'styled-components'\nimport ButtonFunction from './ButtonFunction'\nimport LikeButton from './LikeButton'\nimport OurModal from './OurModal'\nimport storehooks from './storeHooks'\nimport { AuthButtonType } from '../utils/types'\n\nconst UnAuthLike = styled.div``\nconst AuthButtons = ({\n    postId,\n    writeComment,\n    openForm,\n    openModal,\n    handleCloseModal,\n    handleClickOpen,\n    post,\n    type = 'post-buttons-modal',\n    comment,\n    onReply,\n    setEditComment,\n}: AuthButtonType) => {\n    const { likePost, dislikePost, user } = storehooks()\n    const memoizedLike = React.useCallback((id) => likePost(id), [likePost])\n    const memoizedDislike = React.useCallback((id) => dislikePost(id), [\n        dislikePost,\n    ])\n    const checkUser = user === undefined ? {} : user\n    const ifGifComment = comment && comment.gifUrl\n    return (\n        <>\n            {type === 'comment-buttons' &&\n                (Object.entries(checkUser).length !== 0 ? (\n                    <>\n                        {user && user.id && comment?.userId === user.id ? (\n                            <Typography\n                                style={{\n                                    display: 'inline-block',\n                                    float: 'right',\n                                }}\n                                align=\"right\"\n                            >\n                                <ButtonFunction\n                                    type=\"delete\"\n                                    comment={comment}\n                                    userId={comment?.userId}\n                                    postId={postId}\n                                />\n                            </Typography>\n                        ) : null}\n                        <Typography\n                            style={{ display: 'inline-block', float: 'right' }}\n                            align=\"right\"\n                        >\n                            <ButtonFunction type=\"reply\" onReply={onReply} />\n                        </Typography>\n                        {/* hide edit button if gifUrl */}\n                        {ifGifComment && comment?.userId === user.id ? null : (\n                            <>\n                                <Typography\n                                    style={{\n                                        display: 'inline-block',\n                                        margin: '0px 20px',\n                                        float: 'right',\n                                    }}\n                                    align=\"left\"\n                                >\n                                    <ButtonFunction\n                                        type=\"edit\"\n                                        setEditComment={setEditComment}\n                                    />\n                                </Typography>\n                            </>\n                        )}\n                    </>\n                ) : null)}\n\n            {type === 'post-buttons' &&\n                (Object.entries(checkUser).length === 0 ? (\n                    <>\n                        <UnAuthLike onClick={handleClickOpen}>\n                            <LikeButton\n                                like={memoizedLike}\n                                type=\"unliked\"\n                                likeCounts={post!.likeCounts}\n                            />\n                        </UnAuthLike>\n                        {openModal ? (\n                            <OurModal\n                                open={openModal}\n                                handleClose={handleCloseModal}\n                            />\n                        ) : null}\n                    </>\n                ) : (\n                    <>\n                        {post!.likedByMe === true ? (\n                            <LikeButton\n                                postId={post!.id}\n                                dislike={memoizedDislike}\n                                type=\"liked\"\n                                likeCounts={post!.likeCounts}\n                            />\n                        ) : (\n                            <LikeButton\n                                postId={post!.id}\n                                like={memoizedLike}\n                                type=\"unliked\"\n                                likeCounts={post!.likeCounts}\n                            />\n                        )}\n                    </>\n                ))}\n\n            {type === 'post-buttons-modal' &&\n                (Object.entries(checkUser).length === 0 ? (\n                    <>\n                        <Button\n                            onClick={handleClickOpen}\n                            variant=\"outlined\"\n                            component=\"span\"\n                            color=\"primary\"\n                        >\n                            Write A Comment\n                        </Button>\n                        {openModal ? (\n                            <OurModal\n                                open={openModal}\n                                handleClose={handleCloseModal}\n                            />\n                        ) : null}\n                    </>\n                ) : (\n                    <>\n                        <Button\n                            onClick={writeComment}\n                            variant=\"outlined\"\n                            component=\"span\"\n                            color=\"primary\"\n                        >\n                            {openForm! ? 'Close' : 'Write A Comment'}\n                        </Button>\n                    </>\n                ))}\n        </>\n    )\n}\n\nexport default AuthButtons\n","import React, { Fragment } from 'react';\nimport ReactGiphySearchbox from 'react-giphy-searchbox';\nimport './style.css';\n\nexport default function GifSection(props) {\n    return (\n        <>\n            <ReactGiphySearchbox\n                wrapperClassName=\"gifForm\"\n                searchFormClassName={{ padding: '20px 0px' }}\n                apiKey=\"9Ixlv3DWC1biJRI57RanyL7RTbfzz0o7\"\n                onSelect={(e) => props.select(e)}\n                masonryConfig={[\n                    { columns: 4, imageWidth: 110, gutter: 5 },\n                    {\n                        mq: '1000px', columns: 4, imageWidth: 120, gutter: 5,\n                    },\n                ]}\n            />\n        </>\n    );\n}\n","import React, { Fragment, useState } from 'react'\nimport TextField from '@material-ui/core/TextField'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport GifIcon from '@material-ui/icons/Gif'\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\nimport storeHooks from './storeHooks'\nimport { FieldType } from '../utils/types'\n\nconst OurTextField: React.FC<FieldType> = ({\n    type,\n    commentChange,\n    comment_body,\n    handleTitleChange,\n    handleContentChange,\n    title,\n    titleError,\n    post_content,\n    bodyError,\n    setCommentEdit,\n    setGifSelected,\n}) => {\n    const { selectedUser } = storeHooks()\n\n    return (\n        <>\n            {type === 'post' && (\n                <TextField\n                    label=\"Title\"\n                    style={{\n                        width: '100%',\n                    }}\n                    name=\"title\"\n                    error={!(titleError === true || titleError === null)}\n                    // helperText={props.titleError}\n                    value={title!}\n                    onChange={handleTitleChange}\n                    margin=\"none\"\n                />\n            )}\n\n            {type === 'gif-commentfield' && (\n                <TextField\n                    className=\"commentInput\"\n                    type=\"text\"\n                    style={{ borderRadius: '50%' }}\n                    id=\"outlined-multiline-static\"\n                    label=\"Write A Comment\"\n                    multiline\n                    size=\"medium\"\n                    name=\"comment_body\"\n                    value={comment_body}\n                    rows={comment_body!.length > 35 ? 3 : 1}\n                    error={comment_body!.length > 200}\n                    fullWidth\n                    InputProps={{\n                        startAdornment: (\n                            <InputAdornment\n                                style={{\n                                    cursor: 'pointer',\n                                    alignItems: 'center',\n                                }}\n                                position=\"start\"\n                            >\n                                <GifIcon onClick={setGifSelected} />\n                            </InputAdornment>\n                        ),\n                    }}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={commentChange}\n                />\n            )}\n            {type === 'post-content' && (\n                <TextField\n                    id=\"outlined-multiline-static\"\n                    label=\"Post Content\"\n                    name=\"postContent\"\n                    multiline\n                    style={{\n                        width: '100%',\n                        paddingTop: '20px',\n                    }}\n                    rows={post_content!.length > 50 ? '4' : '1'}\n                    error={!(bodyError! === true || bodyError === null)}\n                    value={post_content!}\n                    onChange={handleContentChange}\n                    margin=\"normal\"\n                />\n            )}\n            {type === 'edit-comment' && (\n                <TextField\n                    inputProps={{\n                        'data-testid': 'comment-item-textfield',\n                    }}\n                    className=\"commentInput\"\n                    type=\"text\"\n                    style={{ borderRadius: '50%' }}\n                    id=\"outlined-multiline-static\"\n                    multiline\n                    name=\"comment_body\"\n                    defaultValue={comment_body}\n                    rows=\"2\"\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    onChange={setCommentEdit}\n                />\n            )}\n        </>\n    )\n}\n\nexport default OurTextField\n","/* eslint-disable no-unused-expressions */\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport InputAdornment from '@material-ui/core/InputAdornment'\nimport TextField from '@material-ui/core/TextField'\nimport GifIcon from '@material-ui/icons/Gif'\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\nimport React, { Fragment, useState } from 'react'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport GifSection from './GifSection'\nimport OurTextField from '../../../common/OurTextField'\nimport storeHooks from '../../../common/storeHooks'\nimport { CommentPropsType } from '../../../utils/types'\n\nexport default function CommentForm({\n    commentChange,\n    comment_body,\n    gifUrl,\n    isGif,\n    setCommentBody,\n    onSubmit,\n    setMentionedUser,\n    currentUser,\n}: CommentPropsType) {\n    const [isGifSelected, setGifSelected] = useState<boolean>(false)\n    const {\n        mentionUsers,\n        setSelectedOptionValue,\n        selectedUser,\n        mentionedUser,\n    } = storeHooks()\n    const selectedOption = React.useCallback(\n        (option) => {\n            setSelectedOptionValue(option)\n            setCommentBody(comment_body.concat(option))\n            setMentionedUser?.(false)\n        },\n        [setSelectedOptionValue, setCommentBody, setMentionedUser, comment_body]\n    )\n\n    const options = mentionUsers\n        .filter((item) => item !== currentUser?.username) // current user can't mention themselves\n        .map((item) => <option value={item}>{item}</option>)\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                {isGifSelected === false ? (\n                    <>\n                        <OurTextField\n                            type=\"gif-commentfield\"\n                            selectedUser={selectedUser}\n                            comment_body={comment_body}\n                            commentChange={commentChange}\n                            setGifSelected={() => setGifSelected(true)}\n                        />\n                        {comment_body.length > 200 && (\n                            <FormHelperText error id=\"component-helper-text\">\n                                Comment must be less than 200 chars\n                            </FormHelperText>\n                        )}\n\n                        {mentionedUser && (\n                            <select\n                                onChange={(e) => selectedOption(e.target.value)}\n                                name=\"mentionedUsers\"\n                            >\n                                <option value=\"\">Select User</option>\n                                {options}\n                            </select>\n                        )}\n\n                        <br />\n                        <br />\n\n                        <Button\n                            disabled={\n                                !(\n                                    comment_body.length > 6 &&\n                                    comment_body.length <= 200\n                                )\n                            }\n                            type=\"submit\"\n                            variant=\"outlined\"\n                            color=\"primary\"\n                        >\n                            Post A Comment\n                        </Button>\n                    </>\n                ) : (\n                    <>\n                        <GifSection select={gifUrl} />\n                        <Grid\n                            container\n                            spacing={1}\n                            style={{ padding: '50px 0px' }}\n                        >\n                            <Grid item sm={1} lg={1}>\n                                <TextFieldsIcon\n                                    style={{ cursor: 'pointer' }}\n                                    onClick={() => setGifSelected(false)}\n                                />\n                            </Grid>\n                            <Grid item sm={3} lg={3}>\n                                <Button\n                                    disabled={isGif === ''}\n                                    size=\"small\"\n                                    type=\"submit\"\n                                    variant=\"outlined\"\n                                    color=\"primary\"\n                                >\n                                    Post GIPHY\n                                </Button>\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </form>\n        </>\n    )\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst buttonStyle = {\n    color: '#fff',\n    fontSize: '11px',\n};\nconst OurSecondaryButton = (props) => (\n    <Button {...props} data-testid={props.test} variant=\"contained\" style={buttonStyle}>\n        {props.children}\n    </Button>\n);\nexport default OurSecondaryButton;\n","import React, { Fragment } from 'react'\nimport ReactMarkdown from 'react-markdown'\nimport styled from 'styled-components'\nimport OurDate from '../../../common/Date'\nimport { CommentType } from '../../../utils/types'\n\nconst Img = styled.img`\n    width: 55%;\n    clear: both;\n    display: block;\n`\n\nconst CommentBody: React.FC<CommentType> = ({\n    comment_body,\n    gifUrl,\n    createdAt,\n}) => (\n    <>\n        <div data-testid=\"comment-body\">\n            {gifUrl === '' && (\n                <ReactMarkdown\n                    className=\"markdownStyle\"\n                    source={comment_body}\n                />\n            )}\n        </div>\n        {gifUrl && <Img src={`${gifUrl}`} />}\n        <OurDate type=\"comment-date\" createdAt={createdAt} />\n    </>\n)\n\nexport default CommentBody\n","import React, { useState, useCallback } from 'react'\nimport ReactMarkdown from 'react-markdown/with-html'\nimport { Grid } from '@material-ui/core'\nimport ButtonFunction from '../../../common/ButtonFunction'\nimport storeHooks from '../../../common/storeHooks'\nimport OurDate from '../../../common/Date'\nimport CommentBody from '../commentBody/commentBody'\nimport OurTextField from '../../../common/OurTextField'\nimport AuthButtons from '../../../common/AuthButtons'\nimport { CommentItemPropsType } from '../../../utils/types'\nimport './style.css'\n\nconst CommentItem: React.FC<CommentItemPropsType> = ({\n    type,\n    comment,\n    reply,\n    editComment,\n    onReply,\n    postId,\n}) => {\n    const [commentEdit, setCommentEdit] = useState('')\n\n    const [editCommentValue, setEditComment] = useState(false)\n    const { deleteRep, user } = storeHooks()\n    const checkUser = user === undefined ? {} : user\n    const update = (commentData) => {\n        const data = {\n            comment_body: commentEdit,\n            id: commentData.id,\n            postId: commentData.postId,\n            userId: commentData.userId,\n        }\n        editComment(data)\n        setEditComment(false)\n    }\n\n    const deleteReply = (replyId, postId, userId, commentId) => {\n        const data = {\n            replyId,\n            postId,\n            userId,\n            commentId,\n        }\n        deleteRep(data)\n    }\n\n    const memoizedDeleteReply = useCallback(\n        (replyId, postId, userId, commentId) =>\n            deleteReply(replyId, postId, userId, commentId),\n        [deleteReply]\n    )\n    const memoizedUpdate = useCallback((comment) => update(comment), [update])\n    const commentData = (\n        <>\n            {editCommentValue && comment.comment_body ? (\n                <OurTextField\n                    type=\"edit-comment\"\n                    comment_body={comment.comment_body}\n                    setCommentEdit={(e) => setCommentEdit(e.target.value)}\n                />\n            ) : (\n                <CommentBody\n                    comment_body={comment.comment_body}\n                    gifUrl={comment.gifUrl}\n                    createdAt={comment.createdAt}\n                />\n            )}\n\n            {comment.comment_body && editCommentValue ? (\n                <>\n                    <ButtonFunction\n                        type=\"cancel\"\n                        setEditComment={setEditComment}\n                    />\n                    <ButtonFunction\n                        type=\"update\"\n                        update={memoizedUpdate}\n                        comment={comment}\n                    />\n                </>\n            ) : (\n                <>\n                    {/* if guest is on home page */}\n                    <AuthButtons\n                        type=\"comment-buttons\"\n                        comment={comment}\n                        postId={postId}\n                        onReply={onReply}\n                        setEditComment={setEditComment}\n                    />\n                </>\n            )}\n        </>\n    )\n    const replyButton =\n        user && reply?.userId === user.id ? (\n            <ButtonFunction\n                type=\"deleteReply\"\n                replyId={reply.id}\n                replyUserId={reply.userId}\n                comment={comment}\n                postId={postId}\n                deleteReply={memoizedDeleteReply}\n            />\n        ) : null\n    const replyData = (\n        <>\n            <div data-testid=\"reply-data\">\n                <Grid container>\n                    <Grid item xs={12} lg={11}>\n                        <div data-testid=\"reply-body\">\n                            <ReactMarkdown\n                                className=\"markdownStyle\"\n                                source={reply?.replyBody}\n                            />\n                        </div>\n                        {Object.entries(checkUser).length !== 0\n                            ? replyButton\n                            : null}\n                        <OurDate\n                            type=\"reply-date\"\n                            createdAt={reply?.createdAt}\n                        />\n                    </Grid>\n                </Grid>\n            </div>\n        </>\n    )\n    return (\n        <>\n            <Grid container>\n                <Grid item xs={12} lg={11}>\n                    {type === 'comment' && commentData}\n                    {type === 'reply' && replyData}\n                </Grid>\n            </Grid>\n        </>\n    )\n}\nexport default CommentItem\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport React, { Fragment } from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { ReplyPropsType } from '../../../utils/types';\n\nexport default function ReplyForm({ onSubmit, replyChange, replyBody }: ReplyPropsType) {\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <>\n                    <TextField\n                        className=\"commentInput\"\n                        type=\"text\"\n                        style={{ borderRadius: '50%' }}\n                        id=\"outlined-multiline-static\"\n                        label=\"Write A Reply\"\n                        multiline\n                        size=\"medium\"\n                        name=\"reply_body\"\n                        value={replyBody}\n                        rows={replyBody.length > 35 ? 3 : 1}\n                        error={replyBody.length > 200}\n                        fullWidth\n                        margin=\"normal\"\n                        variant=\"outlined\"\n                        onChange={replyChange}\n                    />\n                    {replyBody.length > 200 && (\n                        <FormHelperText error id=\"component-helper-text\">\n                            Comment must be less than 200 chars\n                        </FormHelperText>\n                    )}\n                    <br />\n                    <br />\n\n                    <Button disabled={!(replyBody.length > 6 && replyBody.length <= 200)} type=\"submit\" variant=\"outlined\" color=\"primary\">\n                        Reply\n                    </Button>\n                </>\n            </form>\n        </>\n    );\n}\n","import React, { Fragment } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport OurLink from '../../../common/OurLink'\nimport OurModal from '../../../common/OurModal'\nimport { CommentAuthorDataInterface } from '../../../utils/types'\n\nconst CommentAuthorData = ({\n    comment,\n    isBold,\n    currentUser,\n    openModal,\n    handleCloseModal,\n    handleClickOpen,\n    userId,\n}: CommentAuthorDataInterface) => {\n    const isReply =\n        comment.commentReplies !== undefined ? '-10px 15px' : '-10px 0px'\n    const checkUser = currentUser === undefined ? {} : currentUser\n    return (\n        <>\n            <img\n                alt=\"gravatar\"\n                style={{ margin: isReply }}\n                src={comment.author?.gravatar}\n                width=\"30\"\n                height=\"30\"\n            />\n            <Typography\n                style={{\n                    display: 'inline-block',\n                    margin: '10px 10px',\n                    fontWeight: 700,\n                    padding: '0px 0px',\n                }}\n                variant=\"h6\"\n                align=\"left\"\n            >\n                {Object.entries(checkUser).length === 0 ? (\n                    <>\n                        <span\n                            style={{\n                                fontSize: '12px',\n                                margin: '0px',\n                                padding: '0px',\n                                cursor: 'pointer',\n                            }}\n                            onClick={handleClickOpen}\n                        >\n                            {comment.author?.username}\n                            {comment?.userId === userId && (\n                                <span style={{ fontSize: '12px' }}> (OP)</span>\n                            )}\n                        </span>\n\n                        {openModal ? (\n                            <OurModal\n                                open={openModal}\n                                handleClose={handleCloseModal}\n                            />\n                        ) : null}\n                    </>\n                ) : (\n                    <>\n                        <OurLink\n                            style={{\n                                fontSize: '12px',\n                            }}\n                            to={{\n                                pathname: `/profile/${comment.author?.username}`,\n                            }}\n                            title={comment.author?.username}\n                        />\n                        {comment?.userId === userId && (\n                            <span style={{ fontSize: '12px' }}> (OP)</span>\n                        )}\n                    </>\n                )}\n            </Typography>\n        </>\n    )\n}\nexport default CommentAuthorData\n","import React, { RefForwardingComponent, useState, Fragment } from 'react'\nimport List from '@material-ui/core/List'\nimport CommentItem from '../commentItem/CommentItem'\nimport ReplyForm from '../reply/ReplyForm'\nimport storeHooks from '../../../common/storeHooks'\nimport CommentAuthorData from '../commentAuthorData/commentAuthorData'\n\nconst ourStyle = {\n    margin: '15px ',\n}\nconst CommentListContainer: RefForwardingComponent<HTMLDivElement, any> = (\n    props,\n    ref\n) => {\n    const {\n        comment,\n        openModal,\n        handleClickOpen,\n        handleCloseModal,\n        isBold,\n    } = props\n    const { replyComm, editComment, user } = storeHooks()\n    const [replyComment, setReplyComment] = useState(false)\n    const [addReply, setReply] = useState('')\n    const replySubmit = React.useCallback(\n        (e: any) => {\n            e.preventDefault()\n            const data = {\n                replyBody: addReply,\n                userId: user.id,\n                postId: props.postId,\n                commentId: comment.id,\n            }\n\n            replyComm(data)\n            setReplyComment(false)\n            setReply('')\n        },\n        [replyComm, setReplyComment, setReply]\n    )\n    // this pass onReply to CommentItem component, when its clicked from commentItem it will call this function which displays\n    // the reply Form\n    const onReply = React.useCallback(() => {\n        console.log('onreply callback')\n        setReplyComment(!replyComment)\n    }, [setReplyComment, replyComment])\n\n    return (\n        <List\n            innerRef={ref}\n            style={{ paddingBottom: '20px' }}\n            data-testid=\"comment-list-container\"\n        >\n            <CommentAuthorData\n                currentUser={user}\n                comment={comment}\n                openModal={openModal}\n                userId={user?.id}\n                handleClickOpen={handleClickOpen}\n                handleCloseModal={handleCloseModal}\n                isBold={isBold}\n            />\n\n            {/* here you pass your ref */}\n            <div style={ourStyle} data-testid=\"commentitem-wrapper\">\n                <CommentItem\n                    onReply={onReply}\n                    type=\"comment\"\n                    comment={comment}\n                    postId={props.postId}\n                    deleteComment={props.deleteComment}\n                    editComment={editComment}\n                />\n\n                {comment.commentReplies.length !== 0 ? (\n                    <div style={{ marginLeft: '30px', padding: '20px' }}>\n                        {comment.commentReplies.map((reply, i) => (\n                            <Fragment key={i}>\n                                <div style={{ padding: '5px' }}>\n                                    <CommentAuthorData\n                                        comment={reply}\n                                        currentUser={user}\n                                        openModal={openModal}\n                                        handleClickOpen={handleClickOpen}\n                                        handleCloseModal={handleCloseModal}\n                                        isBold={isBold}\n                                        userId={user?.id}\n                                    />\n                                    <CommentItem\n                                        type=\"reply\"\n                                        reply={reply}\n                                        comment={comment}\n                                        onReply={onReply}\n                                        postId={props.postId}\n                                        deleteComment={props.deleteComment}\n                                        editComment={props.editComment}\n                                    />\n                                </div>\n                            </Fragment>\n                        ))}\n                        {replyComment && (\n                            <ReplyForm\n                                onSubmit={(e) => replySubmit(e)}\n                                replyBody={addReply}\n                                replyChange={(e) => setReply(e.target.value)}\n                            />\n                        )}\n                    </div>\n                ) : (\n                    <div style={{ marginLeft: '30px', padding: '0px' }}>\n                        {replyComment && (\n                            <ReplyForm\n                                onSubmit={(e) => replySubmit(e)}\n                                replyBody={addReply}\n                                replyChange={(e) => setReply(e.target.value)}\n                            />\n                        )}\n                    </div>\n                )}\n            </div>\n        </List>\n    )\n}\n\n// you use forwardRef here\nexport default React.forwardRef(CommentListContainer)\n","import React, { Fragment, useState, Ref } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport OurSecondaryButton from '../../../common/OurSecondaryButton';\nimport CommentListContainer from '../commentListContainer/commentListContainer';\n\nfunction CommentList(props: any, ref: Ref<HTMLDivElement>) {\n    const [showMore, setShowMore] = useState<number>(2);\n    const [openModal, setOpenModal] = useState(false);\n    const [showLessFlag, setShowLessFlag] = useState<boolean>(false);\n    const the_comments = props.comments.length;\n    const inc = showMore as any;\n    const min = Math.min(2, the_comments - inc);\n    const showComments = (e) => {\n        e.preventDefault();\n\n        if (inc + 2 && inc <= the_comments) {\n            setShowMore(inc + 2);\n            setShowLessFlag(true);\n        } else {\n            setShowMore(the_comments);\n        }\n    };\n\n    const handleClickOpen = React.useCallback(() => {\n        console.log('this got called owl man');\n        setOpenModal(true);\n    }, [setOpenModal]);\n    const handleCloseModal = () => {\n        setOpenModal(false);\n    };\n\n    const showLessComments = React.useCallback(\n        (e) => {\n            e.preventDefault();\n            setShowMore(2);\n            setShowLessFlag(false);\n        },\n        [setShowMore, setShowLessFlag],\n    );\n    const isBold = (comment) => (comment.userId === props.userId ? 800 : 400);\n\n    // show comments by recent, and have the latest comment at the bottom, with the previous one just before it.\n    const filterComments = props.comments\n        .slice(0)\n        .sort((a, b) => {\n            const date1 = new Date(a.createdAt) as any;\n            const date2 = new Date(b.createdAt) as any;\n\n            return date2 - date1;\n        })\n        .slice(0, inc)\n        .reverse();\n\n    const showMoreComments = () => filterComments.map((comment, i) => (\n        <div data-testid={`comment-show-more-${i}`} key={i}>\n            <CommentListContainer ref={ref} comment={comment} openModal={openModal} handleCloseModal={handleCloseModal} isBold={isBold} handleClickOpen={handleClickOpen} {...props} />\n        </div>\n    ));\n\n    const showMoreLess = (\n        <div style={{ margin: '30px 0px' }} data-testid=\"show_more_less\">\n            {props.comments.length > 2 ? (\n                <>\n                    {min !== -1 && min !== -2 ? (\n                        <>\n                            {min !== 0 ? (\n                                <OurSecondaryButton test=\"show_more_button\" onClick={(e) => showComments(e)} component=\"span\" color=\"secondary\">\n                                    View\n                                    {' '}\n                                    {min !== -1 && min !== -2 ? min : 0}\n                                    {' '}\n                                    More Comments\n                                </OurSecondaryButton>\n                            ) : (\n                                <OurSecondaryButton test=\"show_less_button\" onClick={(e) => showLessComments(e)} component=\"span\" color=\"secondary\">\n                                    Show Less Comments\n                                </OurSecondaryButton>\n                            )}\n                        </>\n                    ) : (\n                        <OurSecondaryButton test=\"show_less_button\" onClick={(e) => showLessComments(e)} component=\"span\" color=\"secondary\">\n                            Show Less Comments\n                        </OurSecondaryButton>\n                    )}\n                </>\n            ) : null}\n        </div>\n    );\n\n    return (\n        <Grid data-testid=\"comment-list-div\">\n            <>{showMoreLess}</>\n            {showLessFlag === true ? (\n            // will show most recent comments below\n                showMoreComments()\n            ) : (\n                <>\n                    {/* filter based on first comment  */}\n                    {filterComments.map((comment, i) => (\n                        <div key={i} ref={ref} className=\"comment\">\n                            <CommentListContainer ref={ref} comment={comment} openModal={openModal} handleCloseModal={handleCloseModal} isBold={isBold} handleClickOpen={handleClickOpen} {...props} />\n                        </div>\n                    ))}\n                </>\n            )}\n        </Grid>\n    );\n}\n\nexport default React.forwardRef(CommentList) as React.RefForwardingComponent<HTMLDivElement, any>;\n","import React, { useState, Fragment } from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport Typography from '@material-ui/core/Typography'\nimport CommentForm from '../comment/CommentForm'\nimport CommentList from '../commentList/CommentList'\nimport AuthButtons from '../../../common/AuthButtons'\nimport { CommentBottomType } from '../../../utils/types'\nimport storeHooks from '../../../common/storeHooks'\n\nconst CommentBottom: React.FC<CommentBottomType> = ({\n    post: { Comments, userId, id },\n    deleteComment,\n    postComment,\n}) => {\n    const [openModal, setOpenModal] = useState(false)\n    const [openForm, setOpenForm] = useState(false)\n    const [comment_body, setCommentBody] = useState('')\n    const [gifUrl, setGifUrl] = useState('')\n    const [mentionedUser, setMentionedUser] = useState(false)\n    const divRef = React.useRef<any>()\n    const { user } = storeHooks()\n    const writeComment = React.useCallback(() => {\n        // this is the same as this.setState({ openForm: !this.state.open })\n        setOpenForm(!openForm)\n    }, [setOpenForm, openForm])\n    const commentChange = React.useCallback(\n        (comment) => {\n            setCommentBody(comment)\n            const regex = /^@/i // checks for the first character is @\n            // const regexTwitter = /\\B@[a-z0-9_-]+/gi;\n            const words = comment.split(' ')\n\n            if (words.length === 0) {\n                setMentionedUser(false)\n            }\n\n            for (let i = 0; i < words.length; i++) {\n                const letter = words[i]\n\n                if (regex.test(letter)) {\n                    setMentionedUser(true)\n                } else {\n                    setMentionedUser(false)\n                }\n            }\n\n            setGifUrl('')\n        },\n        [setMentionedUser, setGifUrl]\n    )\n    const selectGif = React.useCallback(\n        (e) => {\n            setGifUrl(e.images.downsized_large.url)\n            setCommentBody('')\n            // you wont be able to add text comment with a gif, it will look weird :(\n        },\n        [setGifUrl, setCommentBody]\n    )\n    const handleClickOpen = React.useCallback(() => {\n        setOpenModal(true)\n    }, [setOpenModal])\n    const handleCloseModal = React.useCallback(() => {\n        setOpenModal(false)\n    }, [setOpenModal])\n    const commentSubmit = React.useCallback(\n        (e: any, id: number) => {\n            e.preventDefault()\n            const formData = {\n                comment_body,\n                id,\n                gifUrl,\n            }\n            postComment(formData)\n            setCommentBody('')\n            setOpenForm(false)\n\n            // divRef.current.scrollIntoView({ behavior: \"smooth\" });\n            // my attempt to scroll to the lastest comment.\n            setTimeout(() => {\n                divRef.current.scrollIntoView({\n                    behavior: 'smooth',\n                    block: 'center',\n                    inline: 'nearest',\n                })\n            }, 1200)\n        },\n        [setCommentBody, setOpenForm, comment_body, gifUrl]\n    )\n    const commentsView = (\n        <>\n            <span style={{ margin: '15px 0px', fontSize: '14px' }}>\n                {' '}\n                ({Comments.length}){' '}\n            </span>\n            <Typography\n                style={{\n                    fontWeight: 500,\n                    margin: '10px 0px',\n                    fontSize: '12px',\n                }}\n                variant=\"caption\"\n            >\n                Comments\n            </Typography>\n            <CommentList\n                ref={divRef}\n                user={user}\n                deleteComment={deleteComment}\n                userId={userId}\n                postId={id}\n                comments={Comments}\n            />\n\n            {/*  if show more hide show more button and show show less comments button */}\n        </>\n    )\n    const commentForm = openForm ? (\n        <CommentForm\n            commentChange={(e: any) => commentChange(e.target.value)}\n            comment_body={comment_body}\n            onSubmit={(e) => commentSubmit(e, id)}\n            gifUrl={selectGif}\n            isGif={gifUrl}\n            mentionedUser={mentionedUser}\n            setMentionedUser={setMentionedUser}\n            setCommentBody={setCommentBody}\n            currentUser={user}\n        />\n    ) : null\n\n    return (\n        <Grid item sm={12} lg={12} style={{ paddingTop: '40px' }}>\n            {Comments.length === 0 ? <div ref={divRef} /> : null}\n\n            {Comments.length > 0 ? (\n                commentsView\n            ) : (\n                <Grid item sm={12} lg={12} style={{ padding: '30px 0px' }}>\n                    <Typography>No Commments Yet</Typography>\n                </Grid>\n            )}\n            <AuthButtons\n                writeComment={writeComment}\n                openForm={openForm}\n                handleClickOpen={handleClickOpen}\n                handleCloseModal={handleCloseModal}\n                openModal={openModal}\n            />\n            {commentForm}\n        </Grid>\n    )\n}\n\nexport default CommentBottom\n","import React, { Fragment, useState } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport Typography from '@material-ui/core/Typography'\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined'\nimport { toast, ToastContainer } from 'react-toastify'\nimport RepeatIcon from '@material-ui/icons/Repeat'\nimport OurLink from '../../../common/OurLink'\nimport 'react-toastify/dist/ReactToastify.css'\nimport storeHooks from '../../../common/storeHooks'\nimport OurDate from '../../../common/Date'\nimport AuthButtons from '../../../common/AuthButtons'\nimport CommentBottom from '../commentbottom/commentBottom'\nimport { IPostItemContainer } from '../../../utils/types'\n\nfunction PostItemContainer({\n    post,\n    postComment,\n    deleteComment,\n    deletePost,\n}: IPostItemContainer) {\n    const [openModal, setOpenModal] = useState(false)\n    const { rePost, unRepost, commenterId, user, notifications } = storeHooks()\n    const handleClickOpen = React.useCallback(() => {\n        setOpenModal(true)\n    }, [setOpenModal])\n    const handleCloseModal = React.useCallback(() => {\n        setOpenModal(false)\n    }, [setOpenModal])\n    // check if user is on user posts,\n    const ifOnPosts = window.location.href.indexOf('posts') !== -1\n    const getNotifications = notifications\n    return (\n        <>\n            {/* do not show notification dialong if commenter comments on a post, only show comment notification if someelse commented on a post\n             do not need to see notification for your own comments\n             */}\n            {getNotifications && user && user.id !== commenterId && (\n                <ToastContainer\n                    autoClose={4000}\n                    position={toast.POSITION.BOTTOM_RIGHT}\n                />\n            )}\n            <Grid\n                data-testid=\"post-item-container\"\n                item\n                sm={12}\n                md={12}\n                style={{ margin: '20px 0px' }}\n            >\n                <Paper style={{ padding: '20px' }}>\n                    {ifOnPosts ? (\n                        <>\n                            {post.RepostedByMe &&\n                            user &&\n                            post.userId !== user.id ? (\n                                <>\n                                    <Typography>\n                                        <RepeatIcon\n                                            style={{\n                                                margin: '-5px 0px',\n                                                color: 'green',\n                                            }}\n                                        />{' '}\n                                        Repost from\n                                        {post.author.username}\n                                    </Typography>\n                                </>\n                            ) : null}\n                        </>\n                    ) : null}\n\n                    <Typography variant=\"h5\" align=\"left\">\n                        <OurLink\n                            style={{ fontSize: '16px' }}\n                            to={{\n                                pathname: `/post/${post.id}`,\n                                state: { post },\n                            }}\n                            title={post.title}\n                        />\n                    </Typography>\n                    <Grid item sm={12} md={12} style={{ padding: '30px 0px' }}>\n                        <Typography\n                            data-testid=\"post-content-testid\"\n                            align=\"left\"\n                        >\n                            {post.postContent.slice(0, 50)}\n                        </Typography>\n                    </Grid>\n                    <Avatar\n                        style={{\n                            display: 'inline-block',\n                            margin: '-10px -20px',\n                            padding: '0px 30px 0px 20px',\n                        }}\n                        sizes=\"small\"\n                        src={post.author.gravatar}\n                    />\n                    <Typography\n                        display=\"inline\"\n                        variant=\"subtitle1\"\n                        align=\"left\"\n                    >\n                        <OurLink\n                            to={{\n                                pathname: `/profile/${post.author.username}`,\n                                state: { post },\n                            }}\n                            title={post.author.username}\n                        />\n                    </Typography>\n                    {/* <Typography align=\"right\" variant=\"body1\">\n                        Likes: {post.likeCounts}\n                    </Typography> */}\n                    <Grid container spacing={1} style={{ padding: '20px 0px' }}>\n                        <Grid\n                            item\n                            sm={10}\n                            lg={10}\n                            md={10}\n                            style={{ padding: '0px 0px' }}\n                        >\n                            <Typography align=\"left\">\n                                {user && post.userId === user.id ? (\n                                    <span\n                                        style={{ cursor: 'pointer' }}\n                                        onClick={() =>\n                                            deletePost(post.id, post.userId)\n                                        }\n                                    >\n                                        <DeleteOutlineOutlinedIcon\n                                            style={{ margin: '-5px 0px' }}\n                                            color=\"primary\"\n                                        />{' '}\n                                        <span>Delete</span>\n                                    </span>\n                                ) : null}\n                            </Typography>\n                            <Typography align=\"left\">\n                                {user && post.userId !== user.id ? (\n                                    <>\n                                        {post.RepostedByMe ? (\n                                            <>\n                                                <span\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={() =>\n                                                        unRepost(\n                                                            post.id,\n                                                            user.id\n                                                        )\n                                                    }\n                                                >\n                                                    <RepeatIcon\n                                                        style={{\n                                                            margin: '-5px 0px',\n                                                            color: 'green',\n                                                        }}\n                                                    />{' '}\n                                                    <span>Un-Repost</span>\n                                                </span>\n                                            </>\n                                        ) : (\n                                            <>\n                                                <span\n                                                    style={{\n                                                        cursor: 'pointer',\n                                                    }}\n                                                    onClick={() =>\n                                                        rePost(post.id, user.id)\n                                                    }\n                                                >\n                                                    <RepeatIcon\n                                                        style={{\n                                                            margin: '-5px 0px',\n                                                        }}\n                                                        color=\"primary\"\n                                                    />{' '}\n                                                    <span>Repost</span>\n                                                </span>\n                                            </>\n                                        )}\n                                    </>\n                                ) : null}\n                            </Typography>\n                        </Grid>\n                        <Grid\n                            item\n                            sm={2}\n                            lg={2}\n                            style={{ padding: '0px 15px' }}\n                        >\n                            <Typography align=\"right\">\n                                <AuthButtons\n                                    type=\"post-buttons\"\n                                    handleClickOpen={handleClickOpen}\n                                    handleCloseModal={handleCloseModal}\n                                    post={post}\n                                    openModal={openModal}\n                                />\n                            </Typography>\n                        </Grid>\n                    </Grid>\n\n                    <OurDate type=\"post-date\" createdAt={post.createdAt} />\n                    <CommentBottom\n                        post={post}\n                        deleteComment={deleteComment}\n                        postComment={postComment}\n                    />\n                </Paper>\n            </Grid>\n        </>\n    )\n}\nexport default PostItemContainer\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst OurLoader = () => <Loader style={{ margin: '20px 0px' }} type=\"TailSpin\" color=\"#000\" height={50} width={50} />;\n\nexport default OurLoader;\n","import React, { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PostItemContainer from '../PostItemContainer/PostItemContainer';\nimport storeHooks from '../../../common/storeHooks';\nimport OurLoader from '../../../common/OurLoader';\n\nfunction PostList(props: any) {\n    const { posts, currentUser } = props;\n\n    return storeHooks().loading ? (\n        <OurLoader />\n    ) : (\n        <>\n            {posts.length > 0 ? (\n                posts.map((post, i) => (\n                    <div key={i} data-testid=\"post-list\">\n                        <PostItemContainer post={post} currentUser={currentUser} {...props} />\n                    </div>\n                ))\n            ) : (\n                <div data-testid=\"no-posts\">\n                    <Grid item md={8}>\n                        <Typography>No Posts yet</Typography>\n                    </Grid>\n                </div>\n            )}\n        </>\n    );\n}\n\nexport default React.memo(PostList);\n","import { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\n\nexport type gridHocState = {}\nexport default function (WrappedComponent) {\n    class GridHoc extends Component<{}, gridHocState> {\n    state = {};\n\n    render() {\n        return (\n            <Grid container justify=\"center\" spacing={0}>\n                <Grid item xs={11} sm={9} md={11} lg={8} style={{ margin: '20px 0px' }}>\n                    <WrappedComponent {...this.props} />\n                </Grid>\n            </Grid>\n        );\n    }\n    }\n\n    return GridHoc;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initCommentUpdates, getPostsInit } from '../actions/postActions';\nimport { getPosts } from '../selectors/selectors';\n\nfunction usePostsHooks() {\n    const dispatch = useDispatch();\n    const posts = useSelector(getPosts);\n    React.useEffect(() => {\n        dispatch(getPostsInit());\n        dispatch(initCommentUpdates());\n    }, []);\n\n    return { posts };\n}\n\nexport default usePostsHooks;\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport useStoreMethods from './storeHooks';\n\nconst myStyles: React.CSSProperties = {\n    position: 'fixed',\n    width: '500px',\n    height: '50px',\n    bottom: '0px',\n    left: '0px',\n    right: '0px',\n    margin: '20px auto',\n    display: 'flex',\n    flexWrap: 'wrap',\n    alignContent: 'center',\n    padding: '15px',\n    zIndex: 99999,\n};\n\nfunction OurError() {\n    const { errPost } = useStoreMethods();\n\n    return (\n        <Alert style={myStyles} severity=\"error\">\n            {errPost}\n        </Alert>\n    );\n}\n\nexport default OurError;\n","import React from 'react';\nimport * as classnames from 'classnames';\n\nfunction OurWrapper(props: any) {\n    return (\n        <div\n            className={classnames(\n                (props.appBar,\n                {\n                    [props.appBarShift]: props.appOpen,\n                }),\n            )}\n        >\n            {props.children}\n        </div>\n    );\n}\n\nexport default OurWrapper;\n","import React, { Fragment } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport PostList from '../forms/postList/postList'\nimport GridHoc from '../hoc/grid'\nimport usePostsHook from '../../common/usePostHook'\nimport storeMethods from '../../common/storeHooks'\nimport OurError from '../../common/OurError'\nimport OurWrapper from '../../common/OurWrapper'\n\nfunction Landing(props: any) {\n    usePostsHook()\n    return (\n        <>\n            <OurWrapper\n                appBar={props.appBar}\n                appOpen={props.appOpen}\n                appBarShift={props.appBarShift}\n            >\n                <Typography variant=\"subtitle1\" align=\"left\">\n                    Post's from our users\n                </Typography>\n\n                {storeMethods().errPost && <OurError />}\n                <PostList\n                    likePost={storeMethods().likePost}\n                    deletePost={storeMethods().deletePost}\n                    deleteComment={storeMethods().deleteComment}\n                    dislikePost={storeMethods().dislikePost}\n                    posts={storeMethods().posts}\n                    currentUser={storeMethods().user}\n                    postComment={storeMethods().postComment}\n                    isNotified={storeMethods().isNotified}\n                    getNotifications={storeMethods().notifications}\n                    editComment={storeMethods().editComment}\n                />\n            </OurWrapper>\n        </>\n    )\n}\nexport default React.memo(GridHoc(Landing))\n\nexport { Landing as LandingComponent }\n","import Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport OurTextField from '../../../common/OurTextField';\n\ntype PostFormInterface = {\n  onSubmit: (event) => void;\n  title: string;\n  titleError: boolean;\n  bodyError: boolean;\n  handleTitleChange: (event) => void;\n  postContent: string;\n  handleContentChange: (event) => void;\n  disButton: boolean;\n}\nconst PostForm = ({\n    onSubmit, handleTitleChange, titleError, bodyError, title, handleContentChange, postContent, disButton,\n}: PostFormInterface) => (\n    <form onSubmit={onSubmit}>\n        <Typography className=\"title\" style={{ paddingBottom: '20px' }} variant=\"subtitle1\">\n            New Post\n        </Typography>\n        <OurTextField type=\"post\" titleError={titleError} title={title} handleTitleChange={handleTitleChange} />\n        <FormHelperText error id=\"component-helper-text\">\n            {titleError}\n        </FormHelperText>\n\n        <OurTextField type=\"post-content\" bodyError={bodyError} post_content={postContent} handleContentChange={handleContentChange} />\n        <FormHelperText error id=\"component-helper-text\">\n            {bodyError}\n        </FormHelperText>\n        <br />\n        <Button className=\"butSub\" disabled={disButton} variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n    </form>\n);\n\nexport default PostForm;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport PostList from '../forms/postList/postList';\nimport usePostsHook from '../../common/usePostHook';\nimport './style.css';\nimport storeMethods from '../../common/storeHooks';\nimport { TabPanelPropsType } from '../../utils/types';\n\nfunction TabPanel({\n    children, index, value, ...other\n}: TabPanelPropsType) {\n    return (\n        <Typography component=\"div\" role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n            {value === index && <Box p={3}>{children}</Box>}\n        </Typography>\n    );\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        flexGrow: 1,\n        backgroundColor: theme.palette.background.paper,\n        padding: '30px 0px',\n    // width: '300px',\n    },\n}));\n\nexport default function OurTabs() {\n    // calls the posts api once, then we use storeMethods().posts to get the posts from store\n    usePostsHook();\n    const classes = useStyles();\n    const [value, setValue] = React.useState(1);\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setValue(newValue);\n    };\n\n    return (\n        <div className={classes.root}>\n            <Grid container justify=\"center\">\n                <Grid item xs={12} sm={12} md={12} lg={9}>\n                    <Tabs variant=\"fullWidth\" className=\"tabMenu\" value={value} onChange={handleChange}>\n                        <Tab label=\"Trending\" {...a11yProps(0)} />\n                        <Tab label=\"Newest\" {...a11yProps(1)} />\n                    </Tabs>\n                </Grid>\n\n                <Grid item xs={12} sm={12} md={12} lg={9}>\n                    <TabPanel value={value} index={0}>\n                        <PostList\n                            likePost={storeMethods().likePost}\n                            deletePost={storeMethods().deletePost}\n                            deleteComment={storeMethods().deleteComment}\n                            dislikePost={storeMethods().dislikePost}\n                            posts={storeMethods().popPosts}\n                            currentUser={storeMethods().user}\n                            postComment={storeMethods().postComment}\n                            isNotified={storeMethods().isNotified}\n                            getNotifications={storeMethods().notifications}\n                            editComment={storeMethods().editComment}\n                        />\n                    </TabPanel>\n                </Grid>\n                <Grid item xs={12} sm={12} md={12} lg={9}>\n                    <TabPanel value={value} index={1}>\n                        <PostList\n                            likePost={storeMethods().likePost}\n                            deletePost={storeMethods().deletePost}\n                            deleteComment={storeMethods().deleteComment}\n                            dislikePost={storeMethods().dislikePost}\n                            posts={storeMethods().posts}\n                            currentUser={storeMethods().user}\n                            postComment={storeMethods().postComment}\n                            isNotified={storeMethods().isNotified}\n                            getNotifications={storeMethods().notifications}\n                            editComment={storeMethods().editComment}\n                        />\n                    </TabPanel>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n","import React from 'react'\nimport { IUseInputType } from '../utils/types'\n\nexport default function useInputChange({\n    addTitle,\n    addContent,\n    addUsername,\n    addEmail,\n    addPassword,\n    addPasswordConf,\n}: IUseInputType) {\n    return React.useCallback(\n        (event) => {\n            if (event.target.name === 'title') {\n                addTitle(event.target.value)\n            }\n\n            if (event.target.name === 'postContent') {\n                addContent(event.target.value)\n            }\n\n            if (event.target.name === 'username') {\n                addUsername(event.target.value)\n            }\n\n            if (event.target.name === 'email') {\n                addEmail(event.target.value)\n            }\n\n            if (event.target.name === 'password') {\n                addPassword(event.target.value)\n            }\n\n            if (event.target.name === 'passwordConf') {\n                addPasswordConf(event.target.value)\n            } else {\n                return null\n            }\n            return null\n        },\n        [\n            addTitle,\n            addContent,\n            addUsername,\n            addEmail,\n            addPassword,\n            addPasswordConf,\n        ]\n    )\n}\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { useDispatch } from 'react-redux'\nimport PostForm from '../forms/createPost/createPost'\nimport GridHoc from '../hoc/grid'\nimport OurTabs from '../tabs/OurTabs'\nimport useInputChange from '../../common/handleHook'\nimport { addTitle, addContent } from '../../actions/postActions'\nimport OurError from '../../common/OurError'\nimport storeMethods from '../../common/storeHooks'\nimport OurWrapper from '../../common/OurWrapper'\n\nconst Dashboard: React.FC = () => {\n    const dispatch = useDispatch()\n    const inputData = {\n        addTitle: (data: string) => dispatch(addTitle(data)),\n        addContent: (data: string) => dispatch(addContent(data)),\n    }\n    const handleInputChange = useInputChange(inputData)\n    const { ourTitle } = storeMethods()\n    const { titleError } = storeMethods()\n    const { ourBodyError } = storeMethods()\n    const { ourPostContent } = storeMethods()\n    const { createPost } = storeMethods()\n    const onSubmit = (e: any) => {\n        e.preventDefault()\n        const postData = { ourTitle, ourPostContent }\n        createPost(postData)\n    }\n\n    const isEnabled = !(titleError === true && ourBodyError === true)\n\n    return (\n        <>\n            <OurWrapper>\n                <Grid justify=\"center\" container>\n                    <Grid item lg={9} xs={11}>\n                        {storeMethods().errPost && <OurError />}\n                        <PostForm\n                            title={ourTitle}\n                            postContent={ourPostContent}\n                            handleTitleChange={handleInputChange}\n                            handleContentChange={handleInputChange}\n                            onSubmit={onSubmit}\n                            disButton={isEnabled}\n                            titleError={titleError}\n                            bodyError={ourBodyError}\n                        />\n                    </Grid>\n                </Grid>\n\n                <br />\n\n                <OurTabs />\n            </OurWrapper>\n        </>\n    )\n}\n\nexport default GridHoc(Dashboard)\n// will be useful for unit testing.\nexport { Dashboard as DashboardComponent }\n","import React, { Fragment } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport GridHoc from '../hoc/grid'\nimport { userConfirmation } from '../../selectors/selectors'\nimport { resendEmailConfirmationInit } from '../../actions/userActions'\n\nexport type IEmailConfirmation = {\n    location: any\n}\n\nconst ResendEmailCard = styled.span`\n    cursor: pointer;\n`\n\nfunction EmailConfirmation({ location }: IEmailConfirmation) {\n    const dispatch = useDispatch()\n    const user = useSelector(userConfirmation)\n    const resendEmail = () => dispatch(resendEmailConfirmationInit())\n    const emailMessage = user || location.state.meta.message\n\n    return (\n        <>\n            <h3>{emailMessage}</h3>\n            <ResendEmailCard onClick={() => resendEmail()}>\n                Resend Email Confirmation\n            </ResendEmailCard>\n        </>\n    )\n}\n\nexport default GridHoc(EmailConfirmation)\n","import { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GridHoc from '../hoc/grid';\nimport { userConfirmation, userError } from '../../selectors/selectors';\nimport { emailConfirmationInit } from '../../actions/userActions';\n\nfunction EmailConfirmationSuccess(props) {\n    const didMountRef = useRef();\n    const dispatch = useDispatch();\n    const user = useSelector(userConfirmation);\n    const error = useSelector(userError);\n    const emailConfirmation = (payload: object) => dispatch(emailConfirmationInit(payload));\n    useEffect(() => {\n        if (!didMountRef.current) {\n            // didMountRef.current = true\n            // console.log(\"email confirmation\");\n            emailConfirmation(props.match.params);\n        } else {\n            console.log('this is component didupdate');\n        }\n    }, [didMountRef]);\n\n    return (\n        <div data-testid=\"message\">\n            {user.includes('Thank you') ? (\n                <div data-testid=\"success-message\">\n                    <Alert severity=\"success\">\n                        <AlertTitle>Success</AlertTitle>\n                        {user}\n                        {' '}\n                        <a href=\"/login\">Login</a>\n                    </Alert>\n                </div>\n            ) : (\n                <div data-testid=\"error-message\">\n                    <Alert severity=\"warning\">\n                        <AlertTitle>Error</AlertTitle>\n                        {error}\n                    </Alert>\n                </div>\n            )}\n        </div>\n    );\n}\n\nexport default GridHoc(EmailConfirmationSuccess);\n","import React, { Fragment } from 'react'\nimport PostList from '../forms/postList/postList'\nimport GridHoc from '../hoc/grid'\nimport usePostsHook from '../../common/usePostHook'\nimport OurWrapper from '../../common/OurWrapper'\nimport { ILikesType } from '../../utils/types'\n\nfunction Likes({\n    appBar,\n    likePost,\n    deleteComment,\n    dislikePost,\n    deletePostInit,\n    notificationInit,\n    user,\n    appBarShift,\n    appOpen,\n    postCommentInit,\n    isNotified,\n    notification,\n}: ILikesType) {\n    const { posts } = usePostsHook()\n    return (\n        <>\n            <OurWrapper\n                appBar={appBar}\n                appOpen={appOpen}\n                appBarShift={appBarShift}\n            >\n                <PostList\n                    likePost={likePost}\n                    deletePost={deletePostInit}\n                    deleteComment={deleteComment}\n                    dislikePost={dislikePost}\n                    posts={posts}\n                    currentUser={user}\n                    postComment={postCommentInit}\n                    isNotified={isNotified}\n                    getNotifications={notificationInit}\n                    notification={notification}\n                />\n            </OurWrapper>\n        </>\n    )\n}\n\nexport default GridHoc(React.memo(Likes))\nexport { Likes as LikesComponent }\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n    deleteCommentInit, deletePostInit, dislikePostInit, getPostsInit, likePostInit, notificationInit, postCommentInit,\n} from '../actions/postActions';\nimport Likes from '../components/Likes/Likes';\nimport { getNotification, getUser, getUserLikedPosts } from '../selectors/selectors';\n\nconst mapStateToProps = (state, ownProps) => createStructuredSelector({\n    posts: getUserLikedPosts(ownProps.match.params),\n    user: getUser,\n    notification: getNotification,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    notificationInit: () => dispatch(notificationInit()),\n    getPostsInit: () => dispatch(getPostsInit()),\n    likePost: (id: number) => dispatch(likePostInit(id)),\n    postCommentInit: (commentData: object) => dispatch(postCommentInit(commentData)),\n    dislikePost: (id: number) => dispatch(dislikePostInit(id)),\n    deletePostInit: (id: number, userId: number) => dispatch(deletePostInit(id, userId)),\n    deleteComment: (id: number, postId: number, userId: number) => dispatch(deleteCommentInit(id, postId, userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);\n","import Button from '@material-ui/core/Button'\nimport TextField from '@material-ui/core/TextField'\nimport React from 'react'\nimport { LoginType } from '../../../utils/types'\n\nconst LoginForm = ({\n    submit,\n    username,\n    password,\n    passwordChange,\n    usernameChange,\n}: LoginType) => (\n    <form style={{ width: '100%' }} onSubmit={submit}>\n        <TextField\n            label=\"Username\"\n            style={{ width: '100%' }}\n            name=\"username\"\n            value={username}\n            onChange={usernameChange}\n            margin=\"normal\"\n        />\n        <br />\n        <TextField\n            label=\"Password\"\n            name=\"password\"\n            type=\"password\"\n            style={{ width: '100%' }}\n            className=\"\"\n            value={password}\n            onChange={passwordChange}\n            margin=\"normal\"\n        />\n        {/*  */}\n        <br />\n        <br />\n\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Login\n        </Button>\n    </form>\n)\n\nexport default LoginForm\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { initLogin } from '../../actions/userActions'\nimport { AuthHocPropsType, AuthStateType } from '../../utils/types'\n\nexport default function (WrappedComponent) {\n    class IsAuth extends Component<AuthHocPropsType, AuthStateType> {\n        ourState: AuthStateType = {\n            errors: {},\n        }\n\n        componentDidMount() {\n            this.props.initLogin()\n        }\n\n        render() {\n            return <WrappedComponent {...this.props} />\n        }\n    }\n\n    const mapStateToProps = (state: any) => ({\n        user: state.user,\n    })\n    const mapDispatchToProps = (dispatch: any) => ({\n        initLogin: () => dispatch(initLogin()),\n    })\n\n    return connect(mapStateToProps, mapDispatchToProps)(IsAuth)\n}\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => createStyles({\n    button: {\n        margin: theme.spacing(0, 0, 1),\n        display: 'flex',\n        backgroundColor: '#48A9A6',\n        borderRadius: theme.shape.borderRadius,\n        boxShadow: theme.shadows[1],\n        height: '36px',\n        cursor: 'pointer',\n        textDecoration: 'none',\n        '&:hover': {\n            backgroundColor: '#000',\n        },\n        '&:active': {\n            boxShadow: 'inset 0 0 0 32px rgba(0,0,0,0.1)',\n        },\n    },\n    wrapper: {\n        marginTop: '1px',\n        marginLeft: '1px',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        width: '34px',\n        height: '34px',\n        borderRadius: '2px',\n        backgroundColor: '#fff',\n    },\n    icon: {\n        width: '18px',\n        height: '18px',\n    },\n    text: {\n        margin: '0px 40px',\n        color: '#fff',\n        fontSize: '14px',\n        fontWeight: 'bold',\n        textTransform: 'uppercase',\n        flexGrow: 1,\n        textAlign: 'center',\n        alignSelf: 'center',\n    },\n}));\n\nconst GoogleLoginButton = () => {\n    const classes = useStyles({});\n\n    return (\n        <a href={`${process.env.REACT_APP_BASE_URL}/api/v1/users/auth/google`} className={classes.button}>\n            <div className={classes.wrapper}>\n                <svg className={classes.icon} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 533.5 544.3\">\n                    <path fill=\"#4285f4\" d=\"M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\" />\n                    <path fill=\"#34a853\" d=\"M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\" />\n                    <path fill=\"#fbbc04\" d=\"M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z\" />\n                    <path fill=\"#ea4335\" d=\"M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\" />\n                </svg>\n            </div>\n            <p className={classes.text}>Login with Google</p>\n        </a>\n    );\n};\n\nexport { GoogleLoginButton };\n","import Typography from '@material-ui/core/Typography'\nimport Alert from '@material-ui/lab/Alert'\nimport React, { useState, Fragment } from 'react'\nimport Avatar from '@material-ui/core/Avatar'\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined'\nimport Grid from '@material-ui/core/Grid'\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Paper from '@material-ui/core/Paper'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LoginForm from '../forms/login/login'\nimport IsAuth from '../hoc/isAuthenticated'\nimport { GoogleLoginButton } from '../../common/GoogleButton'\nimport { loginInit } from '../../actions/userActions'\nimport { userStore } from '../../selectors/selectors'\nimport OurWrapper from '../../common/OurWrapper'\nimport { IloginProps } from '../../utils/types'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        width: '100%',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor:\n            theme.palette.type === 'light'\n                ? theme.palette.grey[50]\n                : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}))\n\nfunction Login({ history }: IloginProps) {\n    const classes = useStyles()\n    const [username, setUsername] = useState<string>('')\n    const [password, setPassword] = useState<string>('')\n    const dispatch = useDispatch()\n    const login = (userData: object, historyData: object) =>\n        dispatch(loginInit(userData, historyData))\n    const user = useSelector(userStore)\n\n    const goBackEmailConfirmation = () => {\n        history.goBack()\n    }\n\n    const handleSubmit = (e: any) => {\n        e.preventDefault()\n        const creds = {\n            username,\n            password,\n        }\n        login(creds, history)\n    }\n\n    return (\n        <OurWrapper>\n            <>\n                <Grid container component=\"main\" className={classes.root}>\n                    <CssBaseline />\n                    <Grid\n                        item\n                        xs={false}\n                        sm={4}\n                        md={7}\n                        className={classes.image}\n                    />\n                    <Grid\n                        item\n                        xs={12}\n                        sm={8}\n                        md={5}\n                        component={Paper}\n                        elevation={6}\n                        square\n                    >\n                        <div className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <LockOutlinedIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Log In\n                            </Typography>\n                            {user.error && (\n                                <div>\n                                    <Alert severity=\"warning\">\n                                        {user.error}\n                                    </Alert>\n                                </div>\n                            )}\n                            {user.error.includes('Please activate') && (\n                                <div style={{ padding: '20px 0px' }}>\n                                    <Typography\n                                        variant=\"h6\"\n                                        style={{ cursor: 'pointer' }}\n                                        onClick={goBackEmailConfirmation}\n                                    >\n                                        {' '}\n                                        Back{' '}\n                                    </Typography>\n                                </div>\n                            )}\n\n                            <LoginForm\n                                submit={handleSubmit}\n                                username={username}\n                                password={password}\n                                usernameChange={(e) =>\n                                    setUsername(e.target.value)\n                                }\n                                passwordChange={(e) =>\n                                    setPassword(e.target.value)\n                                }\n                            />\n                            <div style={{ margin: '60px 0px' }}>\n                                <GoogleLoginButton />\n                            </div>\n                        </div>\n                    </Grid>\n                </Grid>\n\n                {/* </div> */}\n            </>\n        </OurWrapper>\n    )\n}\n\nexport default IsAuth(Login)\n","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPostInit } from '../../actions/postActions';\nimport { profile } from '../../selectors/selectors';\n\nfunction Post(props: any) {\n    const dispatch = useDispatch();\n    const postPage = useSelector(profile);\n    const getPost = (id: number) => dispatch(fetchPostInit(id));\n    React.useEffect(() => {\n        const id = parseInt(props.match.params.id);\n        getPost(id);\n    }, []);\n\n    const { title, postContent, author } = postPage;\n\n    return (\n        <>\n            <Grid item sm={12} md={12} style={{ margin: '20px 0px', padding: '0px 200px' }}>\n                <Grid item style={{ padding: '20px 0px' }}>\n                    <Typography variant=\"h2\" align=\"center\">\n                        {title}\n                    </Typography>\n                </Grid>\n                <Grid item sm={12} md={12} style={{ padding: '40px 0px' }}>\n                    <Typography style={{ lineHeight: '32px' }} variant=\"body1\" align=\"left\">\n                        {postContent}\n                    </Typography>\n                </Grid>\n                <Grid item sm={12} md={12} style={{ padding: '20px 0px' }}>\n                    <Typography display=\"inline\" variant=\"h6\" align=\"left\">\n                        By:\n                        {' '}\n                        {author && author ? author.username : ''}\n                    </Typography>\n                </Grid>\n            </Grid>\n        </>\n    );\n}\nexport default Post;\n","import Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { EditProfileFormType } from '../../../utils/types';\n\nconst EditProfileForm = ({\n    onSubmit, bio, gravatar, handleBio, handleGravatar,\n}: EditProfileFormType) => (\n    <form onSubmit={onSubmit} data-testid=\"edit-form\">\n        <Typography variant=\"subtitle1\">Edit Profile</Typography>\n        <FormGroup style={{ padding: '30px 0px' }}>\n            <FormLabel data-testid=\"form-bio-label\" style={{ display: 'block' }}>\n                Bio\n            </FormLabel>\n            <TextField\n                id=\"outlined-name\"\n                className=\"bio-test\"\n                data-testid=\"bio-test\"\n                style={{\n                    width: '100%',\n                }}\n                name=\"bio\"\n                inputProps={{\n                    'data-testid': 'bio',\n                }}\n                multiline\n                rows=\"3\"\n                defaultValue={bio}\n                onChange={handleBio}\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n            <FormLabel data-testid=\"form-gravatar-label\" style={{ display: 'block' }}>\n                Gravatar\n            </FormLabel>\n            <TextField\n                id=\"outlined-name\"\n                data-testid=\"gravatar-test\"\n                style={{\n                    width: '100%',\n                }}\n                inputProps={{\n                    'data-testid': 'gravatar',\n                }}\n                name=\"gravatar\"\n                multiline\n                rows=\"3\"\n                onChange={handleGravatar}\n                defaultValue={gravatar}\n                margin=\"normal\"\n                variant=\"outlined\"\n            />\n        </FormGroup>\n        <Button data-testid=\"button-test\" className=\"subBtn\" variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n    </form>\n);\n\nexport default EditProfileForm;\n","import React, { useEffect, useRef, useState } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport { Grid } from '@material-ui/core'\nimport EditProfileForm from '../forms/editProfile/editForm'\nimport GridHoc from '../hoc/grid'\nimport storeMethods from '../../common/storeHooks'\nimport OurWrapper from '../../common/OurWrapper'\n\nconst EditProfile: React.FC = () => {\n    const [bio, setBio] = useState<string>('')\n    const [gravatar, setGravatar] = useState<string>('')\n    const mounted = useRef<Object>()\n    const {\n        getProfile,\n        profileData,\n        userErr,\n        message,\n        updateProfile,\n    } = storeMethods()\n    useEffect(() => {\n        if (!mounted.current) {\n            getProfile()\n            mounted.current = true\n        } else {\n            setBio(bio || profileData.bio)\n            setGravatar(gravatar || profileData.gravatar)\n        }\n    })\n    const handleSubmit = React.useCallback(\n        (e: any) => {\n            e.preventDefault()\n            const formData = {\n                bio,\n                gravatar,\n            }\n            updateProfile(formData)\n        },\n        [updateProfile]\n    )\n\n    return (\n        <OurWrapper>\n            <Grid container justify=\"center\">\n                <Grid item xs={12} sm={12} md={8} lg={8}>\n                    {userErr && (\n                        <Typography style={{ color: 'red' }}>\n                            {message || userErr}\n                        </Typography>\n                    )}\n                    {message && (\n                        <Typography style={{ color: 'green' }}>\n                            {message || userErr}\n                        </Typography>\n                    )}\n                    <EditProfileForm\n                        handleBio={(e) => setBio(e.target.value)}\n                        handleGravatar={(e) => setGravatar(e.target.value)}\n                        onSubmit={handleSubmit}\n                        bio={bio}\n                        gravatar={gravatar}\n                    />\n                </Grid>\n            </Grid>\n        </OurWrapper>\n    )\n}\n\nexport default GridHoc(EditProfile)\n","import React, { useEffect, useRef, Fragment } from 'react'\nimport { Button, Typography } from '@material-ui/core'\nimport Avatar from '@material-ui/core/Avatar'\nimport Grid from '@material-ui/core/Grid'\nimport Paper from '@material-ui/core/Paper'\nimport PersonIcon from '@material-ui/icons/Person'\nimport { useSelector, useDispatch } from 'react-redux'\nimport OurLink from '../../common/OurLink'\nimport GridHoc from '../hoc/grid'\nimport {\n    getProfileInit,\n    followUserInit,\n    unfollowUserInit,\n} from '../../actions/userActions'\nimport { userStore } from '../../selectors/selectors'\nimport OurWrapper from '../../common/OurWrapper'\nimport { ProfilePropsType } from '../../utils/types'\n\nfunction Profile({ match, appBar, appBarShift, appOpen }: ProfilePropsType) {\n    const didMountRef = useRef<Object>()\n    const dispatch = useDispatch()\n    const followUser = (username: string, id: number) =>\n        dispatch(followUserInit(username, id))\n    const unfollowUser = (username: string, id: number) =>\n        dispatch(unfollowUserInit(username, id))\n    const userData = useSelector(userStore)\n    useEffect(() => {\n        if (!didMountRef.current) {\n            const { username } = match.params\n            dispatch(getProfileInit(username))\n        } else {\n            // console.log(\"test\");\n        }\n    }, [])\n\n    const user = userData.profilePage\n    const currentUser = userData.currentUser.user\n    const userFollowerCount =\n        user && user.UserFollowers ? user.UserFollowers.length : ''\n    const followerPlural =\n        userFollowerCount.length > 1 ? 'Follower' : 'Followers'\n\n    return (\n        <>\n            <OurWrapper\n                appBar={appBar}\n                appOpen={appOpen}\n                appBarShift={appBarShift}\n            >\n                {currentUser && user && (\n                    <>\n                        <Avatar src={user.gravatar} />\n                        <Grid\n                            item\n                            sm={12}\n                            md={12}\n                            style={{ margin: '20px 0px' }}\n                        >\n                            <Typography variant=\"subtitle1\">\n                                {user.username}\n                            </Typography>\n                            <Typography\n                                variant=\"body1\"\n                                style={{\n                                    margin: '20px 0px',\n                                    letterSpacing: '1px',\n                                }}\n                            >\n                                <PersonIcon style={{ margin: '-5px 0px' }} />{' '}\n                                {user.bio}\n                            </Typography>\n                            <Grid\n                                item\n                                sm={2}\n                                lg={2}\n                                style={{ margin: '20px 0px' }}\n                            >\n                                {currentUser.id !== user.id ? (\n                                    <Typography align=\"left\">\n                                        {user.isFollowing !== true ? (\n                                            <Button\n                                                variant=\"outlined\"\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    followUser(\n                                                        user.username,\n                                                        currentUser.id\n                                                    )\n                                                }\n                                            >\n                                                Follow\n                                            </Button>\n                                        ) : (\n                                            <Button\n                                                style={{ color: '#fff' }}\n                                                variant=\"contained\"\n                                                color=\"primary\"\n                                                onClick={() =>\n                                                    unfollowUser(\n                                                        user.username,\n                                                        currentUser.id\n                                                    )\n                                                }\n                                            >\n                                                Following\n                                            </Button>\n                                        )}\n                                    </Typography>\n                                ) : null}\n                            </Grid>\n                            <Grid item sm={12} md={12}>\n                                <Typography\n                                    variant=\"subtitle1\"\n                                    style={{ margin: '10px 0px' }}\n                                >\n                                    {' '}\n                                    {userFollowerCount} {followerPlural}{' '}\n                                </Typography>\n                                {user && userFollowerCount ? (\n                                    <>\n                                        {user.UserFollowers.map(\n                                            (userFollow, i) => (\n                                                <Fragment key={i}>\n                                                    <Paper\n                                                        style={{\n                                                            margin: '30px 0px',\n                                                            padding: '20px 0px',\n                                                        }}\n                                                    >\n                                                        <Typography\n                                                            style={{\n                                                                padding:\n                                                                    '0px 20px',\n                                                            }}\n                                                            variant=\"caption\"\n                                                        >\n                                                            <OurLink\n                                                                to={{\n                                                                    pathname: `/profile/${\n                                                                        user &&\n                                                                        userFollow &&\n                                                                        userFollow.followerDetails\n                                                                            ? userFollow\n                                                                                  .followerDetails\n                                                                                  .username\n                                                                            : ''\n                                                                    }`,\n                                                                    state: {\n                                                                        userFollow,\n                                                                    },\n                                                                }}\n                                                                title={\n                                                                    user &&\n                                                                    userFollow &&\n                                                                    userFollow.followerDetails\n                                                                        ? userFollow\n                                                                              .followerDetails\n                                                                              .username\n                                                                        : ''\n                                                                }\n                                                            />\n                                                        </Typography>\n                                                    </Paper>\n                                                </Fragment>\n                                            )\n                                        )}\n                                    </>\n                                ) : null}\n                            </Grid>\n                        </Grid>\n                    </>\n                )}\n            </OurWrapper>\n        </>\n    )\n}\n\nexport default GridHoc(Profile)\n","import Button from '@material-ui/core/Button'\nimport FormHelperText from '@material-ui/core/FormHelperText'\nimport TextField from '@material-ui/core/TextField'\nimport React from 'react'\nimport { ISignUpForm } from '../../../utils/types'\n\nconst SignUpForm = ({\n    submit,\n    usernameError,\n    username,\n    usernameChange,\n    email,\n    emailChange,\n    emailError,\n    password,\n    passwordChange,\n    passwordConf,\n    passwordConfChange,\n    passwordConfError,\n    passwordError,\n    disButton,\n}: ISignUpForm) => {\n    const ifPasswordError =\n        passwordConfError === true || passwordConfError === ''\n    const FormHelper = (\n        <>\n            {ifPasswordError && (\n                <FormHelperText error id=\"component-helper-text\">\n                    {passwordConfError}\n                </FormHelperText>\n            )}\n            <br />\n            <br />\n        </>\n    )\n\n    return (\n        <form style={{ width: '100%' }} onSubmit={submit}>\n            <TextField\n                label=\"Username\"\n                style={{ width: '100%' }}\n                name=\"username\"\n                value={username}\n                error={!(usernameError === true || usernameError === '')}\n                onChange={usernameChange}\n                margin=\"normal\"\n            />\n            <FormHelperText error id=\"component-helper-text\">\n                {usernameError}\n            </FormHelperText>\n\n            <TextField\n                label=\"Email\"\n                className=\"\"\n                style={{ width: '100%' }}\n                name=\"email\"\n                error={!(emailError === true || emailError === '')}\n                value={email}\n                onChange={emailChange}\n                margin=\"dense\"\n            />\n            <FormHelperText error id=\"component-helper-text\">\n                {emailError}\n            </FormHelperText>\n            <TextField\n                label=\"Password\"\n                name=\"password\"\n                type=\"password\"\n                style={{ width: '100%' }}\n                className=\"\"\n                error={!(passwordError === true || passwordError === '')}\n                value={password}\n                onChange={passwordChange}\n                margin=\"dense\"\n            />\n            <FormHelperText error id=\"component-helper-text\">\n                {passwordError}\n            </FormHelperText>\n            {password.length > 6 ? (\n                <TextField\n                    label=\"Confirm Pasword\"\n                    name=\"passwordConf\"\n                    type=\"password\"\n                    style={{ width: '100%' }}\n                    className=\"\"\n                    error={\n                        !(\n                            passwordConfError === true ||\n                            passwordConfError === ''\n                        )\n                    }\n                    value={passwordConf}\n                    onChange={passwordConfChange}\n                    margin=\"dense\"\n                />\n            ) : null}\n            {FormHelper}\n\n            <Button\n                disabled={disButton}\n                variant=\"outlined\"\n                color=\"primary\"\n                type=\"submit\"\n            >\n                Sign Up\n            </Button>\n        </form>\n    )\n}\n\nexport default SignUpForm\n","import Typography from '@material-ui/core/Typography';\nimport React, { Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { history } from '../../ourHistory';\nimport useInputChange from '../../common/handleHook';\nimport IsAuth from '../hoc/isAuthenticated';\nimport SignUpForm from '../forms/signUp/signUp';\nimport { userStore } from '../../selectors/selectors';\nimport {\n    addEmail, addPassword, addUsername, signUpInit, addPasswordConf,\n} from '../../actions/userActions';\nimport OurWrapper from '../../common/OurWrapper';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        height: '100vh',\n        width: '100%',\n    },\n    image: {\n        backgroundImage: 'url(https://source.unsplash.com/random)',\n        backgroundRepeat: 'no-repeat',\n        backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n    },\n    paper: {\n        margin: theme.spacing(8, 4),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nfunction Register(props: any) {\n    const classes = useStyles();\n    const userData = useSelector(userStore);\n    const dispatch = useDispatch();\n    const signup = (userData: object, history: object) => dispatch(signUpInit(userData, history));\n    const inputData = {\n        addEmail: (email: string) => dispatch(addEmail(email)),\n        addPassword: (password: string) => dispatch(addPassword(password)),\n        addUsername: (username: string) => dispatch(addUsername(username)),\n        addPasswordConf: (passwordConf: string) => dispatch(addPasswordConf(passwordConf)),\n    };\n    const handleInputChange = useInputChange(inputData);\n    const handleSubmit = (e: any) => {\n        e.preventDefault();\n        const { username, email, password } = userData;\n        const creds = {\n            username,\n            email,\n            password,\n        };\n\n        signup(creds, history);\n    };\n\n    const {\n        username, email, password, passwordConf, passwordConfError, usernameError, passwordError, emailError,\n    } = userData;\n    const isEnabled = !(passwordConfError === true && emailError === true && passwordError === true && usernameError === true);\n\n    return (\n        <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n            <>\n                <Grid container component=\"main\" className={classes.root}>\n                    <CssBaseline />\n                    <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                    <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                        <div className={classes.paper}>\n                            <Avatar className={classes.avatar}>\n                                <GroupIcon />\n                            </Avatar>\n                            <Typography component=\"h1\" variant=\"h5\">\n                                Register\n                            </Typography>\n                            {userData.error && <div>{userData.error}</div>}\n\n                            <SignUpForm\n                                submit={handleSubmit}\n                                usernameChange={handleInputChange}\n                                emailChange={handleInputChange}\n                                passwordChange={handleInputChange}\n                                passwordConfChange={handleInputChange}\n                                username={username}\n                                password={password}\n                                passwordConf={passwordConf}\n                                email={email}\n                                usernameError={usernameError}\n                                passwordError={passwordError}\n                                passwordConfError={passwordConfError}\n                                emailError={emailError}\n                                disButton={isEnabled}\n                            />\n                        </div>\n                    </Grid>\n                </Grid>\n            </>\n        </OurWrapper>\n    );\n}\n\nexport default IsAuth(Register);\n","import React from 'react'\nimport { Redirect, Route } from 'react-router-dom'\nimport { IPrivateRoute } from './utils/types'\n\nconst PrivateRoute = ({\n    googleAccount,\n    isAuthenticated,\n    Component,\n    exact,\n    path,\n}: IPrivateRoute) => {\n    if (googleAccount === true) {\n        return <Route exact={exact} path={path} component={Component} />\n    }\n    if (isAuthenticated !== false) {\n        return <Route exact={exact} path={path} component={Component} />\n    }\n\n    return <Redirect to={{ pathname: '/login' }} />\n}\n\nexport default PrivateRoute\n","import React, { Fragment } from 'react'\nimport Typography from '@material-ui/core/Typography'\nimport styled from 'styled-components'\nimport GridHoc from '../hoc/grid'\n\nconst NotFoundImage = styled.img`\n    margin: 30px 0px;\n    max-width: 800px;\n`\n\nconst NotFound: React.FC = () => (\n    <>\n        <Typography variant=\"h4\"> No Page Found :(</Typography>\n        <NotFoundImage src=\"https://s3.amazonaws.com/media.thecrimson.com/photos/2019/12/23/142555_1341777.png\" />\n    </>\n)\nexport default GridHoc(NotFound)\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst drawerWidth = 210;\nconst styles = (theme) => ({\n    buttonCollapse: {\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n        margin: '10px',\n\n        boxShadow: 'none',\n        color: '#333',\n    },\n    drawerPaper: {\n        width: drawerWidth,\n        right: '0px',\n        top: '0px',\n        left: '0px',\n        position: 'absolute' as const,\n        [theme.breakpoints.up('lg')]: {\n            position: 'absolute' as const,\n        },\n        padding: '0px',\n    },\n    appBar: {\n    // position: \"absolute\",\n        marginLeft: drawerWidth,\n        [theme.breakpoints.up('sm')]: {\n            width: `calc(100% - ${drawerWidth}px)`,\n        },\n    },\n});\n\nfunction OurMenu(props: any) {\n    const { classes, theme } = props;\n\n    return (\n        <div className={classes.buttonCollapse}>\n            <IconButton onClick={() => props.setOpen(!props.appOpen)}>\n                <MenuIcon style={{ color: '#fff' }} />\n            </IconButton>\n\n            <Drawer\n                variant=\"temporary\"\n                anchor={theme.direction === 'right' ? 'right' : 'left'}\n                open={props.appOpen}\n                onClose={() => props.setOpen(!props.appOpen)}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n                ModalProps={{\n                    keepMounted: true, // Better open performance on mobile.\n                }}\n            >\n                <IconButton style={{ marginLeft: 200 }} onClick={() => props.setOpen(!props.appOpen)}>\n                    {/* {theme.direction === \"ltr\" ?  : <MenuIcon />} */}\n                </IconButton>\n                {props.children}\n            </Drawer>\n        </div>\n    );\n}\n\nexport default withStyles(styles, { withTheme: true })(OurMenu);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Notification from '../components/notificationPopOver/notification';\nimport { initGetNotifications, markAsReadInit } from '../actions/userActions';\nimport { getNotifications } from '../selectors/selectors';\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    initGetNotifications: (id: number) => dispatch(initGetNotifications(id)),\n    markAsReadInit: (id: number) => dispatch(markAsReadInit(id)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n    getNotifications,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import React, { Fragment, useEffect, useRef } from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nexport default function Notification(props: any) {\n    const didMountRef = useRef<Object>();\n    useEffect(() => {\n        if (!didMountRef.current) {\n            didMountRef.current = true;\n        } else {\n            // console.log(\"test\");\n        }\n    }, []);\n    const { title, handleNotificationClick, open, markAsReadInit, anchorEl, id, handleClose, getNotifications } = props\n    return (\n        <>\n            <div style={{ color: '#fff' }} onClick={handleNotificationClick}>\n                {title}\n            </div>\n\n            <Popover\n                id={id}\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n                anchorOrigin={{\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                }}\n                transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'center',\n                }}\n            >\n                <Typography style={{ padding: '20px' }} color=\"secondary\" variant=\"h6\">\n                    Notifications:\n                    {' '}\n                </Typography>\n                <Divider />\n                {getNotifications.length > 0 && getNotifications.find((item) => item.status === 'unread') ? (\n                    getNotifications.map((notification, i) => (notification.status === 'unread' ? (\n                        <Fragment key={i}>\n                            <Typography\n                                onClick={() => markAsReadInit(notification.notificationId)}\n                                style={{\n                                    width: '300px', cursor: 'pointer', padding: '20px', backgroundColor: 'rgba(0,0,0,0.08)',\n                                }}\n                            >\n                                {notification.body}\n                            </Typography>\n                            <Divider />\n                        </Fragment>\n                    ) : (\n                        <Typography key={i} style={{ width: '300px', padding: '20px' }}>\n                            {notification.body}\n                        </Typography>\n                    )))\n                ) : (\n                    <Typography style={{ width: '300px', padding: '20px' }}>No Notifications</Typography>\n                )}\n            </Popover>\n        </>\n    );\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { INavLinkType } from '../utils/types'\n\nconst CleanLink = styled(Link)`\n    color: #fff;\n    text-decoration: none;\n    font-size: 0.85rem;\n`\n\nexport default function NavLink({ children, to }: INavLinkType) {\n    return <CleanLink to={to}>{children}</CleanLink>\n}\n","/* eslint-disable react/jsx-props-no-spreading */\nimport React from 'react'\nimport styled from 'styled-components'\nimport { INavButtonType } from '../utils/types'\n\nconst Button = styled.button`\n    color: #fff;\n    font-weight: 400;\n    border: 0;\n    margin: 0;\n    outline: 0;\n    padding: 0;\n    background-color: transparent;\n    cursor: pointer;\n    text-decoration: 'none';\n    fontsize: 0.85rem;\n`\n\nexport default function NavButton({ onClick, children }: INavButtonType) {\n    return (\n        <li data-testid=\"nav-button-test\" style={{ padding: '0.5rem' }}>\n            <Button onClick={onClick}>{children}</Button>\n        </li>\n    )\n}\n","import React from 'react'\nimport { MenuItem } from '@material-ui/core'\nimport styled from 'styled-components'\nimport { IMenuItemType } from '../utils/types'\n\nconst OurStyledMenuItem = styled(MenuItem)`\n    padding: 10px;\n    a {\n        color: #000;\n    }\n`\n\nconst OurMenuItem = ({ children }: IMenuItemType) => (\n    <OurStyledMenuItem>{children}</OurStyledMenuItem>\n)\n\nexport default OurMenuItem\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport styled from 'styled-components'\nimport Notification from '../../containers/notificationTooltip'\nimport menus from './menu.json'\nimport NavLink from '../../common/NavLink'\nimport NavButton from '../../common/NavButton'\nimport { IDyanmicMenuType } from '../../utils/types'\nimport OurMenuItem from '../../common/OurMenuItem'\nimport storeHooks from '../../common/storeHooks'\n\nconst UnOrderedList = styled.ul`\n    display: flex;\n    flex-direction: row;\n    flex-wrap: wrap-reverse;\n    padding-right: 20px;\n    justify-content: flex-end;\n    list-style-type: none;\n`\n\nconst UnOrderedListItem = styled.li`\n    padding: 0.5rem;\n`\nconst MenuItemLink = styled(Link)`\n    text-decoration: none;\n    font-weight: 500;\n`\nconst GuestMenuItemLink = styled(Link)`\n    color: #333;\n    fontweight: 500;\n    textdecoration: none;\n`\nconst DyanmicMenu: React.FC<IDyanmicMenuType> = ({\n    isAuthenticated,\n    googleAccount,\n    notificationId,\n    handleNotificationClick,\n    handleClose,\n    darkTheme,\n    open,\n    anchorEl,\n    logOut,\n    type,\n}) => {\n    const { user } = storeHooks()\n\n    console.log('sdsfsf checking', user)\n    const authenticatedNavItems = menus.menus.map((item, i) => (\n        <UnOrderedListItem>\n            {item.link !== 'likes' &&\n                item.link !== 'posts' &&\n                item.link !== 'profile' &&\n                item.link !== 'logout' && (\n                    <NavLink to={`/${item.link}`}>{item.name}</NavLink>\n                )}\n            {item.link === 'likes' && (\n                <NavLink\n                    to={{\n                        pathname: `/${user?.id}/${item.link}`,\n                    }}\n                >\n                    {item.name}\n                </NavLink>\n            )}\n            {item.link === 'profile' && (\n                <NavLink\n                    to={{\n                        pathname: `/${item.link}/${user?.username}`,\n                    }}\n                >\n                    {item.name}\n                </NavLink>\n            )}\n            {item.link === 'posts' && (\n                <NavLink\n                    to={{\n                        pathname: `/${user?.id}/${item.link}`,\n                    }}\n                >\n                    {item.name}\n                </NavLink>\n            )}\n        </UnOrderedListItem>\n    ))\n\n    const guestNavItems = menus.guestMenu.map((item, i) => (\n        <UnOrderedListItem>\n            <NavLink to={`/${item.link}`}>{item.name}</NavLink>\n        </UnOrderedListItem>\n    ))\n\n    const authenticatedMenuItems = menus.menus.map((item, i) => (\n        <OurMenuItem>\n            {item.link !== 'likes' &&\n                item.link !== 'posts' &&\n                item.link !== 'profile' &&\n                item.link !== 'logout' && (\n                    <MenuItemLink to={`/${item.link}`}>\n                        {item.name}\n                    </MenuItemLink>\n                )}\n            {item.link === 'likes' && (\n                <MenuItemLink\n                    to={{\n                        pathname: `/${user?.id}/${item.link}`,\n                    }}\n                >\n                    {item.name}\n                </MenuItemLink>\n            )}\n            {item.link === 'profile' && (\n                <MenuItemLink\n                    to={{\n                        pathname: `/${item.link}/${user?.username}`,\n                    }}\n                >\n                    {item.name}\n                </MenuItemLink>\n            )}\n            {item.link === 'posts' && (\n                <MenuItemLink\n                    to={{\n                        pathname: `/${user?.id}/${item.link}`,\n                    }}\n                >\n                    {item.name}\n                </MenuItemLink>\n            )}\n        </OurMenuItem>\n    ))\n    const guestMenuItems = menus.guestMenu.map((item, i) => (\n        <UnOrderedListItem>\n            <GuestMenuItemLink to={`/${item.link}`}>\n                {item.name}\n            </GuestMenuItemLink>\n        </UnOrderedListItem>\n    ))\n    return isAuthenticated || googleAccount === true ? (\n        <UnOrderedList>\n            {type === 'main-menu'\n                ? authenticatedNavItems\n                : authenticatedMenuItems}\n            <NavButton>\n                <Notification\n                    userId={user?.id}\n                    id={notificationId}\n                    handleClose={handleClose}\n                    open={open}\n                    anchorEl={anchorEl}\n                    handleNotificationClick={handleNotificationClick}\n                    title=\"Notifications\"\n                />\n            </NavButton>\n            <NavButton onClick={darkTheme}>Change Theme</NavButton>\n            <NavButton onClick={logOut}>Logout</NavButton>\n        </UnOrderedList>\n    ) : (\n        <UnOrderedList>\n            {type === 'main-menu' ? guestNavItems : guestMenuItems}\n        </UnOrderedList>\n    )\n}\n\nexport default DyanmicMenu\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport OurMenu from './Menu'\nimport DynamicMenu from './DynamicMenu'\nimport { IMainNavType } from '../../utils/types'\n\nfunction CollapasedMenu({\n    isAuthenticated,\n    googleAccount,\n    darkTheme,\n    appOpen,\n    setOpen,\n    logOut,\n    handleClose,\n    handleNotificationClick,\n    open,\n    anchorEl,\n    notificationId,\n}: IMainNavType) {\n    return (\n        <Grid item>\n            <OurMenu appOpen={appOpen} setOpen={setOpen}>\n                <DynamicMenu\n                    isAuthenticated={isAuthenticated}\n                    googleAccount={googleAccount}\n                    darkTheme={darkTheme}\n                    logOut={logOut}\n                    notificationId={notificationId}\n                    open={open}\n                    anchorEl={anchorEl}\n                    handleClose={handleClose}\n                    handleNotificationClick={handleNotificationClick}\n                    type=\"collapsed-menu\"\n                />\n            </OurMenu>\n        </Grid>\n    )\n}\n\nexport default CollapasedMenu\n","import React from 'react'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { IButtonBar } from '../utils/types'\n\nconst styles = makeStyles((theme) => ({\n    buttonBar: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        margin: '10px',\n        paddingLeft: '16px',\n        right: 0,\n        width: '100%',\n        background: 'transparent',\n    },\n}))\n\nconst ButtonBar: React.FC<IButtonBar> = ({ children }) => {\n    const classes = styles()\n    return (\n        <div className={classes.buttonBar} id=\"appbar-collapse\">\n            {children}\n        </div>\n    )\n}\nexport default ButtonBar\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { IMainNavType } from '../../utils/types'\nimport ButtonBar from '../../common/ButtonBar'\nimport DynamicMenu from './DynamicMenu'\n\nfunction MainNav({\n    isAuthenticated,\n    googleAccount,\n    darkTheme,\n    logOut,\n    notificationId,\n    open,\n    anchorEl,\n    handleClose,\n    handleNotificationClick,\n}: IMainNavType) {\n    return (\n        <Grid item>\n            <ButtonBar>\n                <DynamicMenu\n                    isAuthenticated={isAuthenticated}\n                    googleAccount={googleAccount}\n                    darkTheme={darkTheme}\n                    logOut={logOut}\n                    notificationId={notificationId}\n                    open={open}\n                    anchorEl={anchorEl}\n                    handleClose={handleClose}\n                    handleNotificationClick={handleNotificationClick}\n                    type=\"main-menu\"\n                />\n            </ButtonBar>\n        </Grid>\n    )\n}\n\nexport default MainNav\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 210;\nconst styles = makeStyles((theme) => ({\n    buttonBar: {\n        [theme.breakpoints.down('md')]: {\n            display: 'none',\n        },\n        margin: '10px',\n        paddingLeft: '16px',\n        right: 0,\n        // position: \"relative\",\n        width: '100%',\n        background: 'transparent',\n    },\n    appBar: {\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n    },\n    appBarShift: {\n        width: `calc(100% - ${drawerWidth}px)`,\n        marginLeft: drawerWidth,\n        transition: theme.transitions.create(['margin', 'width'], {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n    },\n    drawerClose: {\n        transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        overflowX: 'hidden',\n    // width: theme.spacing.unit * 7 + 1,\n    // [theme.breakpoints.up(\"sm\")]: {\n    //     width: theme.spacing.unit * 9 + 1,\n    // },\n    },\n}));\n\nfunction useWrapperSlide() {\n    const [appOpen, appSetOpen] = React.useState(false);\n    const classes = styles();\n\n    return {\n        appOpen,\n        appSetOpen,\n        classes,\n    };\n}\n\nexport default useWrapperSlide;\n","import React from 'react'\nimport InputBase from '@material-ui/core/InputBase'\nimport { Button } from '@material-ui/core'\nimport SearchIcon from '@material-ui/icons/Search'\nimport storeHooks from '../../common/storeHooks'\nimport { history } from '../../ourHistory'\n\nconst Search: React.FC = () => {\n    const { query, searchQ, user } = storeHooks()\n    const search = (value: string) => {\n        searchQ(value)\n    }\n\n    const onSubmit = () => {\n        history.push({\n            pathname: `/search/posts?q=${query}`,\n            state: { query, user },\n        })\n    }\n\n    const disableIfEmpty = query.length === 0\n    const ifTyping = query.length > 0 ? '100px' : '-40px'\n    const fadeIfempty = query.length > 0 ? 1 : 0.1\n\n    return (\n        <>\n            <form onSubmit={onSubmit}>\n                <InputBase\n                    placeholder=\"Search…\"\n                    style={{ color: '#fff' }}\n                    onChange={(e) => search(e.target.value)}\n                    value={query}\n                    inputProps={{ 'aria-label': 'search' }}\n                />\n                <Button\n                    disabled={disableIfEmpty}\n                    style={{\n                        marginLeft: ifTyping,\n                        opacity: fadeIfempty,\n                        transition: 'ease 0.4s',\n                        outline: 'none',\n                        backgroundColor: 'transparent',\n                    }}\n                    size=\"small\"\n                    type=\"submit\"\n                    variant=\"outlined\"\n                    color=\"primary\"\n                >\n                    <SearchIcon style={{ color: '#fff' }} />\n                </Button>\n            </form>\n        </>\n    )\n}\n\nexport default Search\n","import React from 'react'\nimport PostList from '../forms/postList/postList'\nimport GridHoc from '../hoc/grid'\nimport usePostsHook from '../../common/usePostHook'\nimport OurWrapper from '../../common/OurWrapper'\nimport { UserPostsType } from '../../utils/types'\n\nfunction UserPosts({\n    appBar,\n    appBarShift,\n    appOpen,\n    dislikePost,\n    postCommentInit,\n    likePost,\n    user,\n    deleteComment,\n    deletePostInit,\n    isNotified,\n    notification,\n    notificationInit,\n}: UserPostsType) {\n    const { posts } = usePostsHook()\n    return (\n        <>\n            <OurWrapper\n                appBar={appBar}\n                appOpen={appOpen}\n                appBarShift={appBarShift}\n            >\n                <PostList\n                    likePost={likePost}\n                    deletePost={deletePostInit}\n                    deleteComment={deleteComment}\n                    dislikePost={dislikePost}\n                    posts={posts}\n                    currentUser={user}\n                    postComment={postCommentInit}\n                    isNotified={isNotified}\n                    getNotifications={notificationInit}\n                    notification={notification}\n                />\n            </OurWrapper>\n        </>\n    )\n}\n\nexport default GridHoc(React.memo(UserPosts))\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n    deleteCommentInit, deletePostInit, dislikePostInit, getPostsInit, likePostInit, notificationInit, postCommentInit,\n} from '../actions/postActions';\nimport UserPosts from '../components/userPosts/UserPosts';\nimport { getNotification, getUser, getUserPosts } from '../selectors/selectors';\n\nconst mapStateToProps = (state, ownProps) => createStructuredSelector({\n    posts: getUserPosts(ownProps.match.params),\n    user: getUser,\n    notification: getNotification,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n    notificationInit: () => dispatch(notificationInit()),\n    getPostsInit: () => dispatch(getPostsInit()),\n    likePost: (id: number) => dispatch(likePostInit(id)),\n    postCommentInit: (commentData: object) => dispatch(postCommentInit(commentData)),\n    dislikePost: (id: number) => dispatch(dislikePostInit(id)),\n    deletePostInit: (id: number, userId: number) => dispatch(deletePostInit(id, userId)),\n    deleteComment: (id: number, postId: number, userId: number) => dispatch(deleteCommentInit(id, postId, userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React, { Fragment } from 'react'\nimport styled from 'styled-components'\nimport storehooks from '../common/storeHooks'\nimport OurLink from '../common/OurLink'\n\nconst SearchCard = styled.div`\n    width: 30%;\n    padding: 10px;\n    position: absolute;\n    margin-top: 20px;\n    background-color: #fff;\n    border: 1px solid #000;\n`\nconst NoPostsCard = styled.div`\n    font-size: 12px;\n    width: 30%;\n    padding: 10px;\n    position: absolute;\n    margin-top: 20px;\n    background-color: #fff;\n    border: 1px solid #000;\n`\nconst Gravatar = styled.img`\n    padding: 0px 8px;\n    width: 10px;\n    height: 10px;\n`\n\nconst SearchResults: React.FC = () => {\n    const { postResults, query } = storehooks()\n\n    return (\n        <>\n            {postResults.map((item) => (\n                <SearchCard>\n                    <Gravatar src={item.author.gravatar} />\n                    <OurLink\n                        style={{ fontSize: '12px' }}\n                        to={{\n                            pathname: `/post/${item.id}`,\n                        }}\n                        title={item.title}\n                    />\n                </SearchCard>\n            ))}\n            {query !== '' && postResults.length === 0 && (\n                <NoPostsCard>No Posts Found</NoPostsCard>\n            )}\n        </>\n    )\n}\n\nexport default SearchResults\n","import React, { Fragment, useEffect } from 'react';\nimport storehooks from '../../common/storeHooks';\nimport GridHoc from '../hoc/grid';\nimport PostList from '../forms/postList/postList';\nimport { SearchResultsPageType } from '../../utils/types';\n\nconst SearchResultPage: React.FC<SearchResultsPageType> = ({ location }) => {\n    const {\n        posts, getSearch, likePost, deletePost, deleteComment, dislikePost, postComment, editComment, isNotified, notifications,\n    } = storehooks();\n    const { query } = location.state;\n    const { currentUser } = location.state;\n    useEffect(() => {\n        getSearch(query);\n    }, [query]);\n\n    return (\n        <>\n            <PostList\n                likePost={likePost}\n                deletePost={deletePost}\n                deleteComment={deleteComment}\n                dislikePost={dislikePost}\n                posts={posts}\n                currentUser={currentUser}\n                postComment={postComment}\n                isNotified={isNotified}\n                getNotifications={notifications}\n                editComment={editComment}\n            />\n        </>\n    );\n};\n\nexport default GridHoc(SearchResultPage);\n","import React, { Fragment } from 'react'\nimport classnames from 'classnames'\nimport AppBar from '@material-ui/core/AppBar'\nimport Grid from '@material-ui/core/Grid'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport { Route, Router, Redirect, Switch } from 'react-router-dom'\nimport Landing from './components/landing/landing'\nimport Dashboard from './components/dashboard/dashboard'\nimport EmailConfirmation from './components/emailConfirmation/emailConfirmation'\nimport EmailConfirmationSuccess from './components/emailConfirmationSuccess/emailConfirmationSuccess'\nimport Likes from './containers/Likes'\nimport Login from './components/login/login'\nimport Post from './components/post/post'\nimport EditProfile from './components/editProfile/editProfile'\nimport Profile from './components/profile/profile'\nimport Register from './components/register/register'\nimport { history } from './ourHistory'\nimport PrivateRoute from './PrivateRoute'\nimport NotFound from './components/404/404'\nimport CollapasedMenu from './components/menus/CollapsedMenu'\nimport MainNav from './components/menus/MainNav'\nimport useWrapperSlide from './common/useWrapperSlide'\nimport Search from './components/search/Search'\nimport UserPosts from './containers/UserPosts'\nimport storeHooks from './common/storeHooks'\nimport OurLink from './common/OurLink'\nimport SearchResults from './common/SearchResults'\nimport SearchResultPage from './components/searchResultPage/searchResultPage'\nimport { IRouterType } from './utils/types'\n\nfunction MyRouter({\n    notifications,\n    hasError,\n    logOut,\n    darkTheme,\n    isAuthenticated,\n    googleAccount,\n}: IRouterType) {\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(\n        null\n    )\n    const { classes, appOpen, appSetOpen } = useWrapperSlide()\n    const { user } = storeHooks()\n    const open = Boolean(anchorEl)\n    const id = open ? 'simple-popover' : undefined\n    const handleNotificationClick = (\n        event: React.MouseEvent<HTMLButtonElement>\n    ) => {\n        setAnchorEl(event.currentTarget)\n        notifications(user.id)\n    }\n\n    const handleClose = React.useCallback(() => {\n        setAnchorEl(null)\n    }, [setAnchorEl])\n    return hasError ? (\n        <div>Error</div>\n    ) : (\n        <Router history={history}>\n            <AppBar\n                position=\"static\"\n                className={classnames(\n                    (classes.appBar,\n                    {\n                        [classes.appBarShift]: appOpen,\n                    })\n                )}\n            >\n                <Toolbar style={{ height: '1px' }}>\n                    <Grid item lg={2} style={{ flex: 1 }}>\n                        <Typography\n                            style={{ color: '#fff' }}\n                            variant=\"subtitle1\"\n                            color=\"secondary\"\n                        >\n                            TypeScript React\n                        </Typography>\n                    </Grid>\n                    <Grid item lg={8} style={{ flex: 1 }}>\n                        <Search />\n                        <SearchResults />\n                    </Grid>\n\n                    <CollapasedMenu\n                        handleClose={handleClose}\n                        setOpen={appSetOpen}\n                        appOpen={appOpen}\n                        handleNotificationClick={handleNotificationClick}\n                        logOut={logOut}\n                        darkTheme={darkTheme}\n                        isAuthenticated={isAuthenticated}\n                        googleAccount={googleAccount}\n                        open={open}\n                        anchorEl={anchorEl}\n                        notificationId={id}\n                    />\n                    <MainNav\n                        darkTheme={darkTheme}\n                        logOut={logOut}\n                        handleClose={handleClose}\n                        open={open}\n                        notificationId={id}\n                        anchorEl={anchorEl}\n                        handleNotificationClick={handleNotificationClick}\n                        isAuthenticated={isAuthenticated}\n                        googleAccount={googleAccount}\n                    />\n                </Toolbar>\n            </AppBar>\n\n            <Switch>\n                <Route exact path=\"/\" render={() => <Landing />} />\n                <Route\n                    path=\"/login\"\n                    render={() =>\n                        isAuthenticated === true || googleAccount === true ? (\n                            <Redirect to=\"/dashboard\" />\n                        ) : (\n                            <Login />\n                        )\n                    }\n                />\n                <Route\n                    path=\"/register\"\n                    render={() =>\n                        isAuthenticated === true || googleAccount === true ? (\n                            <Redirect to=\"/dashboard\" />\n                        ) : (\n                            <Register />\n                        )\n                    }\n                />\n                <Route\n                    path=\"/emailConfirmation\"\n                    component={EmailConfirmation}\n                />\n\n                <Route\n                    exact\n                    path=\"/search/posts\"\n                    component={SearchResultPage}\n                />\n                <Route\n                    path=\"/emailConfirmationSuccess/:userId/:token\"\n                    component={EmailConfirmationSuccess}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/dashboard\"\n                    Component={Dashboard}\n                    appOpen={appOpen}\n                    googleAccount={googleAccount}\n                    isAuthenticated={isAuthenticated}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/profile/:username\"\n                    Component={Profile}\n                    appOpen={appOpen}\n                    googleAccount={googleAccount}\n                    isAuthenticated={isAuthenticated}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/editProfile\"\n                    Component={EditProfile}\n                    appOpen={appOpen}\n                    googleAccount={googleAccount}\n                    isAuthenticated={isAuthenticated}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/:userId/likes\"\n                    Component={Likes}\n                    appOpen={appOpen}\n                    googleAccount={googleAccount}\n                    isAuthenticated={isAuthenticated}\n                />\n                <PrivateRoute\n                    exact\n                    path=\"/:userId/posts\"\n                    Component={UserPosts}\n                    appOpen={appOpen}\n                    googleAccount={googleAccount}\n                    isAuthenticated={isAuthenticated}\n                />\n                <Route path=\"/post/:id\" component={Post} />\n\n                <Route component={NotFound} />\n            </Switch>\n        </Router>\n    )\n}\n\nexport default MyRouter\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n    getUser,\n    logOutInit,\n    initGetNotifications,\n} from './actions/userActions'\nimport { history } from './ourHistory'\nimport Router from './Router'\n\nexport type routerContainerState = {\n    hasError: boolean\n}\nexport type routerContainerProps = {\n    getUser: () => void\n    logOutInit: (data) => void\n    darkTheme: () => void\n    initGetNotifications: (id: number) => void\n    user: {\n        isAuthenticated: boolean\n        googleAccount: boolean\n    }\n}\n\nclass Nav extends Component<routerContainerProps, routerContainerState> {\n    state: routerContainerState = {\n        hasError: false,\n    }\n\n    componentDidMount() {\n        this.props.getUser()\n    }\n\n    componentDidCatch(error, info) {\n        this.setState({\n            hasError: true,\n        })\n    }\n\n    ourLogOut = () => {\n        this.props.logOutInit(history)\n    }\n\n    render() {\n        const { hasError } = this.state\n        return (\n            <Router\n                darkTheme={this.props.darkTheme}\n                notifications={this.props.initGetNotifications}\n                hasError={hasError}\n                logOut={this.ourLogOut}\n                googleAccount={this.props.user.googleAccount}\n                isAuthenticated={this.props.user.isAuthenticated}\n            />\n        )\n    }\n}\nconst dispatchToProps = (dispatch: any) => ({\n    getUser: () => dispatch(getUser()),\n    logOutInit: (data: object) => dispatch(logOutInit(data)),\n    initGetNotifications: (id: number) => dispatch(initGetNotifications(id)),\n})\n\nconst mapStateToProps = (state: any) => ({\n    user: state.user,\n})\nexport default connect(mapStateToProps, dispatchToProps)(Nav)\n","import React from 'react'\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { setDark } from './actions/userActions'\nimport Nav from './Nav'\nimport { userSession } from './utils'\nimport { getDark } from './selectors/selectors'\n\nuserSession.userSession()\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#48A9A6',\n        },\n        secondary: {\n            main: '#000000',\n        },\n    },\n})\n\nconst defaultTheme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#48A9A6',\n        },\n        secondary: {\n            main: '#000000',\n        },\n    },\n})\ndefaultTheme.typography.h6 = {\n    fontSize: '0.9rem',\n    '@media (min-width:600px)': {\n        fontSize: '0.5rem',\n    },\n    [theme.breakpoints.up('lg')]: {\n        fontSize: '1.4rem',\n    },\n    [theme.breakpoints.up('sm')]: {\n        fontSize: '1.4rem',\n    },\n}\ndefaultTheme.typography.h5 = {\n    '@media (min-width:600px)': {\n        fontSize: '0.9rem',\n    },\n    [theme.breakpoints.up('md')]: {\n        fontSize: '1.4rem',\n    },\n}\n\nconst dark = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#000',\n        },\n        secondary: {\n            main: '#000',\n        },\n    },\n})\n\nconst App: React.FC = () => {\n    const dispatch = useDispatch()\n    const isDark = useSelector(getDark)\n    return (\n        <ThemeProvider theme={isDark ? defaultTheme : dark}>\n            <Nav darkTheme={() => dispatch(setDark())} />\n        </ThemeProvider>\n    )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport { store, persitor } from './store';\nimport App from './App';\n\nconst app = (\n    <Provider store={store}>\n        <PersistGate persistor={persitor}>\n            <App />\n        </PersistGate>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}