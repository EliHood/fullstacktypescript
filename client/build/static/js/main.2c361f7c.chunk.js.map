{"version":3,"sources":["serviceWorker.ts","utils/sessionData.tsx","ourAxios.tsx","utils/setAuthToken.tsx","actions/userActions.tsx","actionTypes/userActionTypes.tsx","ourHistory.tsx","utils/userSession.tsx","utils/validation.tsx","reducers/postReducer.tsx","actionTypes/postActionTypes.tsx","reducers/userReducer.tsx","reducers/index.tsx","api/api.tsx","sagas/auth.tsx","actions/postActions.tsx","sagas/post.tsx","sagas/index.tsx","store.tsx","common/OurLink.tsx","selectors/selectors.tsx","common/notificationHook.tsx","common/storeHooks.tsx","common/Date.tsx","common/ButtonFunction.tsx","common/LikeButton.tsx","common/OurModal.tsx","common/AuthButtons.tsx","components/forms/comment/GifSection.tsx","common/OurTextField.tsx","components/forms/comment/CommentForm.tsx","common/OurSecondaryButton.tsx","components/forms/commentBody/commentBody.tsx","components/forms/commentItem/CommentItem.tsx","components/forms/reply/ReplyForm.tsx","components/forms/commentAuthorData/commentAuthorData.tsx","components/forms/commentListContainer/commentListContainer.tsx","components/forms/commentList/CommentList.tsx","components/forms/commentbottom/commentBottom.tsx","components/forms/PostItemContainer/PostItemContainer.tsx","common/OurLoader.tsx","components/forms/postList/postList.tsx","components/hoc/grid.tsx","common/usePostHook.tsx","common/OurError.tsx","common/OurWrapper.tsx","components/landing/landing.tsx","components/forms/createPost/createPost.tsx","components/tabs/OurTabs.tsx","common/handleHook.tsx","components/dashboard/dashboard.tsx","components/emailConfirmation/emailConfirmation.tsx","components/emailConfirmationSuccess/emailConfirmationSuccess.tsx","components/Likes/Likes.tsx","containers/Likes.tsx","components/forms/login/login.tsx","components/hoc/isAuthenticated.tsx","common/GoogleButton.tsx","components/login/login.tsx","components/post/post.tsx","components/forms/editProfile/editForm.tsx","components/editProfile/editProfile.tsx","components/profile/profile.tsx","components/forms/signUp/signUp.tsx","components/register/register.tsx","PrivateRoute.tsx","components/404/404.tsx","components/menus/Menu.tsx","containers/notificationTooltip.tsx","components/notificationPopOver/notification.tsx","common/OurMenuItem.tsx","components/menus/CollapsedMenu.tsx","common/NavLink.tsx","common/NavButton.tsx","components/menus/MainNav.tsx","common/useWrapperSlide.tsx","components/search/Search.tsx","components/userPosts/UserPosts.tsx","containers/UserPosts.tsx","common/SearchResults.tsx","components/searchResultPage/searchResultPage.tsx","Router.tsx","Nav.tsx","App.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","token","localStorage","setItem","removeItem","getItem","AxiosInstance","Axios","create","baseURL","process","withCredentials","headers","Accept","interceptors","response","use","setAuthToken","defaults","common","Authorization","signUpSuccess","payload","user","type","logOutInit","history","loginSuccess","followUserFailure","err","initGetNotifications","createBrowserHistory","forceRefresh","jwtToken","decoded","jwt_decode","store","dispatch","currentTime","Date","now","iat","clear","href","chars","length","password","initialState","posts","postPage","isLoading","titleError","bodyError","title","postContent","error","isNotified","notification","searchValue","results","searchPageResults","selectedUser","mentionedUser","commenterId","postReducer","state","action","produce","draft","console","log","post","findKey","findIndex","x","id","likeCounts","likedByMe","message","newfindKey","filter","item","data","validation","postKey","postId","commentKey","Comments","comment_body","sort","a","b","createdAt","newPostKey","findCommentKey2","comment","date1","userId","repostPostKey","RepostedByMe","replyPostId","reply","replyCommentId","commentId","postReplyIndex","commentIndex","commentReplies","deleteReplyPostId","deleteReplyCommentId","replyId","deleteReplyIdx","commentIdx","unRepostId","unrepostPostKey","isAuthenticated","googleAccount","emailVerified","currentUser","profileData","profilePage","usernameError","passwordError","emailError","email","passwordConf","passwordConfError","getNotifications","username","notDark","authReducer","meta","loginStatus","sessionData","verified","loginStatus2","emailVerified2","verified2","follow","UserFollowers","followerId","isFollowing","markKey","notificationId","status","notifications","persistConfig","key","storage","whitelist","pesistedReducer","persistReducer","rootReducer","combineReducers","signUp","userData","then","res","autoLogin","get","logOut","logIn","editProfile","getProfile","followUser","unfollowUser","delete","resendConfirmation","emailConfirmation","updateProfile","put","markAsRead","createPost","postData","repost","unrepost","getPosts","likePost","deletePost","getPost","dislikePost","postComment","commentData","deleteComment","editComment","replyComment","replyData","deleteReply","searchPosts","query","searchPostsNull","registerUser","getAutoLoginStatus","getUserProfile","updateUserProfile","login","resendEmailConfirmation","watchNotifications","watchMarkAsRead","watchLogin","watchFollowUser","watchUnFollowUser","watchProfile","watchResendEmailConfirmation","watchEmailConfirmation","watchUpdateProfile","watchEditProfile","watchAuthLogin","watchUserRegister","watchLogout","call","api","actionTypes","push","pathname","errMsg","googleId","profile","logout","jwtDecode","email_verified","toString","unfollow","mark","takeLatest","fork","likePostInit","dislikePostInit","dislikePostFailiure","deletePostInit","postCommentInit","deleteCommentInit","deleteReplyFailure","searchPostsSuccess","setSelectedUser","commentUpdates","getNotification","fetchPost","repostPost","unRepostPost","watchSearchPosts","watchSearchPageResults","watchDeleteReply","watchFetchPost","watchReplyComment","watchRepostPost","watchUnRepostPost","watchEditComment","watchDeletePost","watchDeleteComment","watchLikePost","watchdisLikePost","watchPostComment","watchPosts","watchCreatePost","createEventChannel","pusher","eventChannel","emitter","channel","subscribe","bind","body","toast","success","info","unbind","createCommentChannel","pusherClient","Pusher","cluster","forceTLS","take","like","dislike","confirm","deleteConfirmation","replyBody","search","auth","sagaMiddleware","createSagaMiddleware","createStore","composeWithDevTools","applyMiddleware","persitor","persistStore","sagas","map","run","TheLink","styled","Link","OurLink","props","postSelector","userSelector","userStore","createSelector","getProfileData","getIsNotified","userConfirmation","userError","postError","userMessage","getPopPosts","slice","getUser","getTitleError","getBodyError","searchQuery","getSelectedUser","mentionUser","getCommenterId","fetchRelatedUsers","keyFn","array","mySet","Set","isNew","has","add","removeDuplicatesBy","recursGetUsers","flatMap","v","author","concat","useNotificationHook","useDispatch","useSelector","React","useEffect","useStoreMethods","ourTitle","ourBodyError","ourPostContent","popPosts","userErr","errPost","loading","postResults","searchResults","mentionUsers","setSelectedOptionValue","optionValue","setMentioned","getSearch","searchQ","deleteRep","replyComm","rePost","repostPostInit","unRepost","unrepostPostInit","OurDate","Typography","variant","align","moment","calendar","style","fontSize","ButtonFunction","onReply","update","setEditComment","replyUserId","storeHooks","cursor","paddingRight","onClick","color","margin","display","float","LikeButton","padding","OurModal","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","Dialog","open","onClose","handleClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","to","DialogActions","Button","autoFocus","AuthButtons","writeComment","openForm","openModal","handleCloseModal","handleClickOpen","storehooks","memoizedLike","useCallback","memoizedDislike","Object","entries","gifUrl","component","GifSection","wrapperClassName","searchFormClassName","apiKey","onSelect","e","select","masonryConfig","columns","imageWidth","gutter","mq","OurTextField","TextField","label","width","name","value","onChange","handleTitleChange","className","borderRadius","multiline","size","rows","fullWidth","InputProps","startAdornment","InputAdornment","alignItems","position","setGifSelected","commentChange","paddingTop","post_content","handleContentChange","inputProps","defaultValue","setCommentEdit","CommentForm","isGif","setCommentBody","onSubmit","setMentionedUser","useState","isGifSelected","selectedOption","option","options","FormHelperText","target","disabled","Grid","container","spacing","sm","lg","buttonStyle","OurSecondaryButton","data-testid","test","children","CommentBody","source","src","CommentItem","commentEdit","editCommentValue","memoizedDeleteReply","memoizedUpdate","xs","ReplyForm","replyChange","CommentAuthorData","isBold","isReply","undefined","alt","gravatar","height","fontWeight","ourStyle","forwardRef","ref","setReplyComment","addReply","setReply","replySubmit","preventDefault","List","innerRef","paddingBottom","marginLeft","i","showMore","setShowMore","setOpenModal","showLessFlag","setShowLessFlag","the_comments","comments","inc","min","Math","showLessComments","filterComments","reverse","showMoreLess","showComments","CommentBottom","setOpenForm","setGifUrl","divRef","useRef","regex","words","split","letter","selectGif","images","downsized_large","url","commentSubmit","setTimeout","current","scrollIntoView","behavior","block","inline","commentsView","commentForm","PostItemContainer","ifOnPosts","indexOf","autoClose","POSITION","BOTTOM_RIGHT","md","Paper","Avatar","sizes","OurLoader","memo","WrappedComponent","justify","this","Component","usePostsHooks","myStyles","bottom","left","right","flexWrap","alignContent","zIndex","OurError","Alert","severity","OurWrapper","classnames","appBar","appBarShift","appOpen","GridHoc","usePostsHook","storeMethods","PostForm","disButton","TabPanel","index","other","role","hidden","Box","p","a11yProps","useStyles","makeStyles","root","flexGrow","backgroundColor","palette","background","paper","OurTabs","classes","setValue","Tabs","event","newValue","Tab","useInputChange","addTitle","addContent","addUsername","addEmail","addPassword","addPasswordConf","handleInputChange","isEnabled","emailMessage","didMountRef","params","emailConfirmationInit","includes","AlertTitle","notificationInit","connect","ownProps","createStructuredSelector","Likes","find","getPostsInit","LoginForm","submit","passwordChange","usernameChange","IsAuth","ourState","errors","initLogin","createStyles","button","shape","boxShadow","shadows","textDecoration","wrapper","marginTop","justifyContent","icon","text","textTransform","textAlign","alignSelf","GoogleLoginButton","xmlns","viewBox","fill","d","image","backgroundImage","backgroundRepeat","grey","backgroundSize","backgroundPosition","flexDirection","avatar","secondary","main","form","setUsername","setPassword","CssBaseline","elevation","square","goBack","loginInit","Post","parseInt","lineHeight","EditProfileForm","bio","handleBio","handleGravatar","FormGroup","FormLabel","setBio","setGravatar","mounted","handleSubmit","userFollowerCount","followerPlural","letterSpacing","followUserInit","unfollowUserInit","followerDetails","SignUpForm","emailChange","passwordConfChange","signUpInit","signup","PrivateRoute","rest","render","withStyles","buttonCollapse","up","drawerPaper","top","withTheme","IconButton","setOpen","Drawer","anchor","direction","ModalProps","keepMounted","mapStateToProps","markAsReadInit","anchorEl","handleNotificationClick","Popover","anchorOrigin","vertical","horizontal","transformOrigin","Divider","OurStyledMenuItem","MenuItem","OurMenuItem","CollapasedMenu","setAnchorEl","darkTheme","NavLink","NavButton","border","outline","styles","buttonBar","transition","transitions","easing","sharp","duration","leavingScreen","easeOut","enteringScreen","MainNav","listStyleType","menus","link","guestMenu","drawerClose","overflowX","useWrapperSlide","appSetOpen","Search","disableIfEmpty","ifTyping","fadeIfempty","InputBase","placeholder","opacity","UserPosts","SearchResults","MyRouter","currentTarget","hasError","AppBar","Toolbar","flex","exact","path","EmailConfirmation","SearchResultPage","EmailConfirmationSuccess","Dashboard","Profile","EditProfile","NotFound","Nav","ourLogOut","setState","Router","userSession","createMuiTheme","primary","defaultTheme","typography","h6","h5","dark","setDark","ThemeProvider","app","persistor","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c361f7c.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost'\n    // [::1] is the IPv6 localhost address.\n    || window.location.hostname === '[::1]'\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    || window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href,\n    );\n\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service '\n              + 'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all '\n                  + 'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n\n      if (\n        response.status === 404\n        || (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","export default {\n  // save logged session\n  setUserLoggedIn: (token: any) => {\n    localStorage.setItem('jwtToken', token);\n  },\n  // remove token\n  setUserLoggdOut: () => {\n    localStorage.removeItem('jwtToken');\n  },\n  //   check if a user is signed in and stuff\n  getLoginStatus: () => (localStorage.getItem('jwtToken') !== 'null'),\n  emailVerifiedStatus: () => (localStorage.getItem('email_verified') === 'true'),\n  googleIdStatus: () => (localStorage.getItem('googleId') !== null),\n};\n","import Axios from 'axios';\nimport 'dotenv/config';\n\nconst AxiosInstance = Axios.create({\n  baseURL: process.env.REACT_APP_BASE_URL, // localhost:3000\n  withCredentials: true,\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json',\n  },\n});\n\nAxiosInstance.interceptors.response.use(\n  (response) =>\n  // const token = localStorage.getItem('auth');\n  // response.headers.Authorization =  token ? `Bearer ${token}` : '';\n\n    response,\n);\n\nexport default AxiosInstance;\n","import Axios from '../ourAxios';\n\nconst setAuthToken = (token) => {\n  if (token) {\n    // Apply to every request\n    Axios.defaults.headers.common.Authorization = token;\n  } else {\n    // Delete auth header\n    delete Axios.defaults.headers.common.Authorization;\n  }\n};\n\nexport default setAuthToken;\n","import * as types from '../actionTypes/userActionTypes';\n\nexport const emailConfirmationInit = (payload: object) => ({\n  type: types.EMAIL_CONFIRMATION_INIT,\n  payload,\n});\n\nexport const emailConfirmationSuccess = (payload: object) => ({\n  type: types.EMAIL_CONFIRMATION_SUCCESS,\n  payload,\n});\n\nexport const emailConfirmationFailure = (error: object) => ({\n  type: types.EMAIL_CONFIRMATION_FAILURE,\n  error,\n});\n\nexport const setDark = () => ({\n  type: types.SET_DARK,\n});\n\nexport const resendEmailConfirmationInit = () => ({\n  type: types.RESEND_EMAIL_CONFIRMATION_INIT,\n});\n\nexport const resendEmailConfirmationSuccess = (payload: object) => ({\n  type: types.RESEND_EMAIL_CONFIRMATION_SUCCESS,\n  payload,\n});\n\nexport const resendEmailConfirmationFailure = (error: object) => ({\n  type: types.RESEND_EMAIL_CONFIRMATION_FAILURE,\n  error,\n});\n\nexport const signUpInit = (payload: object, history: object) => ({\n  type: types.SIGN_UP_INIT,\n  payload,\n  history,\n});\n\nexport const signUpSuccess = (payload: object, user: object) => ({\n  type: types.SIGN_UP_SUCCESS,\n  payload,\n  user,\n});\n\nexport const signUpFailure = (error: object) => ({\n  type: types.SIGN_UP_FAILURE,\n  error,\n});\n\nexport const fetchAutoAuthInit = () => ({\n  type: types.FETCH_AUTO_LOGIN,\n});\n\nexport const fetchAuthAuthSuccess = (payload: object) => ({\n  type: types.FETCH_AUTO_LOGIN_SUCCESS,\n  payload,\n});\n\nexport const fetchAuthAuthFailure = (error: object) => ({\n  type: types.FETCH_AUTO_LOGIN_FAILURE,\n  error,\n});\n\nexport const logOutInit = (history: object) => ({\n  type: types.LOG_OUT_INIT,\n  history,\n});\n\nexport const logOutSuccess = (payload: object) => ({\n  type: types.LOG_OUT_SUCCESS,\n  payload,\n});\n\nexport const logOutFailure = (error: object) => ({\n  type: types.LOG_OUT_FAILURE,\n  error,\n});\n\nexport const loginInit = (payload: object, history: object) => ({\n  type: types.LOG_IN_INIT,\n  payload,\n  history,\n});\n\nexport const loginSuccess = (payload: object) => ({\n  type: types.LOG_IN_SUCCESS,\n  payload,\n});\n\nexport const loginFailure = (error: string) => ({\n  type: types.LOG_IN_FAILURE,\n  error,\n});\n\nexport const getUser = () => ({\n  type: types.GET_USER,\n});\n\nexport const getUserSuccess = (payload: object) => ({\n  type: types.GET_USER_SUCCESS,\n  payload,\n});\n\nexport const getUserFailure = (error: string) => ({\n  type: types.GET_USER_FAILURE,\n  error,\n});\n\nexport const getUserProfile = () => ({\n  type: types.GET_USER_PROFILE,\n});\n\nexport const getUserProfileSuccess = (payload: object) => ({\n  type: types.GET_USER_PROFILE_SUCCESS,\n  payload,\n});\n\nexport const getUserProfileFailure = (error: string) => ({\n  type: types.GET_USER_PROFILE_FAILURE,\n  error,\n});\n\nexport const updateUserProfile = (payload: object) => ({\n  type: types.UPDATE_USER_PROFILE,\n  payload,\n});\n\nexport const updateUserProfileSuccess = (payload: object) => ({\n  type: types.UPDATE_USER_PROFILE_SUCCESS,\n  payload,\n});\n\nexport const updateUserProfileFailure = (error: string) => ({\n  type: types.UPDATE_USER_PROFILE_FAILURE,\n  error,\n});\n\nexport const addUsername = (data: string) => ({\n  type: types.ADD_USERNAME,\n  data,\n});\n\nexport const addEmail = (data: string) => ({\n  type: types.ADD_EMAIL,\n  data,\n});\n\nexport const addPasswordConf = (data: string) => ({\n  type: types.ADD_PASSWORD_CONF,\n  data,\n});\n\nexport const addPassword = (data: string) => ({\n  type: types.ADD_PASSWORD,\n  data,\n});\n\nexport const initLogin = () => ({\n  type: types.INIT_LOGIN,\n});\n\nexport const getProfileInit = (data: string) => ({\n  type: types.GET_PROFILE_INIT,\n  data,\n});\n\nexport const getProfileSuccess = (data: string) => ({\n  type: types.GET_PROFILE_SUCCESS,\n  data,\n});\n\nexport const getProfileFailure = (err: object) => ({\n  type: types.GET_USER_PROFILE_FAILURE,\n  err,\n});\n\nexport const followUserInit = (data: string, id: number) => ({\n  type: types.FOLLOW_USER_INIT,\n  data,\n  id,\n});\n\nexport const followUserSuccess = (payload: object, id: number) => ({\n  type: types.FOLLOW_USER_SUCCESS,\n  payload,\n  id,\n});\n\nexport const followUserFailure = (err: object) => ({\n  type: types.FOLLOW_USER_FAILURE,\n  err,\n});\n\nexport const unfollowUserInit = (data: string, id: number) => ({\n  type: types.UNFOLLOW_USER_INIT,\n  data,\n  id,\n});\n\nexport const unfollowUserSuccess = (payload: object, id: number) => ({\n  type: types.UNFOLLOW_USER_SUCCESS,\n  payload,\n  id,\n});\n\nexport const unfollowUserFailure = (err: object) => ({\n  type: types.UNFOLLOW_USER_FAILURE,\n  err,\n});\n\nexport const initGetNotifications = (payload: number) => ({\n  type: types.INIT_GET_NOTIFICATIONS,\n  payload,\n});\n\nexport const getNotificationsSuccess = (payload: object) => ({\n  type: types.GET_NOTIFICATIONS_SUCCESS,\n  payload,\n});\n\nexport const getNotificationsFailure = (err: object) => ({\n  type: types.GET_NOTIFICATIONS_FAILURE,\n  err,\n});\n\nexport const markAsReadInit = (payload: number) => ({\n  type: types.MARK_AS_READ_INIT,\n  payload,\n});\n\nexport const markAsReadSuccess = (payload: object, id: number) => ({\n  type: types.MARK_AS_READ_SUCCESS,\n  payload,\n  id,\n});\n\nexport const markAsReadFailure = (err: object) => ({\n  type: types.MARK_AS_READ_FAILURE,\n  err,\n});\n","export const SIGN_UP_INIT = 'SIGN_UP_INIT';\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\n\nexport const EMAIL_CONFIRMATION_INIT = 'EMAIL_CONFIRMATION_INIT';\nexport const EMAIL_CONFIRMATION_SUCCESS = 'EMAIL_CONFIRMATION_SUCCESS';\nexport const EMAIL_CONFIRMATION_FAILURE = 'EMAIL_CONFIRMATION_FAILURE';\n\nexport const GET_PROFILE_INIT = 'GET_PROFILE_INIT';\nexport const GET_PROFILE_SUCCESS = 'GET_PROFILE_SUCCESS';\nexport const GET_PROFILE_FAILURE = 'GET_PROFILE_FAILURE';\n\nexport const FOLLOW_USER_INIT = 'FOLLOW_USER_INIT';\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\n\nexport const UNFOLLOW_USER_INIT = 'UNFOLLOW_USER_INIT';\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\n\nexport const RESEND_EMAIL_CONFIRMATION_INIT = 'RESEND_EMAIL_CONFIRMATION_INIT';\nexport const RESEND_EMAIL_CONFIRMATION_SUCCESS = 'RESEND_EMAIL_CONFIRMATION_SUCCESS';\nexport const RESEND_EMAIL_CONFIRMATION_FAILURE = 'RESEND_EMAIL_CONFIRMATION_FAILURE';\n\nexport const FETCH_AUTO_LOGIN = 'FETCH_AUTO_LOGIN';\nexport const FETCH_AUTO_LOGIN_SUCCESS = 'FETCH_AUTO_LOGIN_SUCCESS';\nexport const FETCH_AUTO_LOGIN_FAILURE = 'FETCH_AUTO_LOGIN_FAILURE';\n\nexport const LOG_OUT_INIT = 'LOG_OUT_INIT';\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\n\nexport const LOG_IN_INIT = 'LOG_IN_INIT';\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\n\nexport const GET_CURRENT_USER = 'GET_CURRENT_USER';\n\nexport const GET_USER = 'GET_USER';\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\nexport const GET_USER_FAILURE = 'GET_USER_FAILURE';\n\nexport const GET_USER_PROFILE = 'GET_USER_PROFILE';\nexport const GET_USER_PROFILE_SUCCESS = 'GET_USER_PROFILE_SUCCESS';\nexport const GET_USER_PROFILE_FAILURE = 'GET_USER_PROFILE_FAILURE';\n\nexport const UPDATE_USER_PROFILE = 'UPDATE_USER_PROFILE';\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS';\nexport const UPDATE_USER_PROFILE_FAILURE = 'UPDATE_USER_PROFILE_FAILURE';\n\nexport const ADD_USERNAME = 'ADD_USERNAME';\nexport const ADD_EMAIL = 'ADD_EMAIL';\nexport const ADD_PASSWORD = 'ADD_PASSWORD';\nexport const ADD_PASSWORD_CONF = 'ADD_PASSWORD_CONF';\nexport const INIT_LOGIN = 'INIT_LOGIN';\n\nexport const INIT_GET_NOTIFICATIONS = 'INIT_GET_NOTIFICATIONS';\nexport const GET_NOTIFICATIONS_SUCCESS = 'GET_NOTIFICATIONS_SUCCESS';\nexport const GET_NOTIFICATIONS_FAILURE = 'GET_NOTIFICATIONS_FAILURE';\n\nexport const MARK_AS_READ_INIT = 'MARK_AS_READ_INIT';\nexport const MARK_AS_READ_SUCCESS = 'MARK_AS_READ_SUCCESS';\nexport const MARK_AS_READ_FAILURE = 'MARK_AS_READ_FAILURE';\n\nexport const SET_DARK = 'SET_DARK';\n","import { createBrowserHistory } from 'history';\n\nexport const history = createBrowserHistory({ forceRefresh: true });\n","import jwt_decode from 'jwt-decode';\nimport { getUser, loginSuccess, logOutInit } from '../actions/userActions';\nimport { store } from '../store';\nimport { setAuthToken } from '.';\nimport { history } from '../ourHistory';\n\nexport default {\n  userSession: () => {\n    if (localStorage.jwtToken) {\n      // console.log(\"googletoken\", localStorage.jwtToken);\n      // Set auth token header auth\n      setAuthToken(localStorage.jwtToken);\n      // Decode token and get user info and exp\n      const token = localStorage.getItem('jwtToken');\n\n      if (token !== 'null') {\n        const decoded = jwt_decode(token);\n        // console.log(decoded);\n        // Set user and isAuthenticated\n        store.dispatch(loginSuccess(decoded));\n        // store.dispatch(getCurrentUser());\n        // this line of code may be unneccessary, because we are calling getUser from Nav component.\n        // store.dispatch(getUser());\n        // Check for expired token\n        const currentTime = Date.now() / 1000;\n\n        if (decoded.iat > currentTime) {\n          // Logout user\n          store.dispatch(logOutInit(history));\n          // Redirect to login\n          localStorage.clear();\n          window.location.href = '/login';\n        }\n      }\n    }\n  },\n};\n","const isEmail = (email: string) => {\n  const regEx = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n  if (email.match(regEx)) {\n    return true;\n  }\n  return false;\n};\n\nexport default {\n  validateEmail: (chars: string) => {\n    if (chars.length > 0) {\n      if (isEmail(chars)) {\n        return true;\n      }\n\n      return 'Email not valid';\n    }\n\n    return 'Field cannot be empty';\n  },\n\n  validateUsername: (chars: string) => {\n    if (chars.length > 0) {\n      if (chars.length > 6) {\n        return true;\n      }\n\n      return 'Username must be at least 6 chars';\n    }\n\n    return 'Field cannot be empty';\n  },\n  validatePassword: (chars: string) => {\n    if (chars.length > 0) {\n      if (chars.length > 6) {\n        return true;\n      }\n\n      return 'Must be at least 6 chars';\n    }\n\n    return 'Field cannot be empty';\n  },\n  validatePasswordConf: (chars: string, password: string) => {\n    if (chars.length > 0) {\n      if (chars.length < 6) {\n        return 'Must be at least 6 chars';\n      } if (chars !== password) {\n        return \"Passwords doesn't match\";\n      }\n\n      return true;\n    }\n\n    return 'Field cannot be empty';\n  },\n  validateString: (chars: string) => {\n    if (chars.length > 0) {\n      if (chars.length > 6) {\n        return true;\n      }\n\n      return 'Must be at least 6 chars';\n    }\n\n    return 'Field cannot be empty';\n  },\n  validateContent: (chars: string) => {\n    if (chars.length > 0) {\n      if (chars.length > 10) {\n        return true;\n      }\n\n      return 'Must be at least 10 chars';\n    }\n\n    return 'Field cannot be empty';\n  },\n};\n","import produce from 'immer';\nimport * as types from '../actionTypes/postActionTypes';\nimport { validation } from '../utils';\n\nexport type postState = {\n  posts: any[];\n  postPage: any;\n  error: any;\n  titleError: any;\n  bodyError: any;\n  title: string;\n  postContent: string;\n  isNotified: boolean;\n  notification: string;\n  isLoading: boolean;\n  searchValue: string;\n  results: any[];\n  searchPageResults: any[];\n  selectedUser: string;\n  mentionedUser: boolean;\n  commenterId: any;\n}\n\nconst initialState: postState = {\n  posts: [],\n  postPage: {},\n  isLoading: false,\n  titleError: null,\n  bodyError: null,\n  title: '',\n  postContent: '',\n  error: null,\n  isNotified: false,\n  notification: '',\n  searchValue: '',\n  results: [],\n  searchPageResults: [],\n  selectedUser: '',\n  mentionedUser: false,\n  commenterId: null,\n};\n\nconst postReducer = (state = initialState, action: any): postState => produce(state, (draft) => {\n  switch (action.type) {\n    case types.GET_POSTS_INIT:\n      draft.isLoading = true;\n\n      return;\n    case types.GET_POSTS_SUCCESS:\n      console.log(action);\n      draft.isLoading = false;\n      draft.posts = action.payload;\n\n      return;\n    case types.GET_POSTS_FAILURE:\n      console.log(action);\n      draft.isLoading = false;\n      draft.error = action.error;\n\n      return;\n    case types.CREATE_POST_SUCCESS:\n      console.log(action.payload);\n      draft.posts = [action.payload.post, ...draft.posts];\n      draft.title = '';\n      draft.postContent = '';\n\n      return;\n    case types.LIKE_POST_SUCCESS:\n      console.log('fsfsfssfsf', action);\n      const findKey = state.posts.findIndex((x) => x.id === action.payload.id);\n      console.log(findKey);\n      draft.posts[findKey].likeCounts = draft.posts[findKey].likeCounts + 1;\n      draft.posts[findKey].likedByMe = true;\n      draft.error = null;\n\n      // draft.posts[findKey] = [...(draft.posts[findKey].likeCounts + 1)];\n      return;\n    case types.LIKE_POST_FAILURE:\n      console.log('testing', action);\n      draft.error = action.error.message;\n\n      return;\n    case types.FETCH_POST_SUCCESS:\n      console.log(action);\n      draft.postPage = action.payload;\n\n      return;\n    case types.FETCH_POST_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n\n      return;\n    case types.DISLIKE_POST_SUCCESS:\n      console.log(action);\n      const newfindKey = state.posts.findIndex((x) => x.id === action.payload.id);\n      draft.posts[newfindKey].likeCounts = draft.posts[newfindKey].likeCounts - 1;\n      draft.posts[newfindKey].likedByMe = false;\n      draft.error = null;\n\n      return;\n    case types.DELETE_POST_SUCCESS:\n      console.log(action);\n      draft.posts = [...draft.posts.filter((item) => item.id !== action.id)];\n\n      return;\n\n    case types.DISLIKE_POST_FAILURE:\n      console.log('test', action);\n      draft.error = action.error.message;\n\n      return;\n      // Post comment will not be appending comment to the array state, comment update\n      // success will because comments will be real time\n    case types.POST_COMMENT_SUCCESS:\n      console.log(action);\n\n      return;\n    case types.POST_COMMENT_FAILURE:\n      draft.error = action.error;\n\n      return;\n    case types.DISLIKE_POST_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n\n      return;\n    case types.ADD_TITLE:\n      draft.title = action.data;\n      draft.titleError = validation.validateString(action.data);\n\n      return;\n    case types.ADD_CONTENT:\n      draft.postContent = action.data;\n      draft.bodyError = validation.validateContent(action.data);\n\n      return;\n    case types.EDIT_COMMENT_SUCCESS:\n      console.log(action);\n      const postKey = state.posts.findIndex((x) => x.id === action.payload.data.postId);\n      const commentKey = draft.posts[postKey].Comments.findIndex((x) => x.id === action.payload.data.id);\n      draft.posts[postKey].Comments[commentKey].comment_body = action.payload.data.comment_body;\n      draft.posts[postKey].Comments = [\n        // add comment first, then sort it out by the most recent comment\n        ...draft.posts[postKey].Comments.sort((a, b) => {\n          const date1 = new Date(a.createdAt) as any;\n          const date2 = new Date(b.createdAt) as any;\n\n          return date1 - date2;\n        }),\n      ];\n\n      return;\n    case types.EDIT_COMMENT_FAILURE:\n      console.log(action);\n      draft.error = action.data;\n\n      return;\n    case types.DELETE_COMMENT_SUCCESS:\n      const newPostKey = state.posts.findIndex((x) => x.id === action.postId);\n      draft.posts[newPostKey].Comments = [...draft.posts[newPostKey].Comments.filter((item) => item.id !== action.id)];\n\n      // draft.posts = draft.posts[newPostKey].Comments.filter((item) => item.id !== action.id);\n      return;\n    case types.DELETE_COMMENT_FAILURE:\n      draft.error = action.error;\n\n      return;\n    case types.NOTIFICATION_SUCCESS:\n      console.log(action);\n      draft.notification = action.payload;\n\n      return;\n    case types.NOTIFICATION_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n\n      return;\n    case types.COMMENT_UPDATES_SUCCESS:\n      console.log(action);\n      const findCommentKey2 = draft.posts.findIndex((x) => x.id === action.payload.comment.postId);\n      draft.posts[findCommentKey2].Comments = [\n        action.payload.comment,\n        // add comment first, then sort it out by the most recent comment\n        ...draft.posts[findCommentKey2].Comments.sort((a, b) => {\n          const date1 = new Date(a.createdAt) as any;\n          const date2 = new Date(b.createdAt) as any;\n\n          return date2 - date1;\n        }),\n      ];\n      draft.commenterId = action.payload.comment.userId;\n\n      return;\n    case types.COMMENT_UPDATES_FAILURE:\n      console.log(action);\n\n      return;\n    case types.REPOST_POST_SUCCESS:\n      console.log(action);\n      const { postId } = action.payload.post;\n      const repostPostKey = state.posts.findIndex((x) => x.id === postId);\n      console.log('checking repost post Key', repostPostKey);\n      draft.posts[repostPostKey].RepostedByMe = true;\n\n      return;\n    case types.REPOST_POST_FAILURE:\n      console.log(action);\n\n      return;\n    case types.COMMENT_REPLY_SUCCESS:\n      const replyPostId = action.payload.reply.postId;\n      const replyCommentId = action.payload.reply.commentId;\n      const postReplyIndex = state.posts.findIndex((x) => x.id === replyPostId);\n      const commentIndex = state.posts[postReplyIndex].Comments.findIndex((x) => x.id === replyCommentId);\n      draft.posts[postReplyIndex].Comments[commentIndex].commentReplies = [action.payload.reply, ...draft.posts[postReplyIndex].Comments[commentIndex].commentReplies];\n\n      return;\n    case types.COMMENT_REPLY_FAILURE:\n      console.log(action.error);\n\n      return;\n    case types.REPLY_DELETE_SUCCESS:\n      console.log(action);\n      const deleteReplyPostId = action.payload.action.payload.postId;\n      const deleteReplyCommentId = action.payload.action.payload.commentId;\n      const { replyId } = action.payload.action.payload;\n      const deleteReplyIdx = state.posts.findIndex((x) => x.id === deleteReplyPostId);\n      const commentIdx = state.posts[deleteReplyIdx].Comments.findIndex((x) => x.id === deleteReplyCommentId);\n      draft.posts[deleteReplyIdx].Comments[commentIdx].commentReplies = [...draft.posts[deleteReplyIdx].Comments[commentIdx].commentReplies.filter((item) => item.id !== replyId)];\n\n      return;\n    case types.UNREPOST_POST_SUCCESS:\n      console.log(action);\n      const unRepostId = action.payload.postId;\n      const unrepostPostKey = state.posts.findIndex((x) => x.id === unRepostId);\n      console.log('checking repost post Key', unrepostPostKey);\n      draft.posts[unrepostPostKey].RepostedByMe = false;\n\n      return;\n    case types.UNREPOST_POST_FAILURE:\n      console.log(action);\n\n      return;\n    case types.SEARCH_POSTS_INIT:\n      console.log(action);\n      draft.searchValue = action.payload;\n\n      return;\n    case types.SEARCH_POSTS_SUCCESS:\n      console.log(action);\n      draft.results = action.payload.post;\n\n      return;\n    case types.SEARCH_POSTS_FAILURE:\n      console.log(action);\n      draft.results = [];\n\n      return;\n    case types.GET_SEARCH_SUCCESS:\n      console.log(action);\n      draft.posts = action.payload.post;\n\n      return;\n    case types.GET_SEARCH_FAILURE:\n      console.log(action);\n\n      return;\n    case types.SET_SELECTED_USER:\n      console.log(action);\n      draft.selectedUser = action.payload;\n      draft.mentionedUser = false;\n\n      return;\n\n    case types.SET_MENTIONED_USER:\n      draft.mentionedUser = true;\n  }\n});\n\nexport default postReducer;\n","export const CREATE_POST_INIT = 'CREATE_POST_INIT';\nexport const CREATE_POST_SUCCESS = 'CREATE_POST_SUCCESS';\nexport const CREATE_POST_FAILURE = 'CREATE_POST_FAILURE';\n\nexport const GET_POSTS_INIT = 'GET_POSTS_INIT';\nexport const GET_POSTS_SUCCESS = 'GET_POSTS_SUCCESS';\nexport const GET_POSTS_FAILURE = 'GET_POSTS_FAILURE';\n\nexport const POST_COMMENT_INIT = 'POST_COMMENT_INIT';\nexport const POST_COMMENT_SUCCESS = 'POST_COMMENT_SUCCESS';\nexport const POST_COMMENT_FAILURE = 'POST_COMMENT_FAILURE';\n\nexport const EDIT_COMMENT_INIT = 'EDIT_COMMENT_INIT';\nexport const EDIT_COMMENT_SUCCESS = 'EDIT_COMMENT_SUCCESS';\nexport const EDIT_COMMENT_FAILURE = 'EDIT_COMMENT_FAILURE';\n\nexport const DELETE_COMMENT_INIT = 'DELETE_COMMENT_INIT';\nexport const DELETE_COMMENT_SUCCESS = 'DELETE_COMMENT_SUCCESS';\nexport const DELETE_COMMENT_FAILURE = 'DELETE_COMMENT_FAILURE';\n\nexport const LIKE_POST_INIT = 'LIKE_POST_INIT';\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n\nexport const DELETE_POST_INIT = 'DELETE_POST_INIT';\nexport const DELETE_POST_SUCCESS = 'DELETE_POST_SUCCESS';\nexport const DELETE_POST_FAILURE = 'DELETE_POST_FAILURE';\n\nexport const DISLIKE_POST_INIT = 'DISLIKE_POST_INIT';\nexport const DISLIKE_POST_SUCCESS = 'DISLIKE_POST_SUCCESS';\nexport const DISLIKE_POST_FAILURE = 'DISLIKE_POST_FAILURE';\n\nexport const FETCH_POST_INIT = 'FETCH_POST_INIT';\nexport const FETCH_POST_SUCCESS = 'FETCH_POST_SUCCESS';\nexport const FETCH_POST_FAILURE = 'FETCH_POST_FAILURE';\n\nexport const ADD_TITLE = 'ADD_TITLE';\nexport const ADD_CONTENT = 'ADD_CONTENT';\n\nexport const INIT_NOTIFICATION = 'INIT_NOTIFICATION';\nexport const NOTIFICATION_SUCCESS = 'NOTIFICATION_SUCCESS';\nexport const NOTIFICATION_FAILURE = 'NOTIFICATION_FAILURE';\n\nexport const INIT_COMMENT_UPDATES = 'INIT_COMMENT_UPDATES';\nexport const COMMENT_UPDATES_SUCCESS = 'COMMENT_UPDATES_SUCCESS';\nexport const COMMENT_UPDATES_FAILURE = 'COMMENT_UPDATES_FAILURE';\n\nexport const REPOST_POST_INIT = 'REPOST_POST_INIT';\nexport const REPOST_POST_SUCCESS = 'REPOST_POST_SUCCESS';\nexport const REPOST_POST_FAILURE = 'REPOST_POST_FAILURE';\n\nexport const UNREPOST_POST_INIT = 'UNREPOST_POST_INIT';\nexport const UNREPOST_POST_SUCCESS = 'UNREPOST_POST_SUCCESS';\nexport const UNREPOST_POST_FAILURE = 'UNREPOST_POST_FAILURE';\n\nexport const COMMENT_REPLY_INIT = 'COMMENT_REPLY_INIT';\nexport const COMMENT_REPLY_SUCCESS = 'COMMENT_REPLY_SUCCESS';\nexport const COMMENT_REPLY_FAILURE = 'COMMENT_REPLY_FAILURE';\n\nexport const REPLY_DELETE_INIT = 'REPLY_DELETE_INIT';\nexport const REPLY_DELETE_SUCCESS = 'REPLY_DELETE_SUCCESS';\nexport const REPLY_DELETE_FAILURE = 'REPLY_DELETE_FAILURE';\n\nexport const SEARCH_POSTS_INIT = 'SEARCH_POSTS_INIT';\nexport const SEARCH_POSTS_SUCCESS = 'SEARCH_POSTS_SUCCESS';\nexport const SEARCH_POSTS_FAILURE = 'SEARCH_POSTS_FAILURE';\n\nexport const GET_SEARCH_INIT = 'GET_SEARCH_INIT';\nexport const GET_SEARCH_SUCCESS = 'GET_SEARCH_SUCCESS';\nexport const GET_SEARCH_FAILURE = 'GET_SEARCH_FAILURE';\n\nexport const SET_SELECTED_USER = 'SET_SELECTED_USER';\n\nexport const SET_MENTIONED_USER = 'SET_MENTIONED_USER';\n","import produce from 'immer';\nimport * as types from '../actionTypes/userActionTypes';\nimport { sessionData, validation } from '../utils';\n\nexport type userState = {\n  isAuthenticated: boolean;\n  googleAccount: any;\n  emailVerified: boolean;\n  error?: string;\n  isLoading: boolean;\n  profileData: object;\n  message: string;\n  profilePage: any;\n  usernameError: any;\n  passwordError: any;\n  passwordConfError: any;\n  emailError: any;\n  email: string;\n  password: string;\n  passwordConf: string;\n  username: string;\n  currentUser: object;\n  getNotifications: any;\n  notDark: boolean;\n}\n\nconst initialState: userState = {\n  isAuthenticated: false,\n  googleAccount: null,\n  error: '',\n  emailVerified: false,\n  currentUser: {},\n  profileData: {},\n  profilePage: null,\n  isLoading: true,\n  message: '',\n  usernameError: '',\n  passwordError: '',\n  emailError: '',\n  email: '',\n  password: '',\n  passwordConf: '',\n  passwordConfError: '',\n  getNotifications: [],\n  username: '',\n  notDark: true,\n};\n\nconst authReducer = (state = initialState, action: any): userState => produce(state, (draft) => {\n  switch (action.type) {\n    case types.SIGN_UP_SUCCESS:\n      // draft.isAuthenticated = sessionData.getLoginStatus();\n      draft.email = '';\n      draft.password = '';\n      draft.username = '';\n      draft.error = '';\n\n      draft.message = action.user.meta.message;\n      draft.isAuthenticated = false;\n      break;\n    case types.SIGN_UP_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.GET_USER_SUCCESS:\n      const loginStatus = sessionData.getLoginStatus();\n      const emailVerified = sessionData.emailVerifiedStatus();\n      const verified = !!(loginStatus == true && emailVerified == true);\n      draft.isAuthenticated = verified;\n      draft.googleAccount = sessionData.googleIdStatus();\n      draft.currentUser = action.payload;\n      break;\n    case types.GET_USER_FAILURE:\n      console.log(action);\n      // console.log(sessionData.getLoginStatus());\n      draft.isAuthenticated = false;\n      draft.googleAccount = null;\n      draft.currentUser = {};\n      break;\n    case types.LOG_OUT_SUCCESS:\n      draft.isAuthenticated = false;\n      draft.googleAccount = null;\n      draft.currentUser = {};\n      break;\n    case types.LOG_IN_SUCCESS:\n      // console.log(\"login reducer\", action.payload.login.user.email_verified);\n      const loginStatus2 = sessionData.getLoginStatus();\n      const emailVerified2 = sessionData.emailVerifiedStatus();\n      const verified2 = !!(loginStatus2 == true && emailVerified2 == true);\n      draft.error = '';\n      draft.googleAccount = sessionData.googleIdStatus();\n      draft.isAuthenticated = verified2;\n      draft.isLoading = false;\n      break;\n    case types.INIT_LOGIN:\n      draft.error = '';\n      break;\n    case types.LOG_IN_FAILURE:\n      console.log(action.error);\n      draft.error = action.error;\n      break;\n    case types.GET_USER_PROFILE_SUCCESS:\n      draft.message = '';\n      draft.profileData = action.payload;\n      break;\n    case types.GET_USER_PROFILE_FAILURE:\n      draft.error = action.error;\n      break;\n    case types.UPDATE_USER_PROFILE_SUCCESS:\n      draft.profileData = action.payload.user;\n      draft.message = action.payload.message;\n      break;\n    case types.UPDATE_USER_PROFILE_FAILURE:\n      console.log(action.error);\n      draft.error = action.error;\n      break;\n    case types.ADD_EMAIL:\n      console.log(validation.validateEmail(action.data));\n      draft.email = action.data;\n      draft.emailError = validation.validateEmail(action.data);\n      break;\n    case types.ADD_PASSWORD:\n      draft.password = action.data;\n      draft.passwordError = validation.validatePassword(action.data);\n      draft.passwordConf = '';\n      draft.passwordConfError = '';\n      break;\n    case types.ADD_PASSWORD_CONF:\n      const { password } = state;\n      draft.passwordConf = action.data;\n      draft.passwordConfError = validation.validatePasswordConf(action.data, password);\n      break;\n    case types.ADD_USERNAME:\n      draft.username = action.data;\n      draft.usernameError = validation.validateUsername(action.data);\n      break;\n    case types.EMAIL_CONFIRMATION_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      draft.emailVerified = false;\n      break;\n    case types.EMAIL_CONFIRMATION_SUCCESS:\n      console.log('email_confirmation', action);\n      draft.message = action.payload.message;\n      break;\n    case types.RESEND_EMAIL_CONFIRMATION_SUCCESS:\n      console.log(action.payload);\n      draft.message = action.payload.meta.message;\n      break;\n    case types.RESEND_EMAIL_CONFIRMATION_FAILURE:\n      draft.error = action.error;\n      break;\n    case types.GET_PROFILE_SUCCESS:\n      console.log(action);\n      draft.profilePage = action.data;\n      break;\n    case types.GET_PROFILE_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.FOLLOW_USER_SUCCESS:\n      console.log(action.payload);\n      console.log(action);\n      const findKey = action.payload.follow.UserFollowers.findIndex((item) => item.followerId === action.id);\n      console.log(findKey);\n      draft.profilePage.UserFollowers = [...draft.profilePage.UserFollowers, action.payload.follow.UserFollowers[findKey]];\n      draft.profilePage.isFollowing = true;\n      break;\n    case types.FOLLOW_USER_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.UNFOLLOW_USER_SUCCESS:\n      console.log(action);\n      console.log(action.payload.follow.UserFollowers);\n      draft.profilePage.UserFollowers = [...draft.profilePage.UserFollowers.filter((item) => item.followerId !== action.id)];\n      draft.profilePage.isFollowing = false;\n      break;\n    case types.UNFOLLOW_USER_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.GET_NOTIFICATIONS_SUCCESS:\n      draft.getNotifications = action.payload;\n      break;\n    case types.GET_NOTIFICATIONS_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.MARK_AS_READ_SUCCESS:\n      const markKey = state.getNotifications.findIndex((notification) => notification.notificationId === action.id);\n      draft.getNotifications[markKey].status = [...action.payload.notifications[markKey].status];\n      break;\n    case types.MARK_AS_READ_FAILURE:\n      console.log(action);\n      draft.error = action.error;\n      break;\n    case types.SET_DARK:\n      console.log(action);\n      draft.notDark = !draft.notDark;\n      break;\n  }\n});\n\nexport default authReducer;\n","import { combineReducers } from 'redux';\nimport storage from 'redux-persist/lib/storage';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport postReducer from './postReducer';\nimport authReducer from './userReducer';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['notDark'],\n};\nconst pesistedReducer = persistReducer(persistConfig, authReducer);\n\nconst rootReducer = combineReducers({\n  user: pesistedReducer,\n  post: postReducer,\n});\n\nexport default rootReducer;\n","import Axios from '../ourAxios';\n\nexport default {\n  user: {\n    signUp: (userData: any) => Axios.post('/api/v1/users/signup', userData).then((res) => res.data),\n    autoLogin: () => Axios.get('/api/v1/users/auth').then((res) => res.data),\n    logOut: () => Axios.get('/api/v1/users/logout').then((res) => res.data),\n    logIn: (userData: any) => Axios.post('/api/v1/users/login', userData).then((res) => res.data),\n    currentUser: () => Axios.get('/api/v1/users/currentUser').then((res) => res.data),\n    editProfile: () => Axios.get('/api/v1/users/editProfile').then((res) => res.data),\n    getProfile: (username: string) => Axios.get(`/api/v1/users/profile/${username}`).then((res) => res.data),\n    followUser: (username: string) => Axios.post(`/api/v1/users/followUser/${username}`).then((res) => res.data),\n    unfollowUser: (username: string) => Axios.delete(`/api/v1/users/unfollowUser/${username}`).then((res) => res.data),\n    resendConfirmation: () => Axios.post('/api/v1/users/resendConfirmation').then((res) => res.data),\n    emailConfirmation: (userId: number, token: number) => Axios.get(`/api/v1/users/emailConfirmation/${userId}/${token}`).then((res) => res.data),\n    updateProfile: (userData: any) => Axios.put('/api/v1/users/updateProfile', userData).then((res) => res.data),\n    getNotifications: (id: number) => Axios.get(`/api/v1/notifications/${id}`).then((res) => res.data),\n    markAsRead: (id: number) => Axios.post(`/api/v1/notifications/markAsRead/${id}`).then((res) => res.data),\n  },\n  post: {\n    createPost: (postData: any) => Axios.post('/api/v1/posts/createPost', postData).then((res) => res.data),\n    repost: (id: number, userId: number) => Axios.post(`/api/v1/posts/repost/${userId}/${id}`).then((res) => res.data),\n    unrepost: (id: number, userId: number) => Axios.delete(`/api/v1/posts/unRepost/${userId}/${id}`).then((res) => res.data),\n    getPosts: () => Axios.get('/api/v1/posts/getPosts').then((res) => res.data),\n    likePost: (id: number) => Axios.post(`/api/v1/posts/likePost/${id}`).then((res) => res.data),\n    deletePost: (id: number, userId: number) => Axios.delete(`/api/v1/posts/deletePost/${userId}/${id}`).then((res) => res.data),\n    getPost: (id: number) => Axios.get(`/api/v1/posts/post/${id}`).then((res) => res.data),\n    dislikePost: (id: number) => Axios.post(`/api/v1/posts/dislikePost/${id}`).then((res) => res.data),\n    postComment: (commentData: any) => Axios.post('/api/v1/posts/postComment', commentData).then((res) => res.data),\n    deleteComment: (id: number, userId: number) => Axios.delete(`/api/v1/posts/deleteComment/${userId}/${id}`).then((res) => res.data),\n    editComment: (id: number, userId: number, commentData: any) => Axios.put(`/api/v1/posts/editComment/${userId}/${id}`, commentData).then((res) => res.data),\n    replyComment: (postId: number, commentId: number, replyData: any) => Axios.post(`/api/v1/posts/replyComment/${postId}/${commentId}`, replyData).then((res) => res.data),\n    deleteReply: (postId: number, commentId: number, userId: number) => Axios.delete(`/api/v1/posts/deleteReply/${postId}/${userId}/${commentId}`).then((res) => res.data),\n    searchPosts: (query: string) => Axios.get(`/api/v1/posts/searchq=${query}`).then((res) => res.data),\n    searchPostsNull: (query: string) => Axios.get(`/api/v1/posts/searchq=${query}`).then((res) => res.data),\n  },\n};\n","import jwtDecode from 'jwt-decode';\nimport {\n  call, fork, put, takeLatest,\n} from 'redux-saga/effects';\nimport * as actionTypes from '../actions/userActions';\nimport * as types from '../actionTypes/userActionTypes';\nimport api from '../api/api';\nimport { sessionData, setAuthToken } from '../utils';\n\nexport function* registerUser(action) {\n  try {\n    console.log(action);\n    const { history } = action;\n    const user = yield call(api.user.signUp, action.payload);\n    console.log(user);\n    // const token = user.meta.token;\n    // setAuthToken(token);\n    // sessionData.setUserLoggedIn(token);\n    // const decoded = jwtDecode(token);\n    console.log(user);\n    yield put(actionTypes.signUpSuccess({}, user));\n    history.push({ pathname: '/emailConfirmation', state: user });\n  } catch (error) {\n    console.log(error);\n    const errMsg = error.response.data.meta.message;\n    console.log(errMsg);\n    yield put(actionTypes.signUpFailure(errMsg));\n  }\n}\nexport function* getAutoLoginStatus(action) {\n  try {\n    const login = yield call(api.user.currentUser);\n    const { token } = login;\n\n    if (login.user.googleId !== null) {\n      localStorage.setItem('googleId', login.user.googleId);\n    }\n    setAuthToken(token);\n    sessionData.setUserLoggedIn(token);\n    yield put(actionTypes.getUserSuccess(login));\n  } catch (error) {\n    localStorage.clear();\n    yield put(actionTypes.getUserFailure(error.response.data.message));\n  }\n}\n\nexport function* getUserProfile() {\n  try {\n    const profile = yield call(api.user.editProfile);\n    console.log(profile);\n    yield put(actionTypes.getUserProfileSuccess(profile));\n  } catch (error) {\n    yield put(actionTypes.getUserProfileFailure(error));\n  }\n}\n\nexport function* updateUserProfile(action) {\n  try {\n    const profile = yield call(api.user.updateProfile, action.payload);\n    yield put(actionTypes.updateUserProfileSuccess(profile));\n  } catch (err) {\n    yield put(actionTypes.updateUserProfileFailure(err.response.data.meta.message));\n  }\n}\n\nexport function* logOut(action) {\n  try {\n    const { history } = action;\n    const logout = yield call(api.user.logOut);\n    sessionData.setUserLoggdOut();\n    localStorage.removeItem('CurrentUserId');\n    localStorage.removeItem('email_verified');\n    localStorage.removeItem('googleId');\n    yield put(actionTypes.logOutSuccess(logout));\n    history.push('/login');\n  } catch (error) {\n    yield put(actionTypes.logOutFailure(error));\n  }\n}\n\nexport function* login(action) {\n  try {\n    const login = yield call(api.user.logIn, action.payload);\n    console.log('checking login', login);\n    const { token } = login.meta;\n    console.log(token);\n    sessionData.setUserLoggedIn(token);\n    const decoded = jwtDecode(token);\n    setAuthToken(token);\n    console.log('login saga', login.user.email_verified);\n\n    if (login.user.email_verified !== null) {\n      localStorage.setItem('email_verified', login.user.email_verified.toString());\n    }\n    yield put(actionTypes.loginSuccess(decoded));\n  } catch (err) {\n    const errMsg = err.response.data.meta.message;\n    yield put(actionTypes.loginFailure(errMsg));\n  }\n}\n\nexport function* emailConfirmation(action) {\n  try {\n    const emailConfirmation = yield call(api.user.emailConfirmation, action.payload.userId, action.payload.token);\n\n    console.log('email called', emailConfirmation);\n\n    yield put(actionTypes.emailConfirmationSuccess(emailConfirmation));\n  } catch (err) {\n    console.log(err.response.data);\n    console.log(err.response.data.meta.message);\n    yield put(actionTypes.emailConfirmationFailure(err.response.data.meta.message));\n  }\n}\n\nexport function* getProfile(action) {\n  try {\n    const profile = yield call(api.user.getProfile, action.data);\n    yield put(actionTypes.getProfileSuccess(profile));\n  } catch (err) {\n    yield put(actionTypes.getProfileFailure(err));\n  }\n}\n\nexport function* followUser(action) {\n  try {\n    const follow = yield call(api.user.followUser, action.data);\n    console.log(follow);\n    yield put(actionTypes.followUserSuccess(follow, action.id));\n  } catch (err) {\n    yield put(actionTypes.followUserFailure(err));\n  }\n}\n\nexport function* unfollowUser(action) {\n  try {\n    const unfollow = yield call(api.user.unfollowUser, action.data);\n    console.log(unfollow);\n    yield put(actionTypes.unfollowUserSuccess(unfollow, action.id));\n  } catch (err) {\n    yield put(actionTypes.followUserFailure(err));\n  }\n}\n\nexport function* resendEmailConfirmation(action) {\n  try {\n    const resendEmailConfirmation = yield call(api.user.resendConfirmation);\n    console.log(resendEmailConfirmation);\n    yield put(actionTypes.resendEmailConfirmationSuccess(resendEmailConfirmation));\n  } catch (err) {\n    console.log(err);\n    yield put(actionTypes.resendEmailConfirmationFailure(err));\n  }\n}\n\nexport function* getNotifications(action) {\n  try {\n    const notifications = yield call(api.user.getNotifications, action.payload);\n    yield put(actionTypes.getNotificationsSuccess(notifications));\n  } catch (err) {\n    yield put(actionTypes.getNotificationsFailure(err));\n  }\n}\n\nexport function* markAsRead(action) {\n  console.log(action);\n\n  try {\n    const mark = yield call(api.user.markAsRead, action.payload);\n    console.log(mark);\n    yield put(actionTypes.markAsReadSuccess(mark, action.payload));\n  } catch (err) {\n    yield put(actionTypes.markAsReadFailure(err));\n  }\n}\n\nexport function* watchNotifications() {\n  yield takeLatest(types.INIT_GET_NOTIFICATIONS, getNotifications);\n}\n\nexport function* watchMarkAsRead() {\n  yield takeLatest(types.MARK_AS_READ_INIT, markAsRead);\n}\n\nexport function* watchLogin() {\n  yield takeLatest(types.LOG_IN_INIT, login);\n}\n\nexport function* watchFollowUser() {\n  yield takeLatest(types.FOLLOW_USER_INIT, followUser);\n}\nexport function* watchUnFollowUser() {\n  yield takeLatest(types.UNFOLLOW_USER_INIT, unfollowUser);\n}\n\nexport function* watchProfile() {\n  yield takeLatest(types.GET_PROFILE_INIT, getProfile);\n}\n\nexport function* watchResendEmailConfirmation() {\n  yield takeLatest(types.RESEND_EMAIL_CONFIRMATION_INIT, resendEmailConfirmation);\n}\nexport function* watchEmailConfirmation() {\n  yield takeLatest(types.EMAIL_CONFIRMATION_INIT, emailConfirmation);\n}\nexport function* watchUpdateProfile() {\n  yield takeLatest(types.UPDATE_USER_PROFILE, updateUserProfile);\n}\nexport function* watchEditProfile() {\n  yield takeLatest(types.GET_USER_PROFILE, getUserProfile);\n}\nexport function* watchAuthLogin() {\n  yield takeLatest(types.GET_USER, getAutoLoginStatus);\n}\nexport function* watchUserRegister() {\n  yield takeLatest(types.SIGN_UP_INIT, registerUser);\n}\nexport function* watchLogout() {\n  yield takeLatest(types.LOG_OUT_INIT, logOut);\n}\n// export function*\nexport default function* () {\n  yield fork(watchUserRegister);\n  yield fork(watchMarkAsRead);\n  yield fork(watchNotifications);\n  yield fork(watchAuthLogin);\n  yield fork(watchFollowUser);\n  yield fork(watchUnFollowUser);\n  yield fork(watchResendEmailConfirmation);\n  yield fork(watchProfile);\n  yield fork(watchLogout);\n  yield fork(watchLogin);\n  yield fork(watchEmailConfirmation);\n  yield fork(watchEditProfile);\n  yield fork(watchUpdateProfile);\n}\n","import * as types from '../actionTypes/postActionTypes';\n\nexport const createPostInit = (payload: object) => ({\n  type: types.CREATE_POST_INIT,\n  payload,\n});\n\nexport const createPostSuccess = (payload: object) => ({\n  type: types.CREATE_POST_SUCCESS,\n  payload,\n});\n\nexport const createPostFailure = (error: object) => ({\n  type: types.CREATE_POST_FAILURE,\n  error,\n});\n\nexport const getPostsInit = () => ({\n  type: types.GET_POSTS_INIT,\n});\n\nexport const getPostsSuccess = (payload: object) => ({\n  type: types.GET_POSTS_SUCCESS,\n  payload,\n});\n\nexport const getPostsFailure = (error: object) => ({\n  type: types.GET_POSTS_FAILURE,\n  error,\n});\n\nexport const likePostInit = (payload: number) => ({\n  type: types.LIKE_POST_INIT,\n  payload,\n});\n\nexport const likePostSuccess = (payload: object) => ({\n  type: types.LIKE_POST_SUCCESS,\n  payload,\n});\n\nexport const likePostFailiure = (error: object) => ({\n  type: types.LIKE_POST_FAILURE,\n  error,\n});\n\nexport const dislikePostInit = (payload: number) => ({\n  type: types.DISLIKE_POST_INIT,\n  payload,\n});\n\nexport const dislikePostSuccess = (payload: object) => ({\n  type: types.DISLIKE_POST_SUCCESS,\n  payload,\n});\n\nexport const dislikePostFailiure = (error: object) => ({\n  type: types.DISLIKE_POST_FAILURE,\n  error,\n});\n\nexport const fetchPostInit = (payload: number) => ({\n  type: types.FETCH_POST_INIT,\n  payload,\n});\n\nexport const fetchPostSuccess = (payload: object) => ({\n  type: types.FETCH_POST_SUCCESS,\n  payload,\n});\n\nexport const fetchPostFailure = (error: object) => ({\n  type: types.FETCH_POST_FAILURE,\n  error,\n});\n\nexport const deletePostInit = (payload: number, userId: number) => ({\n  type: types.DELETE_POST_INIT,\n  payload,\n  userId,\n});\n\nexport const deletePostSuccess = (payload: object, id: number) => ({\n  type: types.DELETE_POST_SUCCESS,\n  payload,\n  id,\n});\n\nexport const deletePostFailure = (error: object) => ({\n  type: types.DELETE_POST_FAILURE,\n  error,\n});\n\nexport const postCommentInit = (payload: object) => ({\n  type: types.POST_COMMENT_INIT,\n  payload,\n});\n\nexport const deleteCommentInit = (payload: number, postId: number, userId: number) => ({\n  type: types.DELETE_COMMENT_INIT,\n  payload,\n  postId,\n  userId,\n});\n\nexport const deleteCommentSuccess = (payload: object, id: number, postId: number) => ({\n  type: types.DELETE_COMMENT_SUCCESS,\n  payload,\n  id,\n  postId,\n});\n\nexport const deleteCommentFailure = (error: object) => ({\n  type: types.DELETE_COMMENT_FAILURE,\n  error,\n});\n\nexport const postCommentSuccess = (payload: object, id: number) => ({\n  type: types.POST_COMMENT_SUCCESS,\n  payload,\n  id,\n});\n\nexport const postCommentFailure = (error: object) => ({\n  type: types.POST_COMMENT_FAILURE,\n  error,\n});\n\nexport const addTitle = (data: string) => ({\n  type: types.ADD_TITLE,\n  data,\n});\n\nexport const addContent = (data: string) => ({\n  type: types.ADD_CONTENT,\n  data,\n});\nexport const notificationInit = () => ({\n  type: types.INIT_NOTIFICATION,\n});\n\nexport const notificationSuccess = (payload: object) => ({\n  type: types.NOTIFICATION_SUCCESS,\n  payload,\n});\n\nexport const notificationFailure = (err: object) => ({\n  type: types.NOTIFICATION_FAILURE,\n  err,\n});\n\nexport const initCommentUpdates = () => ({\n  type: types.INIT_COMMENT_UPDATES,\n});\n\nexport const commentUpdatesSuccess = (payload: object) => ({\n  type: types.COMMENT_UPDATES_SUCCESS,\n  payload,\n});\n\nexport const commentUpdatesFailure = (err: object) => ({\n  type: types.COMMENT_UPDATES_FAILURE,\n  err,\n});\n\nexport const editCommentInit = (payload) => ({\n  type: types.EDIT_COMMENT_INIT,\n  payload,\n});\n\nexport const editCommentSuccess = (payload: object) => ({\n  type: types.EDIT_COMMENT_SUCCESS,\n  payload,\n});\n\nexport const editCommentFailure = (err: object) => ({\n  type: types.EDIT_COMMENT_FAILURE,\n  err,\n});\n\nexport const repostPostInit = (payload: number, id: number) => ({\n  type: types.REPOST_POST_INIT,\n  payload,\n  id,\n});\n\nexport const repostPostSuccess = (payload: object) => ({\n  type: types.REPOST_POST_SUCCESS,\n  payload,\n});\n\nexport const repostPostFailure = (error: object) => ({\n  type: types.REPOST_POST_FAILURE,\n  error,\n});\n\nexport const unrepostPostInit = (payload: number, id: number) => ({\n  type: types.UNREPOST_POST_INIT,\n  payload,\n  id,\n});\n\nexport const unrepostPostSuccess = (payload: object) => ({\n  type: types.UNREPOST_POST_SUCCESS,\n  payload,\n});\n\nexport const unrepostPostFailure = (error: object) => ({\n  type: types.UNREPOST_POST_FAILURE,\n  error,\n});\n\nexport const commentReplyInit = (payload: object) => ({\n  type: types.COMMENT_REPLY_INIT,\n  payload,\n});\n\nexport const commentReplySuccess = (payload: object) => ({\n  type: types.COMMENT_REPLY_SUCCESS,\n  payload,\n});\n\nexport const commentReplyFailure = (error: object) => ({\n  type: types.COMMENT_REPLY_FAILURE,\n  error,\n});\n\nexport const deleteReplyInit = (payload: object) => ({\n  type: types.REPLY_DELETE_INIT,\n  payload,\n});\n\nexport const deleteReplySuccess = (payload: object) => ({\n  type: types.REPLY_DELETE_SUCCESS,\n  payload,\n});\n\nexport const deleteReplyFailure = (payload: object) => ({\n  type: types.REPLY_DELETE_FAILURE,\n  payload,\n});\n\nexport const searchPostsInit = (payload: string) => ({\n  type: types.SEARCH_POSTS_INIT,\n  payload,\n});\n\nexport const searchPostsSuccess = (payload: object) => ({\n  type: types.SEARCH_POSTS_SUCCESS,\n  payload,\n});\n\nexport const searchPostsFailure = (error: object) => ({\n  type: types.SEARCH_POSTS_FAILURE,\n  error,\n});\n\nexport const getSearchInit = (payload: string) => ({\n  type: types.GET_SEARCH_INIT,\n  payload,\n});\n\nexport const getSearchSuccess = (payload: object) => ({\n  type: types.GET_SEARCH_SUCCESS,\n  payload,\n});\n\nexport const getSearchFailure = (error: object) => ({\n  type: types.GET_SEARCH_FAILURE,\n  error,\n});\n\nexport const setSelectedUser = (payload: string) => ({\n  type: types.SET_SELECTED_USER,\n  payload,\n});\n\nexport const setMentionedUser = () => ({\n  type: types.SET_MENTIONED_USER,\n});\n","import Pusher from 'pusher-js';\nimport { toast } from 'react-toastify';\nimport { eventChannel } from 'redux-saga';\nimport {\n  call, fork, put, take, takeLatest,\n} from 'redux-saga/effects';\nimport * as actionTypes from '../actions/postActions';\nimport * as types from '../actionTypes/postActionTypes';\nimport api from '../api/api';\n\ntype commentType = {\n  body: string;\n  userId: number;\n  currentUser: number;\n  commenterId: number;\n};\n\nfunction createEventChannel(pusher: Pusher) {\n  return eventChannel((emitter) => {\n    const channel = pusher.subscribe('notification');\n    channel.bind('my-event', (data: commentType) => {\n      console.log('sdd', data);\n      // we need an emitter for notificationSuccess method to work\n      emitter(data.body);\n\n      toast.success(data.body);\n    });\n    channel.bind('user-mention', (data: string) => {\n      console.log('sdd usermention', data);\n      // we need an emitter for notificationSuccess method to work\n      emitter(data);\n      toast.info(data);\n    });\n\n    return () => {\n      channel.unbind('my-event', emitter);\n      channel.unbind('user-mention', emitter);\n    };\n  });\n}\n\nfunction createCommentChannel(pusher: Pusher) {\n  return eventChannel((emitter) => {\n    const channel = pusher.subscribe('post-comments');\n    channel.bind('new-comment', (data: string) => {\n      // we need an emitter for notificationSuccess method to work\n      emitter(data);\n    });\n\n    return () => {\n      channel.unbind('new-comment', emitter);\n    };\n  });\n}\n\nexport function* commentUpdates() {\n  try {\n    const pusherClient = new Pusher('0d45d56558d5bdcbc179', {\n      cluster: 'us2',\n      forceTLS: true,\n    });\n    const channel = yield call(createCommentChannel, pusherClient);\n\n    while (true) {\n      const data = yield take(channel);\n      console.log(data);\n      yield put(actionTypes.commentUpdatesSuccess(data));\n    }\n  } catch (err) {\n    yield put(actionTypes.commentUpdatesFailure(err));\n  }\n}\n\nexport function* getNotification() {\n  try {\n    const pusherClient = new Pusher('0d45d56558d5bdcbc179', {\n      cluster: 'us2',\n      forceTLS: true,\n    });\n    const channel = yield call(createEventChannel, pusherClient);\n\n    while (true) {\n      const data = yield take(channel);\n      yield put(actionTypes.notificationSuccess(data));\n    }\n  } catch (err) {\n    yield put(actionTypes.notificationFailure(err));\n  }\n}\n\nexport function* getPosts() {\n  try {\n    const posts = yield call(api.post.getPosts); // call api from axios express back end\n    yield put(actionTypes.getPostsSuccess(posts));\n  } catch (error) {\n    yield put(actionTypes.getPostsFailure(error));\n  }\n}\n\nexport function* fetchPost(action) {\n  try {\n    const postPage = yield call(api.post.getPost, action.payload);\n    yield put(actionTypes.fetchPostSuccess(postPage));\n  } catch (error) {\n    yield put(actionTypes.fetchPostFailure(error));\n  }\n}\nexport function* createPost(action) {\n  try {\n    const post = yield call(api.post.createPost, action.payload);\n    yield put(actionTypes.createPostSuccess(post));\n  } catch (error) {\n    console.log(error);\n    yield put(actionTypes.createPostFailure(error.response.data.meta.message));\n  }\n}\n\nexport function* editComment(action) {\n  try {\n    console.log(action);\n    const data = action.payload;\n    const comment = yield call(api.post.editComment, action.payload.id, action.payload.userId, { commentData: action.payload.comment_body });\n    yield put(actionTypes.editCommentSuccess({ comment, data }));\n  } catch (err) {\n    yield put(actionTypes.editCommentFailure(err));\n  }\n}\n\nexport function* likePost(action) {\n  try {\n    console.log(action);\n    const like = yield call(api.post.likePost, action.payload);\n    console.log(like);\n    const id = action.payload;\n    yield put(actionTypes.likePostSuccess({ like, id }));\n  } catch (error) {\n    console.log(error);\n    yield put(actionTypes.likePostFailiure(error.response.data));\n  }\n}\nexport function* dislikePost(action) {\n  try {\n    console.log(action);\n    const dislike = yield call(api.post.dislikePost, action.payload);\n    console.log(dislike);\n    const id = action.payload;\n    yield put(actionTypes.dislikePostSuccess({ dislike, id }));\n  } catch (error) {\n    console.log('yrsgdgdgd', error.response.data);\n    yield put(actionTypes.dislikePostFailiure(error.response.data));\n  }\n}\n\nexport function* deletePost(action) {\n  const deleteConfirmation = window.confirm('Are you sure you want to delete your post ?');\n\n  if (deleteConfirmation) {\n    try {\n      const deletePost = yield call(api.post.deletePost, action.payload, action.userId);\n      yield put(actionTypes.deletePostSuccess(deletePost, action.payload));\n    } catch (error) {\n      yield put(actionTypes.dislikePostFailiure(error));\n    }\n  } else {\n    return null;\n  }\n}\n\nexport function* postComment(action) {\n  try {\n    const data = yield call(api.post.postComment, action.payload);\n    yield put(actionTypes.postCommentSuccess(data.comment, action.payload.id));\n  } catch (error) {\n    yield put(actionTypes.postCommentFailure(error.response.data));\n  }\n}\n\nexport function* deleteComment(action) {\n  const deleteConfirmation = window.confirm('Are you sure you want to delete your comment ?');\n  console.log(action);\n\n  if (deleteConfirmation) {\n    try {\n      const deleteComment = yield call(api.post.deleteComment, action.payload, action.userId);\n      yield put(actionTypes.deleteCommentSuccess(deleteComment, action.payload, action.postId));\n    } catch (error) {\n      yield put(actionTypes.deleteCommentFailure(error));\n    }\n  } else {\n    return null;\n  }\n}\n\nexport function* repostPost(action) {\n  try {\n    console.log(action);\n    const userId = action.payload;\n    const postId = action.id;\n    const repost = yield call(api.post.repost, userId, postId);\n    yield put(actionTypes.repostPostSuccess(repost));\n  } catch (err) {\n    yield put(actionTypes.repostPostFailure(err));\n  }\n}\nexport function* unRepostPost(action) {\n  try {\n    console.log(action);\n    const userId = action.payload;\n    const postId = action.id;\n    const repost = yield call(api.post.unrepost, userId, postId);\n\n    yield put(actionTypes.unrepostPostSuccess(repost));\n  } catch (err) {\n    yield put(actionTypes.unrepostPostFailure(err));\n  }\n}\n\nexport function* replyComment(action) {\n  try {\n    const { postId } = action.payload;\n    const { commentId } = action.payload;\n    const { replyBody } = action.payload;\n    const replyComment = yield call(api.post.replyComment, postId, commentId, { replyBody });\n    yield put(actionTypes.commentReplySuccess(replyComment));\n  } catch (err) {\n    yield put(actionTypes.commentReplyFailure(err));\n  }\n}\n\nexport function* deleteReply(action) {\n  const deleteConfirmation = window.confirm('Are you sure you want to delete your reply ?');\n\n  if (deleteConfirmation) {\n    try {\n      const { postId } = action.payload;\n      const { replyId } = action.payload;\n      const { userId } = action.payload;\n      const deleteReply = yield call(api.post.deleteReply, postId, replyId, userId);\n      const data = {\n        deleteReply,\n        action,\n      };\n      yield put(actionTypes.deleteReplySuccess(data));\n    } catch (err) {\n      yield put(actionTypes.deleteReplyFailure(err));\n    }\n  } else {\n    return null;\n  }\n}\n\nexport function* searchPosts(action) {\n  try {\n    if (action.payload === '') {\n      const search = yield call(api.post.searchPostsNull, action.payload);\n      yield put(actionTypes.searchPostsSuccess(search));\n    } else {\n      const search = yield call(api.post.searchPosts, action.payload);\n      yield put(actionTypes.searchPostsSuccess(search));\n    }\n  } catch (err) {\n    yield put(actionTypes.searchPostsFailure(err));\n  }\n}\n\nexport function* searchPageResults(action) {\n  const query = action.payload;\n\n  try {\n    const search = yield call(api.post.searchPosts, query);\n    yield put(actionTypes.getSearchSuccess(search));\n  } catch (err) {\n    console.log('error here', err);\n    yield put(actionTypes.getSearchFailure(err));\n  }\n}\n\nexport function* watchSearchPosts() {\n  yield takeLatest(types.SEARCH_POSTS_INIT, searchPosts);\n}\nexport function* watchSearchPageResults() {\n  yield takeLatest(types.GET_SEARCH_INIT, searchPageResults);\n}\nexport function* watchDeleteReply() {\n  yield takeLatest(types.REPLY_DELETE_INIT, deleteReply);\n}\n\nexport function* watchFetchPost() {\n  yield takeLatest(types.FETCH_POST_INIT, fetchPost);\n}\nexport function* watchReplyComment() {\n  yield takeLatest(types.COMMENT_REPLY_INIT, replyComment);\n}\n// dont use a watcher for notifications, it will keep calling itself\n// export function* watchNotifications() {\n//   yield takeEvery(types.INIT_NOTIFICATION, getNotification)\n// }\nexport function* watchRepostPost() {\n  yield takeLatest(types.REPOST_POST_INIT, repostPost);\n}\nexport function* watchUnRepostPost() {\n  yield takeLatest(types.UNREPOST_POST_INIT, unRepostPost);\n}\nexport function* watchEditComment() {\n  yield takeLatest(types.EDIT_COMMENT_INIT, editComment);\n}\n\nexport function* watchDeletePost() {\n  yield takeLatest(types.DELETE_POST_INIT, deletePost);\n}\nexport function* watchDeleteComment() {\n  yield takeLatest(types.DELETE_COMMENT_INIT, deleteComment);\n}\nexport function* watchLikePost() {\n  yield takeLatest(types.LIKE_POST_INIT, likePost);\n}\nexport function* watchdisLikePost() {\n  yield takeLatest(types.DISLIKE_POST_INIT, dislikePost);\n}\nexport function* watchPostComment() {\n  yield takeLatest(types.POST_COMMENT_INIT, postComment);\n}\nexport function* watchPosts() {\n  yield takeLatest(types.GET_POSTS_INIT, getPosts);\n}\nexport function* watchCreatePost() {\n  yield takeLatest(types.CREATE_POST_INIT, createPost);\n}\n\n// export function*\nexport default function* () {\n  yield fork(watchPosts);\n  yield fork(watchSearchPageResults);\n  yield fork(watchReplyComment);\n  yield fork(watchDeleteReply);\n  yield fork(commentUpdates);\n  yield fork(watchRepostPost);\n  yield fork(getNotification);\n  yield fork(watchUnRepostPost);\n  yield fork(watchPostComment);\n  yield fork(watchDeletePost);\n  yield fork(watchFetchPost);\n  yield fork(watchDeleteComment);\n  yield fork(watchCreatePost);\n  yield fork(watchLikePost);\n  yield fork(watchEditComment);\n  yield fork(watchdisLikePost);\n  yield fork(watchSearchPosts);\n}\n","import auth from './auth';\nimport post from './post';\n\nexport default [auth, post];\n","import { applyMiddleware, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension/logOnlyInProduction';\nimport createSagaMiddleware from 'redux-saga';\nimport { persistStore } from 'redux-persist';\nimport rootReducer from './reducers';\n// NEW CODE: You can also remove the redux-thunk dependency\nimport sagas from './sagas';\n\nconst sagaMiddleware = createSagaMiddleware();\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(sagaMiddleware)));\nexport const persitor = persistStore(store);\nsagas.map(sagaMiddleware.run);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst TheLink = styled(Link)`\n    color: #333;\n    text-decoration: none;\n`;\nconst OurLink = (props: any) => (\n    <TheLink {...props}>\n        {' '}\n        {props.title}\n    </TheLink>\n);\n\nexport default OurLink;\n","import { createSelector } from 'reselect';\n\n// calling educer postInitialState, so it will have access to initialState properties\nconst postSelector = (state: any) => state.post;\nconst userSelector = (state: any) => state.user;\nconst postSelectorId = (state: any) => state.post;\n\nexport const userStore = createSelector(userSelector, (state) => state);\nexport const profile = createSelector(postSelector, (state) => state.postPage);\n\nexport const getPosts =\n    // this gets all posts\n    createSelector(postSelector, (state) => state.posts);\n\nexport const getUserLikedPosts = (params) => createSelector(postSelector, (state) => state.posts.filter((post) => post.Likes.find((like) => like.userId == params.userId)));\n\nexport const getUserPosts = (params) => createSelector(postSelector, (state) => state.posts.filter((post) => post.userId == params.userId || post.RepostedByMe == true));\n\nexport const getProfileData = createSelector(userSelector, (state) => state.profileData);\n\nexport const getNotification = createSelector(postSelector, (state) => state.notification);\n\nexport const getIsNotified = createSelector(postSelector, (state) => state.isNotified);\nexport const userConfirmation = createSelector(userSelector, (state) => state.message);\nexport const getGoogleAccount = createSelector(userSelector, (state) => state.googleAccount);\nexport const userError = createSelector(userSelector, (state) => state.error);\nexport const postError = createSelector(postSelector, (state) => state.error);\nexport const userMessage = createSelector(userSelector, (state) => state.message);\n\n// will sort through original posts array by highest likeCount in DESC order, showing only 2\nexport const getPopPosts = createSelector(postSelector, (state) => state.posts\n  .filter((item) => item.likeCounts > 1)\n  .sort((a, b) => b.likeCounts - a.likeCounts)\n  .slice(0, 2));\nexport const getUser = createSelector(userSelector, (state) => state.currentUser);\nexport const getTitleError = createSelector(postSelector, (state) => state.titleError);\nexport const getBodyError = createSelector(postSelector, (state) => state.bodyError);\nexport const title = createSelector(postSelector, (state) => state.title);\nexport const postContent = createSelector(postSelector, (state) => state.postContent);\nexport const isLoading = createSelector(postSelector, (state) => state.isLoading);\n\nexport const getNotifications = createSelector(userSelector, (state) => state.getNotifications);\n\nexport const searchQuery = createSelector(postSelector, (state) => state.searchValue);\nexport const results = createSelector(postSelector, (state) => state.results);\nexport const searchPageResults = createSelector(postSelector, (state) => state.searchPageResults);\nexport const getSelectedUser = createSelector(postSelector, (state) => state.selectedUser);\nexport const mentionUser = createSelector(postSelector, (state) => state.mentionedUser);\nexport const getCommenterId = createSelector(postSelector, (state) => state.commenterId);\nexport const fetchRelatedUsers = createSelector(postSelector, (state) => {\n  // const users = state.posts.flatMap((x) => [x.author.username].concat(x.Comments.flatMap((y) => y.commentReplies.map((z) => z.author.username).concat(y.author.username))));\n  function removeDuplicatesBy(keyFn, array) {\n    const mySet = new Set();\n\n    return array.filter((x) => {\n      const key = keyFn(x);\n      const isNew = !mySet.has(key);\n\n      if (isNew) mySet.add(key);\n\n      return isNew;\n    });\n  }\n\n  // Recursion\n  function recursGetUsers(array) {\n    if (!array) return [];\n\n    return array.flatMap((v) => [v.author.username].concat(recursGetUsers(v.Comments)).concat(recursGetUsers(v.commentReplies)));\n  }\n\n  const users = recursGetUsers(state.posts);\n  const newUsers = removeDuplicatesBy((x) => x, users);\n\n  return newUsers;\n});\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getNotifications } from '../selectors/selectors';\nimport { notificationInit } from '../actions/postActions';\n\nfunction useNotificationHook() {\n  const dispatch = useDispatch();\n  const notifications = useSelector(getNotifications);\n  React.useEffect(() => {\n    dispatch(notificationInit());\n  }, []);\n\n  return [notifications];\n}\n\nexport default useNotificationHook;\n","import { useDispatch, useSelector } from 'react-redux';\nimport useNotificationHook from './notificationHook';\nimport { getUserProfile, updateUserProfile } from '../actions/userActions';\nimport {\n  likePostInit,\n  dislikePostInit,\n  deletePostInit,\n  repostPostInit,\n  unrepostPostInit,\n  commentReplyInit,\n  setSelectedUser,\n  searchPostsInit,\n  deleteReplyInit,\n  createPostInit,\n  setMentionedUser,\n  deleteCommentInit,\n  editCommentInit,\n  postCommentInit,\n  getSearchInit,\n} from '../actions/postActions';\nimport {\n  getIsNotified,\n  searchQuery,\n  getUser,\n  getPosts,\n  getPopPosts,\n  isLoading,\n  postError,\n  userError,\n  getBodyError,\n  getSelectedUser,\n  mentionUser,\n  userMessage,\n  getTitleError,\n  postContent,\n  searchPageResults,\n  getProfileData,\n  results,\n  title,\n  fetchRelatedUsers,\n  getCommenterId,\n} from '../selectors/selectors';\n\nfunction useStoreMethods() {\n  const dispatch = useDispatch();\n  const [notifications] = useNotificationHook();\n  const isNotified = useSelector(getIsNotified);\n  const user = useSelector(getUser);\n  const likePost = (id: number) => dispatch(likePostInit(id));\n  const dislikePost = (id: number) => dispatch(dislikePostInit(id));\n  const deletePost = (id: number, userId: number) => dispatch(deletePostInit(id, userId));\n  const deleteComment = (id: number, postId: number, userId: number) => dispatch(deleteCommentInit(id, postId, userId));\n  const postComment = (commentData: object) => dispatch(postCommentInit(commentData));\n  const editComment = (commentData) => dispatch(editCommentInit(commentData));\n  const createPost = (postData: object) => dispatch(createPostInit(postData));\n  const rePost = (id: number, userId: number) => dispatch(repostPostInit(id, userId));\n  const unRepost = (id: number, userId: number) => dispatch(unrepostPostInit(id, userId));\n  const getProfile = () => dispatch(getUserProfile());\n  const updateProfile = (userData) => dispatch(updateUserProfile(userData));\n  const replyComm = (data: object) => dispatch(commentReplyInit(data));\n  const deleteRep = (data: object) => dispatch(deleteReplyInit(data));\n  const searchQ = (query: string) => dispatch(searchPostsInit(query));\n  const getSearch = (query: string) => dispatch(getSearchInit(query));\n  const setSelectedOptionValue = (optionValue: string) => dispatch(setSelectedUser(optionValue));\n  const setMentioned = () => dispatch(setMentionedUser());\n  const ourTitle = useSelector(title);\n  const titleError = useSelector(getTitleError);\n  const ourBodyError = useSelector(getBodyError);\n  const ourPostContent = useSelector(postContent);\n  const profileData = useSelector(getProfileData);\n  const popPosts = useSelector(getPopPosts);\n  const posts = useSelector(getPosts);\n  const userErr = useSelector(userError);\n  const message = useSelector(userMessage);\n  const errPost = useSelector(postError);\n  const loading = useSelector(isLoading);\n  const query = useSelector(searchQuery);\n  const postResults = useSelector(results);\n  const searchResults = useSelector(searchPageResults);\n  const mentionUsers = useSelector(fetchRelatedUsers);\n  const selectedUser = useSelector(getSelectedUser);\n  const mentionedUser = useSelector(mentionUser);\n  const commenterId = useSelector(getCommenterId);\n\n  return {\n    posts,\n    notifications,\n    user,\n    mentionUsers,\n    setSelectedOptionValue,\n    setMentioned,\n    commenterId,\n    mentionedUser,\n    loading,\n    errPost,\n    message,\n    userErr,\n    query,\n    selectedUser,\n    searchResults,\n    isNotified,\n    getProfile,\n    setSelectedUser,\n    getSearch,\n    postResults,\n    searchQ,\n    deleteRep,\n    profileData,\n    updateProfile,\n    replyComm,\n    likePost,\n    dislikePost,\n    deletePost,\n    deleteComment,\n    postComment,\n    editComment,\n    createPost,\n    rePost,\n    unRepost,\n    ourTitle,\n    titleError,\n    popPosts,\n    ourBodyError,\n    ourPostContent,\n  };\n}\n\nexport default useStoreMethods;\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport { OurDateType } from '../utils/types';\n\nconst OurDate: React.FC<OurDateType> = ({ type = 'post-date', createdAt }) => (\n    <>\n        {type === 'post-date' && (\n        <Typography variant=\"subtitle1\" align=\"left\">\n            {moment(createdAt).calendar()}\n        </Typography>\n    )}\n\n        {type === 'comment-date' && (\n        <Typography id=\"date\" style={{ fontSize: '12px' }} variant=\"caption\" align=\"left\">\n            {moment(createdAt).calendar()}\n        </Typography>\n    )}\n\n        {type === 'reply-date' && (\n        <Typography style={{ fontSize: '12px' }} variant=\"caption\" align=\"left\">\n            {moment(createdAt).calendar()}\n        </Typography>\n    )}\n    </>\n);\n\nexport default OurDate;\n","import React, { Fragment, useState } from 'react';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ClearIcon from '@material-ui/icons/Clear';\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport Typography from '@material-ui/core/Typography';\nimport ReplyIcon from '@material-ui/icons/Reply';\nimport storeHooks from './storeHooks';\nimport { ButtonFunctionProps } from '../utils/types';\n\nconst ButtonFunction: React.FC<ButtonFunctionProps> = ({\n  type, onReply, update, postId, userId, commentId, comment, setEditComment, deleteReply, replyId, replyUserId,\n}) => {\n  const { deleteComment } = storeHooks();\n  return (\n      <>\n          {type === 'reply' && (\n          <span style={{ cursor: 'pointer', paddingRight: '20px' }} onClick={() => onReply?.()}>\n              <ReplyIcon color=\"primary\" style={{ margin: '-5px 0px' }} />\n              {' '}\n              <span>Reply</span>\n          </span>\n      )}\n          {type === 'delete' && (\n          <span style={{ cursor: 'pointer' }} onClick={() => deleteComment(commentId, postId, userId)}>\n              <DeleteOutlineOutlinedIcon style={{ margin: '-5px 0px' }} color=\"primary\" />\n              {' '}\n              <span>Delete</span>\n          </span>\n      )}\n          {type === 'edit' && (\n          <span style={{ cursor: 'pointer' }} onClick={() => setEditComment?.(true)}>\n              <EditIcon style={{ margin: '-5px 0px' }} color=\"primary\" />\n              {' '}\n              <span>Edit</span>\n          </span>\n      )}\n          {type === 'cancel' && (\n          <span style={{ cursor: 'pointer', paddingRight: '20px' }} onClick={() => setEditComment?.(false)}>\n              <ClearIcon style={{ margin: '-7px 0px' }} color=\"primary\" />\n              {' '}\n              <span>Cancel</span>\n          </span>\n      )}\n          {type === 'update' && (\n          <span style={{ cursor: 'pointer' }} onClick={() => update?.(comment)}>\n              <AddCircleOutlineIcon style={{ margin: '-7px 0px' }} color=\"primary\" />\n              {' '}\n              <span>Update</span>\n          </span>\n      )}\n          {type === 'deleteReply' && (\n          <Typography style={{ display: 'inline-block', float: 'right' }} align=\"right\">\n              <span style={{ cursor: 'pointer' }} onClick={() => deleteReply?.(replyId, postId, replyUserId, commentId)}>\n                  <DeleteOutlineOutlinedIcon style={{ margin: '-5px 0px' }} color=\"primary\" />\n                  {' '}\n                  <span>Delete</span>\n              </span>\n          </Typography>\n      )}\n      </>\n  );\n};\n\nexport default ButtonFunction;\n","import React, { Fragment } from 'react';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport { LikeButtonPropsType } from '../utils/types';\n\nconst LikeButton: React.FC<LikeButtonPropsType> = ({\n  dislike, postId, like, likeCounts, type,\n}) => (\n    <>\n        {type === 'liked' && (\n        <>\n            <span style={{ cursor: 'pointer' }} onClick={() => dislike?.(postId!)}>\n                <span style={{ padding: '12px' }}>\n                    Likes\n                    {' '}\n                    {' '}\n                    {likeCounts}\n                </span>\n                <FavoriteIcon style={{ color: 'red', cursor: 'pointer', margin: '-7px' }} />\n            </span>\n        </>\n    )}\n        {type === 'unliked' && (\n        <>\n            <span onClick={() => like?.(postId!)}>\n                <span style={{ padding: '12px' }}>\n                    Likes\n                    {' '}\n                    {' '}\n                    {likeCounts}\n                </span>\n                <FavoriteBorderIcon style={{ color: 'red', cursor: 'pointer', margin: '-7px' }} />\n            </span>\n        </>\n    )}\n    </>\n);\n\nexport default LikeButton;\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { useTheme } from '@material-ui/core/styles';\nimport OurLink from './OurLink';\n\nexport default function OurModal(props) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n  return (\n      <Dialog fullScreen={fullScreen} open={props.open} onClose={props.handleClose} aria-labelledby=\"responsive-dialog-title\">\n          <DialogTitle id=\"responsive-dialog-title\">You have to be signed in to do that</DialogTitle>\n          <DialogContent>\n              <DialogContentText>\n                  <OurLink\n            style={{ color: '#333' }}\n            to={{\n              pathname: '/login',\n            }}\n            title=\"Sign In\"\n          />\n              </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n              <Button autoFocus onClick={props.handleClose} color=\"primary\">\n                  Close\n              </Button>\n          </DialogActions>\n      </Dialog>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Button } from '@material-ui/core';\nimport ButtonFunction from './ButtonFunction';\nimport LikeButton from './LikeButton';\nimport OurModal from './OurModal';\nimport storehooks from './storeHooks';\nimport { AuthButtonType } from '../utils/types';\n\nconst AuthButtons = ({\n  postId,\n  currentUser,\n  writeComment,\n  openForm,\n  openModal,\n  handleCloseModal,\n  handleClickOpen,\n  post,\n  type = 'post-buttons-modal',\n  comment,\n  user,\n  onReply,\n  setEditComment,\n}: AuthButtonType) => {\n  const { likePost, dislikePost } = storehooks();\n  const memoizedLike = React.useCallback((id) => likePost(id), [likePost]);\n  const memoizedDislike = React.useCallback((id) => dislikePost(id), [dislikePost]);\n\n  return (\n      <>\n          {type === 'comment-buttons'\n                && (Object.entries(user!).length !== 0 ? (\n                    <>\n                        {user && user.user && comment!.userId === user.user.id ? (\n                            <Typography style={{ display: 'inline-block', float: 'right' }} align=\"right\">\n                                <ButtonFunction type=\"delete\" comment={comment} userId={comment!.userId} postId={postId} commentId={comment!.id} />\n                            </Typography>\n                    ) : null}\n                        <Typography style={{ display: 'inline-block', float: 'right' }} align=\"right\">\n                            <ButtonFunction type=\"reply\" onReply={onReply} />\n                        </Typography>\n                        {/* hide edit button if gifUrl */}\n                        {!comment!.gifUrl && comment!.userId === user!.user.id ? (\n                            <>\n                                <Typography style={{ display: 'inline-block', margin: '0px 20px', float: 'right' }} align=\"left\">\n                                    <ButtonFunction type=\"edit\" setEditComment={setEditComment} />\n                                </Typography>\n                            </>\n                    ) : null}\n                    </>\n                ) : null)}\n\n          {type === 'post-buttons'\n                && (Object.entries(currentUser!).length === 0 ? (\n                    <>\n                        <span onClick={handleClickOpen}>\n                            <LikeButton like={memoizedLike} type=\"unliked\" likeCounts={post!.likeCounts} />\n                        </span>\n                        {openModal ? <OurModal open={openModal} handleClose={handleCloseModal} /> : null}\n                    </>\n                ) : (\n                    <>\n                        {post!.likedByMe === true ? (\n                            <LikeButton postId={post!.id} dislike={memoizedDislike} type=\"liked\" likeCounts={post!.likeCounts} />\n                    ) : (\n                        <LikeButton postId={post!.id} like={memoizedLike} type=\"unliked\" likeCounts={post!.likeCounts} />\n                    )}\n                    </>\n                ))}\n\n          {type === 'post-buttons-modal'\n                && (Object.entries(currentUser!).length === 0 ? (\n                    <>\n                        <Button onClick={handleClickOpen} variant=\"outlined\" component=\"span\" color=\"primary\">\n                            Write A Comment\n                        </Button>\n                        {openModal ? <OurModal open={openModal} handleClose={handleCloseModal} /> : null}\n                    </>\n                ) : (\n                    <>\n                        <Button onClick={writeComment} variant=\"outlined\" component=\"span\" color=\"primary\">\n                            {openForm! ? 'Close' : 'Write A Comment'}\n                        </Button>\n                    </>\n                ))}\n      </>\n  );\n};\n\nexport default AuthButtons;\n","import React, { Fragment } from 'react';\nimport ReactGiphySearchbox from 'react-giphy-searchbox';\nimport './style.css';\n\nexport default function GifSection(props) {\n  return (\n      <>\n          <ReactGiphySearchbox\n        wrapperClassName=\"gifForm\"\n        searchFormClassName={{ padding: '20px 0px' }}\n        apiKey=\"9Ixlv3DWC1biJRI57RanyL7RTbfzz0o7\"\n        onSelect={(e) => props.select(e)}\n        masonryConfig={[\n          { columns: 4, imageWidth: 110, gutter: 5 },\n          {\n            mq: '1000px', columns: 4, imageWidth: 120, gutter: 5,\n          },\n        ]}\n      />\n      </>\n  );\n}\n","import React, { Fragment, useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport GifIcon from '@material-ui/icons/Gif';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport storeHooks from './storeHooks';\n\ntype FieldType = {\n  type: 'gif-commentfield' | 'post' | 'comment' | 'post-content' | 'edit-comment';\n  handleTitleChange?: (e: any) => void;\n  title?: string;\n  titleError?: boolean | null;\n  comment_body?: string;\n  commentChange?: (e: any) => void;\n  post_content?: string;\n  bodyError?: boolean | null;\n  handleContentChange?: (e: any) => void;\n  setGifSelected?: () => void;\n  selectedUser?: string;\n  setCommentEdit?: (e: any) => void;\n};\n\nconst OurTextField: React.FC<FieldType> = (props) => {\n  const { selectedUser } = storeHooks();\n\n  return (\n      <>\n          {props.type === 'post' && (\n          <TextField\n          label=\"Title\"\n          style={{\n            width: '100%',\n          }}\n          name=\"title\"\n          error={!(props.titleError === true || props.titleError === null)}\n          // helperText={props.titleError}\n          value={props.title!}\n          onChange={props?.handleTitleChange}\n          margin=\"none\"\n        />\n      )}\n\n          {props.type === 'gif-commentfield' && (\n          <TextField\n          className=\"commentInput\"\n          type=\"text\"\n          style={{ borderRadius: '50%' }}\n          id=\"outlined-multiline-static\"\n          label=\"Write A Comment\"\n          multiline\n          size=\"medium\"\n          name=\"comment_body\"\n          value={props.comment_body}\n          rows={props.comment_body!.length > 35 ? 3 : 1}\n          error={props.comment_body!.length > 200}\n          fullWidth\n          InputProps={{\n            startAdornment: (\n                <InputAdornment style={{ cursor: 'pointer', alignItems: 'center' }} position=\"start\">\n                    <GifIcon onClick={props?.setGifSelected} />\n                </InputAdornment>\n            ),\n          }}\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={props?.commentChange}\n        />\n      )}\n          {props.type === 'post-content' && (\n          <TextField\n          id=\"outlined-multiline-static\"\n          label=\"Post Content\"\n          name=\"postContent\"\n          multiline\n          style={{\n            width: '100%',\n            paddingTop: '20px',\n          }}\n          rows={props.post_content!.length > 50 ? '4' : '1'}\n          error={!(props.bodyError! === true || props.bodyError === null)}\n          value={props.post_content!}\n          onChange={props?.handleContentChange}\n          margin=\"normal\"\n        />\n      )}\n          {props.type === 'edit-comment' && (\n          <TextField\n          inputProps={{\n            'data-testid': 'comment-item-textfield',\n          }}\n          className=\"commentInput\"\n          type=\"text\"\n          style={{ borderRadius: '50%' }}\n          id=\"outlined-multiline-static\"\n          multiline\n          name=\"comment_body\"\n          defaultValue={props.comment_body}\n          rows=\"2\"\n          fullWidth\n          margin=\"normal\"\n          variant=\"outlined\"\n          onChange={props?.setCommentEdit}\n        />\n      )}\n      </>\n  );\n};\n\nexport default OurTextField;\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport GifIcon from '@material-ui/icons/Gif';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport React, { Fragment, useState } from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport GifSection from './GifSection';\nimport OurTextField from '../../../common/OurTextField';\nimport storeHooks from '../../../common/storeHooks';\nimport { CommentPropsType } from '../../../utils/types';\n\nexport default function CommentForm({\n  commentChange, comment_body, gifUrl, isGif, setCommentBody, onSubmit, setMentionedUser, currentUser,\n}: CommentPropsType) {\n  const [isGifSelected, setGifSelected] = useState<boolean>(false);\n  const {\n    mentionUsers, setSelectedOptionValue, selectedUser, mentionedUser,\n  } = storeHooks();\n  const selectedOption = React.useCallback(\n    (option) => {\n      setSelectedOptionValue(option);\n            setCommentBody?.(comment_body.concat(option));\n            setMentionedUser?.(false);\n    },\n    [setSelectedOptionValue, setCommentBody, setMentionedUser, comment_body],\n  );\n\n  const options = mentionUsers\n    .filter((item) => item !== currentUser?.username) // current user can't mention themselves\n    .map((item, key) => (\n        <option key={key} value={item}>\n            {item}\n        </option>\n    ));\n\n  return (\n      <>\n          <form onSubmit={onSubmit}>\n              {isGifSelected === false ? (\n                  <>\n                      <OurTextField\n              type=\"gif-commentfield\"\n              selectedUser={selectedUser}\n              comment_body={comment_body}\n              commentChange={commentChange}\n              setGifSelected={() => setGifSelected(true)}\n            />\n                      {comment_body.length > 200 && (\n                      <FormHelperText error id=\"component-helper-text\">\n                          Comment must be less than 200 chars\n                      </FormHelperText>\n            )}\n\n                      {mentionedUser && (\n                      <select onChange={(e) => selectedOption(e.target.value)} name=\"mentionedUsers\">\n                          <option value=\"\">Select User</option>\n                          {options}\n                      </select>\n            )}\n\n                      <br />\n                      <br />\n\n                      <Button disabled={!(comment_body.length > 6 && comment_body.length <= 200)} type=\"submit\" variant=\"outlined\" color=\"primary\">\n                          Post A Comment\n                      </Button>\n                  </>\n        ) : (\n            <>\n                <GifSection select={gifUrl} />\n                <Grid container spacing={1} style={{ padding: '50px 0px' }}>\n                    <Grid item sm={1} lg={1}>\n                        <TextFieldsIcon style={{ cursor: 'pointer' }} onClick={() => setGifSelected(false)} />\n                    </Grid>\n                    <Grid item sm={3} lg={3}>\n                        <Button disabled={isGif === ''} size=\"small\" type=\"submit\" variant=\"outlined\" color=\"primary\">\n                            Post GIPHY\n                        </Button>\n                    </Grid>\n                </Grid>\n            </>\n        )}\n          </form>\n      </>\n  );\n}\n","import React from 'react';\nimport Button from '@material-ui/core/Button';\n\nconst buttonStyle = {\n  color: '#fff',\n  fontSize: '11px',\n};\nconst OurSecondaryButton = (props) => (\n    <Button {...props} data-testid={props.test} variant=\"contained\" style={buttonStyle}>\n        {props.children}\n    </Button>\n);\nexport default OurSecondaryButton;\n","import React, { Fragment } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport OurDate from '../../../common/Date';\nimport { CommentType } from '../../../utils/types';\n\nconst CommentBody = ({ comment: { gifUrl, comment_body, createdAt } }: CommentType) => (\n    <>\n        <div data-testid=\"comment-body\">{gifUrl === '' && <ReactMarkdown className=\"markdownStyle\" source={comment_body} />}</div>\n        {gifUrl && <img style={{ width: '55%', clear: 'both', display: 'block' }} src={`${gifUrl}`} />}\n        <OurDate type=\"comment-date\" createdAt={createdAt} />\n    </>\n);\n\nexport default CommentBody;\n","import React, { Fragment, useState, useCallback } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport TextField from '@material-ui/core/TextField';\nimport ReactMarkdown from 'react-markdown/with-html';\nimport ButtonFunction from '../../../common/ButtonFunction';\nimport './style.css';\nimport { Grid } from '@material-ui/core';\nimport storeHooks from '../../../common/storeHooks';\nimport OurDate from '../../../common/Date';\nimport CommentBody from '../commentBody/commentBody';\nimport OurTextField from '../../../common/OurTextField';\nimport AuthButtons from '../../../common/AuthButtons';\nimport { CommentItemPropsType } from '../../../utils/types';\n\nconst CommentItem: React.FC<CommentItemPropsType> = ({\n  type, comment, reply, editComment, user, onReply, postId,\n}) => {\n  const [commentEdit, setCommentEdit] = useState('');\n  const [editCommentValue, setEditComment] = useState(false);\n  const { deleteRep } = storeHooks();\n\n  const update = (comment) => {\n    const data = {\n      comment_body: commentEdit,\n      id: comment.id,\n      postId: comment.postId,\n      userId: comment.userId,\n    };\n    editComment(data);\n    setEditComment(false);\n  };\n\n  const deleteReply = (replyId, postId, userId, commentId) => {\n    const data = {\n      replyId,\n      postId,\n      userId,\n      commentId,\n    };\n    deleteRep(data);\n  };\n\n  const memoizedDeleteReply = useCallback((replyId, postId, userId, commentId) => deleteReply(replyId, postId, userId, commentId), [deleteReply]);\n  const memoizedUpdate = useCallback((comment) => update(comment), [update]);\n\n  return (\n      <>\n          <Grid container>\n              <Grid item xs={12} lg={11}>\n                  {type === 'comment' && (\n                  <>\n                      {editCommentValue && comment.comment_body ? (\n                          <OurTextField type=\"edit-comment\" comment_body={comment.comment_body} setCommentEdit={(e) => setCommentEdit(e.target.value)} />\n              ) : (\n                  <CommentBody comment={comment} />\n              )}\n\n                      {comment.comment_body && editCommentValue ? (\n                          <>\n                              <ButtonFunction type=\"cancel\" setEditComment={setEditComment} />\n                              <ButtonFunction type=\"update\" update={memoizedUpdate} comment={comment} />\n                          </>\n              ) : (\n                  <>\n                      {/* if guest is on home page */}\n                      <AuthButtons type=\"comment-buttons\" comment={comment} user={user} postId={postId} onReply={onReply} setEditComment={setEditComment} />\n                  </>\n              )}\n                  </>\n          )}\n\n                  {type === 'reply' && (\n                  <>\n                      <div data-testid=\"reply-data\">\n                          <Grid container>\n                              <Grid item xs={12} lg={11}>\n                                  <div data-testid=\"reply-body\">\n                                      <ReactMarkdown className=\"markdownStyle\" source={reply?.replyBody} />\n                                  </div>\n                                  {Object.entries(user).length !== 0 ? (\n                      user && user.user && reply?.userId === user.user.id ? (\n                          <ButtonFunction\n                          type=\"deleteReply\"\n                          replyId={reply.id}\n                          replyUserId={reply.userId}\n                          commentId={comment.id}\n                          postId={postId}\n                          deleteReply={memoizedDeleteReply}\n                        />\n                      ) : null\n                    ) : null}\n                                  <OurDate type=\"reply-date\" createdAt={reply?.createdAt} />\n                              </Grid>\n                          </Grid>\n                      </div>\n                  </>\n          )}\n              </Grid>\n          </Grid>\n      </>\n  );\n};\nexport default CommentItem;\n","import Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\nimport TextFieldsIcon from '@material-ui/icons/TextFields';\nimport React, { Fragment } from 'react';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport { ReplyPropsType } from '../../../utils/types';\n\nexport default function ReplyForm({ onSubmit, replyChange, replyBody }: ReplyPropsType) {\n  return (\n      <>\n          <form onSubmit={onSubmit}>\n              <>\n                  <TextField\n            className=\"commentInput\"\n            type=\"text\"\n            style={{ borderRadius: '50%' }}\n            id=\"outlined-multiline-static\"\n            label=\"Write A Reply\"\n            multiline\n            size=\"medium\"\n            name=\"reply_body\"\n            value={replyBody}\n            rows={replyBody.length > 35 ? 3 : 1}\n            error={replyBody.length > 200}\n            fullWidth\n            margin=\"normal\"\n            variant=\"outlined\"\n            onChange={replyChange}\n          />\n                  {replyBody.length > 200 && (\n                  <FormHelperText error id=\"component-helper-text\">\n                      Comment must be less than 200 chars\n                  </FormHelperText>\n          )}\n                  <br />\n                  <br />\n\n                  <Button disabled={!(replyBody.length > 6 && replyBody.length <= 200)} type=\"submit\" variant=\"outlined\" color=\"primary\">\n                      Reply\n                  </Button>\n              </>\n          </form>\n      </>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport OurLink from '../../../common/OurLink';\nimport OurModal from '../../../common/OurModal';\n\ntype CommentAuthorDataInterface = {\n  comment: {\n    author: {\n      username: string;\n      gravatar: string;\n    };\n    userId: number;\n    commentReplies: any;\n  };\n  userId: number;\n  isBold: any;\n  openModal: () => void;\n  handleCloseModal: () => void;\n  handleClickOpen: () => void;\n  currentUser: Record<string, any>;\n}\nconst CommentAuthorData = ({\n  comment, isBold, currentUser, openModal, handleCloseModal, handleClickOpen, userId,\n}: CommentAuthorDataInterface) => {\n  const isReply = comment.commentReplies !== undefined ? '-10px 15px' : '-10px 0px';\n\n  return (\n      <>\n          <img alt=\"gravatar\" style={{ margin: isReply }} src={comment.author.gravatar} width=\"30\" height=\"30\" />\n          <Typography\n        style={{\n          display: 'inline-block', margin: '10px 10px', fontWeight: 700, padding: '0px 0px',\n        }}\n        variant=\"h6\"\n        align=\"left\"\n      >\n              {Object.entries(currentUser).length === 0 ? (\n                  <>\n                      <span\n              style={{\n                fontSize: '12px', margin: '0px', padding: '0px', cursor: 'pointer', fontWeight: isBold(comment),\n              }}\n              onClick={handleClickOpen}\n            >\n                          {comment.author.username}\n                          {comment.userId === userId && <span style={{ fontSize: '12px' }}> (OP)</span>}\n                      </span>\n\n                      {openModal ? <OurModal open={openModal} handleClose={handleCloseModal} /> : null}\n                  </>\n        ) : (\n            <>\n                <OurLink\n              style={{ fontSize: '12px', fontWeight: isBold(comment) }}\n              to={{\n                pathname: `/profile/${comment.author.username}`,\n              }}\n              title={comment.author.username}\n            />\n                {comment.userId === userId && <span style={{ fontSize: '12px' }}> (OP)</span>}\n            </>\n        )}\n          </Typography>\n      </>\n  );\n};\nexport default CommentAuthorData;\n","import React, { RefForwardingComponent, useState, Fragment } from 'react';\nimport List from '@material-ui/core/List';\nimport CommentItem from '../commentItem/CommentItem';\nimport ReplyForm from '../reply/ReplyForm';\nimport storeHooks from '../../../common/storeHooks';\nimport CommentAuthorData from '../commentAuthorData/commentAuthorData';\n\nconst ourStyle = {\n  margin: '15px ',\n};\nconst CommentListContainer: RefForwardingComponent<HTMLDivElement, any> = (props, ref) => {\n  const {\n    comment, openModal, handleClickOpen, handleCloseModal, isBold,\n  } = props;\n  const { replyComm, editComment } = storeHooks();\n  const [replyComment, setReplyComment] = useState(false);\n  const [addReply, setReply] = useState('');\n  const replySubmit = React.useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const data = {\n        replyBody: addReply,\n        userId: props.user.user.id,\n        postId: props.postId,\n        commentId: comment.id,\n      };\n\n      replyComm(data);\n      setReplyComment(false);\n      setReply('');\n    },\n    [replyComm, setReplyComment, setReply],\n  );\n    // this pass onReply to CommentItem component, when its clicked from commentItem it will call this function which displays\n    // the reply Form\n  const onReply = React.useCallback(() => {\n    console.log('onreply callback');\n    setReplyComment(!replyComment);\n  }, [setReplyComment, replyComment]);\n\n  return (\n      <List innerRef={ref} style={{ paddingBottom: '20px' }} data-testid=\"comment-list-container\">\n          <CommentAuthorData {...props} currentUser={props.user} comment={comment} openModal={openModal} handleClickOpen={handleClickOpen} handleCloseModal={handleCloseModal} isBold={isBold} />\n\n          {/* here you pass your ref */}\n          <div style={ourStyle} data-testid=\"commentitem-wrapper\">\n              <CommentItem onReply={onReply} type=\"comment\" comment={comment} user={props.user} postId={props.postId} deleteComment={props.deleteComment} editComment={editComment} />\n\n              {comment.commentReplies.length !== 0 ? (\n                  <div style={{ marginLeft: '30px', padding: '20px' }}>\n                      {comment.commentReplies.map((reply, i) => (\n                          <Fragment key={i}>\n                              <div style={{ padding: '5px' }}>\n                                  <CommentAuthorData\n                    {...props}\n                    currentUser={props.user}\n                    comment={reply}\n                    openModal={openModal}\n                    handleClickOpen={handleClickOpen}\n                    handleCloseModal={handleCloseModal}\n                    isBold={isBold}\n                  />\n                                  <CommentItem\n                    type=\"reply\"\n                    reply={reply}\n                    comment={comment}\n                    onReply={onReply}\n                    user={props.user}\n                    postId={props.postId}\n                    deleteComment={props.deleteComment}\n                    editComment={props.editComment}\n                  />\n                              </div>\n                          </Fragment>\n            ))}\n                      {replyComment && <ReplyForm onSubmit={(e) => replySubmit(e)} replyBody={addReply} replyChange={(e) => setReply(e.target.value)} />}\n                  </div>\n        ) : (\n            <div style={{ marginLeft: '30px', padding: '0px' }}>\n                {replyComment && <ReplyForm onSubmit={(e) => replySubmit(e)} replyBody={addReply} replyChange={(e) => setReply(e.target.value)} />}\n            </div>\n        )}\n          </div>\n      </List>\n  );\n};\n\n// you use forwardRef here\nexport default React.forwardRef(CommentListContainer);\n","import React, { Fragment, useState, Ref } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport OurSecondaryButton from '../../../common/OurSecondaryButton';\nimport CommentListContainer from '../commentListContainer/commentListContainer';\n\nfunction CommentList(props: any, ref: Ref<HTMLDivElement>) {\n  const [showMore, setShowMore] = useState<number>(2);\n  const [openModal, setOpenModal] = useState(false);\n  const [showLessFlag, setShowLessFlag] = useState<boolean>(false);\n  const the_comments = props.comments.length;\n  const inc = showMore as any;\n  const min = Math.min(2, the_comments - inc);\n  const showComments = (e) => {\n    e.preventDefault();\n\n    if (inc + 2 && inc <= the_comments) {\n      setShowMore(inc + 2);\n      setShowLessFlag(true);\n    } else {\n      setShowMore(the_comments);\n    }\n  };\n\n  const handleClickOpen = React.useCallback(() => {\n    console.log('this got called owl man');\n    setOpenModal(true);\n  }, [setOpenModal]);\n  const handleCloseModal = () => {\n    setOpenModal(false);\n  };\n\n  const showLessComments = React.useCallback(\n    (e) => {\n      e.preventDefault();\n      setShowMore(2);\n      setShowLessFlag(false);\n    },\n    [setShowMore, setShowLessFlag],\n  );\n  const isBold = (comment) => (comment.userId === props.userId ? 800 : 400);\n\n  // show comments by recent, and have the latest comment at the bottom, with the previous one just before it.\n  const filterComments = props.comments\n    .slice(0)\n    .sort((a, b) => {\n      const date1 = new Date(a.createdAt) as any;\n      const date2 = new Date(b.createdAt) as any;\n\n      return date2 - date1;\n    })\n    .slice(0, inc)\n    .reverse();\n\n  const showMoreComments = () => filterComments.map((comment, i) => (\n      <div data-testid={`comment-show-more-${i}`} key={i}>\n          <CommentListContainer ref={ref} comment={comment} openModal={openModal} handleCloseModal={handleCloseModal} isBold={isBold} handleClickOpen={handleClickOpen} {...props} />\n      </div>\n  ));\n\n  const showMoreLess = (\n      <div style={{ margin: '30px 0px' }} data-testid=\"show_more_less\">\n          {props.comments.length > 2 ? (\n              <>\n                  {min !== -1 && min !== -2 ? (\n                      <>\n                          {min !== 0 ? (\n                              <OurSecondaryButton test=\"show_more_button\" onClick={(e) => showComments(e)} component=\"span\" color=\"secondary\">\n                                  View\n                                  {' '}\n                                  {min !== -1 && min !== -2 ? min : 0}\n                                  {' '}\n                                  More Comments\n                              </OurSecondaryButton>\n              ) : (\n                  <OurSecondaryButton test=\"show_less_button\" onClick={(e) => showLessComments(e)} component=\"span\" color=\"secondary\">\n                      Show Less Comments\n                  </OurSecondaryButton>\n              )}\n                      </>\n          ) : (\n              <OurSecondaryButton test=\"show_less_button\" onClick={(e) => showLessComments(e)} component=\"span\" color=\"secondary\">\n                  Show Less Comments\n              </OurSecondaryButton>\n          )}\n              </>\n      ) : null}\n      </div>\n  );\n\n  return (\n      <Grid data-testid=\"comment-list-div\">\n          <>{showMoreLess}</>\n          {showLessFlag === true ? (\n      // will show most recent comments below\n        showMoreComments()\n      ) : (\n          <>\n              {/* filter based on first comment  */}\n              {filterComments.map((comment, i) => (\n                  <div key={i} ref={ref} className=\"comment\">\n                      <CommentListContainer ref={ref} comment={comment} openModal={openModal} handleCloseModal={handleCloseModal} isBold={isBold} handleClickOpen={handleClickOpen} {...props} />\n                  </div>\n          ))}\n          </>\n      )}\n      </Grid>\n  );\n}\n\nexport default React.forwardRef(CommentList) as React.RefForwardingComponent<HTMLDivElement, any>;\n","import React, { useState, Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport CommentForm from '../comment/CommentForm';\nimport CommentList from '../commentList/CommentList';\nimport AuthButtons from '../../../common/AuthButtons';\nimport { CommentBottomType } from '../../../utils/types';\n\nconst CommentBottom: React.FC<CommentBottomType> = ({\n  post: { Comments, userId, id }, currentUser, deleteComment, postComment,\n}) => {\n  const [openModal, setOpenModal] = useState(false);\n  const [openForm, setOpenForm] = useState(false);\n  const [comment_body, setCommentBody] = useState('');\n  const [gifUrl, setGifUrl] = useState('');\n  const [mentionedUser, setMentionedUser] = useState(false);\n  const divRef = React.useRef<any>();\n  const writeComment = React.useCallback(() => {\n    // this is the same as this.setState({ openForm: !this.state.open })\n    setOpenForm(!openForm);\n  }, [setOpenForm, openForm]);\n  const commentChange = React.useCallback(\n    (comment) => {\n      setCommentBody(comment);\n      const regex = /^@/i; // checks for the first character is @\n      // const regexTwitter = /\\B@[a-z0-9_-]+/gi;\n      const words = comment.split(' ');\n\n      if (words.length === 0) {\n        setMentionedUser(false);\n      }\n\n      for (let i = 0; i < words.length; i++) {\n        const letter = words[i];\n\n        if (regex.test(letter)) {\n          setMentionedUser(true);\n        } else {\n          setMentionedUser(false);\n        }\n      }\n\n      setGifUrl('');\n    },\n    [setMentionedUser, setGifUrl],\n  );\n  const selectGif = React.useCallback(\n    (e) => {\n      setGifUrl(e.images.downsized_large.url);\n      setCommentBody('');\n      // you wont be able to add text comment with a gif, it will look weird :(\n    },\n    [setGifUrl, setCommentBody],\n  );\n  const handleClickOpen = React.useCallback(() => {\n    setOpenModal(true);\n  }, [setOpenModal]);\n  const handleCloseModal = React.useCallback(() => {\n    setOpenModal(false);\n  }, [setOpenModal]);\n  const commentSubmit = React.useCallback(\n    (e: any, id: number) => {\n      e.preventDefault();\n      const formData = {\n        comment_body,\n        id,\n        gifUrl,\n      };\n      postComment(formData);\n      setCommentBody('');\n      setOpenForm(false);\n\n      // divRef.current.scrollIntoView({ behavior: \"smooth\" });\n      // my attempt to scroll to the lastest comment.\n      setTimeout(() => {\n        divRef.current.scrollIntoView({ behavior: 'smooth', block: 'center', inline: 'nearest' });\n      }, 1200);\n    },\n    [setCommentBody, setOpenForm, comment_body, gifUrl],\n  );\n  const commentsView = (\n      <>\n          <span style={{ margin: '15px 0px', fontSize: '14px' }}>\n              {' '}\n              (\n              {Comments.length}\n              )\n              {' '}\n          </span>\n          <Typography style={{ fontWeight: 500, margin: '10px 0px', fontSize: '12px' }} variant=\"caption\">\n              Comments\n          </Typography>\n          <CommentList ref={divRef} user={currentUser} deleteComment={deleteComment} userId={userId} postId={id} comments={Comments} />\n\n          {/*  if show more hide show more button and show show less comments button */}\n      </>\n  );\n  const commentForm = openForm ? (\n      <CommentForm\n      commentChange={(e: any) => commentChange(e.target.value)}\n      comment_body={comment_body}\n      onSubmit={(e) => commentSubmit(e, id)}\n      gifUrl={selectGif}\n      isGif={gifUrl}\n      mentionedUser={mentionedUser}\n      setMentionedUser={setMentionedUser}\n      setCommentBody={setCommentBody}\n      currentUser={currentUser.user}\n    />\n  ) : null;\n\n  return (\n      <Grid item sm={12} lg={12} style={{ paddingTop: '40px' }}>\n          {Comments.length === 0 ? <div ref={divRef} /> : null}\n\n          {Comments.length > 0 ? (\n        commentsView\n      ) : (\n          <Grid item sm={12} lg={12} style={{ padding: '30px 0px' }}>\n              <Typography>No Commments Yet</Typography>\n          </Grid>\n      )}\n          <AuthButtons currentUser={currentUser} writeComment={writeComment} openForm={openForm} handleClickOpen={handleClickOpen} handleCloseModal={handleCloseModal} openModal={openModal} />\n          {commentForm}\n      </Grid>\n  );\n};\n\nexport default CommentBottom;\n","import React, { Fragment, useState } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\nimport { toast, ToastContainer } from 'react-toastify';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport OurLink from '../../../common/OurLink';\nimport 'react-toastify/dist/ReactToastify.css';\nimport storeHooks from '../../../common/storeHooks';\nimport OurDate from '../../../common/Date';\nimport AuthButtons from '../../../common/AuthButtons';\nimport CommentBottom from '../commentbottom/commentBottom';\n\nfunction PostItemContainer(props: any) {\n  const [openModal, setOpenModal] = useState(false);\n  const { rePost, unRepost, commenterId } = storeHooks();\n  const handleClickOpen = React.useCallback(() => {\n    setOpenModal(true);\n  }, [setOpenModal]);\n  const handleCloseModal = React.useCallback(() => {\n    setOpenModal(false);\n  }, [setOpenModal]);\n  const { post, currentUser, getNotifications } = props;\n  // check if user is on user posts,\n  const ifOnPosts = window.location.href.indexOf('posts') != -1;\n\n  return (\n      <>\n          {/* do not show notification dialong if commenter comments on a post, only show comment notification if someelse commented on a post\n             do not need to see notification for your own comments\n             */}\n          {getNotifications && currentUser && currentUser.user && currentUser.user.id !== commenterId && <ToastContainer autoClose={4000} position={toast.POSITION.BOTTOM_RIGHT} />}\n          <Grid data-testid=\"post-item-container\" item sm={12} md={12} style={{ margin: '20px 0px' }}>\n              <Paper style={{ padding: '20px' }}>\n                  {ifOnPosts ? (\n                      <>\n                          {post.RepostedByMe && currentUser && currentUser.user && post.userId !== currentUser.user.id ? (\n                              <>\n                                  <Typography>\n                                      <RepeatIcon style={{ margin: '-5px 0px', color: 'green' }} />\n                                      {' '}\n                                      Repost from\n                                      {post.author.username}\n                                  </Typography>\n                              </>\n              ) : null}\n                      </>\n          ) : null}\n\n                  <Typography variant=\"h5\" align=\"left\">\n                      <OurLink\n              style={{ fontSize: '16px' }}\n              to={{\n                pathname: `/post/${post.id}`,\n                state: { post },\n              }}\n              title={post.title}\n            />\n                  </Typography>\n                  <Grid item sm={12} md={12} style={{ padding: '30px 0px' }}>\n                      <Typography data-testid=\"post-content-testid\" align=\"left\">\n                          {post.postContent.slice(0, 50)}\n                      </Typography>\n                  </Grid>\n                  <Avatar\n            style={{\n              display: 'inline-block',\n              margin: '-10px -20px',\n              padding: '0px 30px 0px 20px',\n            }}\n            sizes=\"small\"\n            src={post.author.gravatar}\n          />\n                  <Typography display=\"inline\" variant=\"subtitle1\" align=\"left\">\n                      <OurLink\n              to={{\n                pathname: `/profile/${post.author.username}`,\n                state: { post },\n              }}\n              title={post.author.username}\n            />\n                  </Typography>\n                  {/* <Typography align=\"right\" variant=\"body1\">\n                        Likes: {post.likeCounts}\n                    </Typography> */}\n                  <Grid container spacing={1} style={{ padding: '20px 0px' }}>\n                      <Grid item sm={10} lg={10} md={10} style={{ padding: '0px 0px' }}>\n                          <Typography align=\"left\">\n                              {currentUser && currentUser.user && post.userId === currentUser.user.id ? (\n                                  <span style={{ cursor: 'pointer' }} onClick={() => props.deletePost(post.id, post.userId)}>\n                                      <DeleteOutlineOutlinedIcon style={{ margin: '-5px 0px' }} color=\"primary\" />\n                                      {' '}\n                                      <span>Delete</span>\n                                  </span>\n                ) : null}\n                          </Typography>\n                          <Typography align=\"left\">\n                              {currentUser && currentUser.user && post.userId !== currentUser.user.id ? (\n                                  <>\n                                      {post.RepostedByMe ? (\n                                          <>\n                                            <span style={{ cursor: 'pointer' }} onClick={() => unRepost(post.id, currentUser.user.id)}>\n                                              <RepeatIcon style={{ margin: '-5px 0px', color: 'green' }} />\n                                              {' '}\n                                              <span>Un-Repost</span>\n                                          </span>\n                                        </>\n                    ) : (\n                        <>\n                            <span style={{ cursor: 'pointer' }} onClick={() => rePost(post.id, currentUser.user.id)}>\n                                <RepeatIcon style={{ margin: '-5px 0px' }} color=\"primary\" />\n                                {' '}\n                                <span>Repost</span>\n                            </span>\n                        </>\n                    )}\n                                  </>\n                ) : null}\n                          </Typography>\n                      </Grid>\n                      <Grid item sm={2} lg={2} style={{ padding: '0px 15px' }}>\n                          <Typography align=\"right\">\n                              <AuthButtons currentUser={currentUser} type=\"post-buttons\" handleClickOpen={handleClickOpen} handleCloseModal={handleCloseModal} post={post} openModal={openModal} />\n                          </Typography>\n                      </Grid>\n                  </Grid>\n\n                  <OurDate type=\"post-date\" createdAt={post.createdAt} />\n                  <CommentBottom post={post} deleteComment={props.deleteComment} currentUser={props.currentUser} postComment={props.postComment} />\n              </Paper>\n          </Grid>\n      </>\n  );\n}\nexport default PostItemContainer;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\n\nconst OurLoader = () => <Loader style={{ margin: '20px 0px' }} type=\"TailSpin\" color=\"#000\" height={50} width={50} />;\n\nexport default OurLoader;\n","import React, { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport 'react-toastify/dist/ReactToastify.css';\nimport PostItemContainer from '../PostItemContainer/PostItemContainer';\nimport storeHooks from '../../../common/storeHooks';\nimport OurLoader from '../../../common/OurLoader';\n\nfunction PostList(props: any) {\n  const { posts, currentUser } = props;\n\n  return storeHooks().loading ? (\n      <OurLoader />\n  ) : (\n      <>\n          {posts.length > 0 ? (\n        posts.map((post, i) => (\n            <div key={i} data-testid=\"post-list\">\n                <PostItemContainer post={post} currentUser={currentUser} {...props} />\n            </div>\n        ))\n      ) : (\n          <div data-testid=\"no-posts\">\n              <Grid item md={8}>\n                  <Typography>No Posts yet</Typography>\n              </Grid>\n          </div>\n      )}\n      </>\n  );\n}\n\nexport default React.memo(PostList);\n","import { Grid } from '@material-ui/core';\nimport React, { Component } from 'react';\n\nexport type gridHocState = {}\nexport default function (WrappedComponent) {\n  class GridHoc extends Component<{}, gridHocState> {\n    state = {};\n\n    render() {\n      return (\n          <Grid container justify=\"center\" spacing={0}>\n              <Grid item xs={11} sm={9} md={11} lg={8} style={{ margin: '20px 0px' }}>\n                  <WrappedComponent {...this.props} />\n              </Grid>\n          </Grid>\n      );\n    }\n  }\n\n  return GridHoc;\n}\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { initCommentUpdates, getPostsInit } from '../actions/postActions';\nimport { getPosts } from '../selectors/selectors';\n\nfunction usePostsHooks() {\n  const dispatch = useDispatch();\n  const posts = useSelector(getPosts);\n  React.useEffect(() => {\n    dispatch(getPostsInit());\n    dispatch(initCommentUpdates());\n  }, []);\n\n  return { posts };\n}\n\nexport default usePostsHooks;\n","import React from 'react';\nimport Alert from '@material-ui/lab/Alert';\nimport useStoreMethods from './storeHooks';\n\nconst myStyles: React.CSSProperties = {\n  position: 'fixed',\n  width: '500px',\n  height: '50px',\n  bottom: '0px',\n  left: '0px',\n  right: '0px',\n  margin: '20px auto',\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignContent: 'center',\n  padding: '15px',\n  zIndex: 99999,\n};\n\nfunction OurError() {\n  const { errPost } = useStoreMethods();\n\n  return (\n      <Alert style={myStyles} severity=\"error\">\n          {errPost}\n      </Alert>\n  );\n}\n\nexport default OurError;\n","import React from 'react';\nimport * as classnames from 'classnames';\n\nfunction OurWrapper(props: any) {\n  return (\n      <div\n      className={classnames(\n        (props.appBar,\n        {\n          [props.appBarShift]: props.appOpen,\n        }),\n      )}\n    >\n          {props.children}\n      </div>\n  );\n}\n\nexport default OurWrapper;\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport PostList from '../forms/postList/postList';\nimport GridHoc from '../hoc/grid';\nimport usePostsHook from '../../common/usePostHook';\nimport storeMethods from '../../common/storeHooks';\nimport OurError from '../../common/OurError';\nimport OurWrapper from '../../common/OurWrapper';\n\nfunction Landing(props: any) {\n  usePostsHook();\n  return (\n      <>\n          <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n              <Typography variant=\"subtitle1\" align=\"left\">\n                  Post's from our users\n              </Typography>\n\n              {storeMethods().errPost && <OurError />}\n              <PostList\n          likePost={storeMethods().likePost}\n          deletePost={storeMethods().deletePost}\n          deleteComment={storeMethods().deleteComment}\n          dislikePost={storeMethods().dislikePost}\n          posts={storeMethods().posts}\n          currentUser={storeMethods().user}\n          postComment={storeMethods().postComment}\n          isNotified={storeMethods().isNotified}\n          getNotifications={storeMethods().notifications}\n          editComment={storeMethods().editComment}\n        />\n          </OurWrapper>\n      </>\n  );\n}\nexport default React.memo(GridHoc(Landing));\n\nexport { Landing as LandingComponent };\n","import Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport OurTextField from '../../../common/OurTextField';\n\ntype PostFormInterface = {\n  onSubmit: (event) => void;\n  title: string;\n  titleError: boolean;\n  bodyError: boolean;\n  handleTitleChange: (event) => void;\n  postContent: string;\n  handleContentChange: (event) => void;\n  disButton: boolean;\n}\nconst PostForm = ({\n  onSubmit, handleTitleChange, titleError, bodyError, title, handleContentChange, postContent, disButton,\n}: PostFormInterface) => (\n    <form onSubmit={onSubmit}>\n        <Typography className=\"title\" style={{ paddingBottom: '20px' }} variant=\"subtitle1\">\n            New Post\n        </Typography>\n        <OurTextField type=\"post\" titleError={titleError} title={title} handleTitleChange={handleTitleChange} />\n        <FormHelperText error id=\"component-helper-text\">\n            {titleError}\n        </FormHelperText>\n\n        <OurTextField type=\"post-content\" bodyError={bodyError} post_content={postContent} handleContentChange={handleContentChange} />\n        <FormHelperText error id=\"component-helper-text\">\n            {bodyError}\n        </FormHelperText>\n        <br />\n        <Button className=\"butSub\" disabled={disButton} variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n    </form>\n);\n\nexport default PostForm;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport Tab from '@material-ui/core/Tab';\nimport Tabs from '@material-ui/core/Tabs';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport PostList from '../forms/postList/postList';\nimport usePostsHook from '../../common/usePostHook';\nimport './style.css';\nimport storeMethods from '../../common/storeHooks';\nimport { TabPanelPropsType } from '../../utils/types';\n\nfunction TabPanel({\n  children, index, value, ...other\n}: TabPanelPropsType) {\n  return (\n      <Typography component=\"div\" role=\"tabpanel\" hidden={value !== index} id={`simple-tabpanel-${index}`} aria-labelledby={`simple-tab-${index}`} {...other}>\n          {value === index && <Box p={3}>{children}</Box>}\n      </Typography>\n  );\n}\n\nfunction a11yProps(index: any) {\n  return {\n    id: `simple-tab-${index}`,\n    'aria-controls': `simple-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    padding: '30px 0px',\n    // width: '300px',\n  },\n}));\n\nexport default function OurTabs() {\n  // calls the posts api once, then we use storeMethods().posts to get the posts from store\n  usePostsHook();\n  const classes = useStyles();\n  const [value, setValue] = React.useState(1);\n  const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n    setValue(newValue);\n  };\n\n  return (\n      <div className={classes.root}>\n          <Grid container justify=\"center\">\n              <Grid item xs={12} sm={12} md={12} lg={9}>\n                  <Tabs variant=\"fullWidth\" className=\"tabMenu\" value={value} onChange={handleChange}>\n                      <Tab label=\"Trending\" {...a11yProps(0)} />\n                      <Tab label=\"Newest\" {...a11yProps(1)} />\n                  </Tabs>\n              </Grid>\n\n              <Grid item xs={12} sm={12} md={12} lg={9}>\n                  <TabPanel value={value} index={0}>\n                      <PostList\n              likePost={storeMethods().likePost}\n              deletePost={storeMethods().deletePost}\n              deleteComment={storeMethods().deleteComment}\n              dislikePost={storeMethods().dislikePost}\n              posts={storeMethods().popPosts}\n              currentUser={storeMethods().user}\n              postComment={storeMethods().postComment}\n              isNotified={storeMethods().isNotified}\n              getNotifications={storeMethods().notifications}\n              editComment={storeMethods().editComment}\n            />\n                  </TabPanel>\n              </Grid>\n              <Grid item xs={12} sm={12} md={12} lg={9}>\n                  <TabPanel value={value} index={1}>\n                      <PostList\n              likePost={storeMethods().likePost}\n              deletePost={storeMethods().deletePost}\n              deleteComment={storeMethods().deleteComment}\n              dislikePost={storeMethods().dislikePost}\n              posts={storeMethods().posts}\n              currentUser={storeMethods().user}\n              postComment={storeMethods().postComment}\n              isNotified={storeMethods().isNotified}\n              getNotifications={storeMethods().notifications}\n              editComment={storeMethods().editComment}\n            />\n                  </TabPanel>\n              </Grid>\n          </Grid>\n      </div>\n  );\n}\n","import React from 'react';\n\nexport default function useInputChange(props) {\n  const {\n    addTitle, addContent, addUsername, addEmail, addPassword, addPasswordConf,\n  } = props;\n\n  return React.useCallback(\n    (event) => {\n      if (event.target.name === 'title') {\n        addTitle(event.target.value);\n      }\n\n      if (event.target.name === 'postContent') {\n        addContent(event.target.value);\n      }\n\n      if (event.target.name === 'username') {\n        addUsername(event.target.value);\n      }\n\n      if (event.target.name === 'email') {\n        addEmail(event.target.value);\n      }\n\n      if (event.target.name === 'password') {\n        addPassword(event.target.value);\n      }\n\n      if (event.target.name === 'passwordConf') {\n        addPasswordConf(event.target.value);\n      } else {\n        return null;\n      }\n    },\n    [addTitle, addContent, addUsername, addEmail, addPassword, addPasswordConf],\n  );\n}\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { useDispatch } from 'react-redux';\nimport PostForm from '../forms/createPost/createPost';\nimport GridHoc from '../hoc/grid';\nimport OurTabs from '../tabs/OurTabs';\nimport useInputChange from '../../common/handleHook';\nimport { addTitle, addContent } from '../../actions/postActions';\nimport OurError from '../../common/OurError';\nimport storeMethods from '../../common/storeHooks';\nimport OurWrapper from '../../common/OurWrapper';\n\nfunction Dashboard(props: any) {\n  const dispatch = useDispatch();\n  const inputData = {\n    addTitle: (data: string) => dispatch(addTitle(data)),\n    addContent: (data: string) => dispatch(addContent(data)),\n  };\n  const handleInputChange = useInputChange(inputData);\n  const { ourTitle } = storeMethods();\n  const { titleError } = storeMethods();\n  const { ourBodyError } = storeMethods();\n  const { ourPostContent } = storeMethods();\n  const { createPost } = storeMethods();\n  const onSubmit = (e: any) => {\n    e.preventDefault();\n    const postData = { ourTitle, ourPostContent };\n    createPost(postData);\n  };\n\n  const isEnabled = !(titleError === true && ourBodyError === true);\n\n  return (\n      <>\n          <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n              <Grid justify=\"center\" container>\n                  <Grid item lg={9} xs={11}>\n                      {storeMethods().errPost && <OurError />}\n                      <PostForm\n              title={ourTitle}\n              postContent={ourPostContent}\n              handleTitleChange={handleInputChange}\n              handleContentChange={handleInputChange}\n              onSubmit={onSubmit}\n              disButton={isEnabled}\n              titleError={titleError}\n              bodyError={ourBodyError}\n            />\n                  </Grid>\n              </Grid>\n\n              <br />\n\n              <OurTabs />\n          </OurWrapper>\n      </>\n  );\n}\n\nexport default GridHoc(Dashboard);\n// will be useful for unit testing.\nexport { Dashboard as DashboardComponent };\n","import React, { Fragment } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport GridHoc from '../hoc/grid';\nimport { userConfirmation } from '../../selectors/selectors';\nimport { resendEmailConfirmationInit } from '../../actions/userActions';\n\nexport type emailConfirmation = {\n  location: any;\n}\n\nfunction EmailConfirmation(props: emailConfirmation) {\n  const dispatch = useDispatch();\n  const user = useSelector(userConfirmation);\n  const resendEmail = () => dispatch(resendEmailConfirmationInit());\n  const emailMessage = user || props.location.state.meta.message;\n\n  return (\n      <>\n          <h3>{emailMessage}</h3>\n\n          <span style={{ cursor: 'pointer' }} onClick={() => resendEmail()}>\n              Resend Email Confirmation\n          </span>\n      </>\n  );\n}\n\nexport default GridHoc(EmailConfirmation);\n","import { Alert, AlertTitle } from '@material-ui/lab';\nimport React, { useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport GridHoc from '../hoc/grid';\nimport { userConfirmation, userError } from '../../selectors/selectors';\nimport { emailConfirmationInit } from '../../actions/userActions';\n\nfunction EmailConfirmationSuccess(props) {\n  const didMountRef = useRef();\n  const dispatch = useDispatch();\n  const user = useSelector(userConfirmation);\n  const error = useSelector(userError);\n  const emailConfirmation = (payload: object) => dispatch(emailConfirmationInit(payload));\n  useEffect(() => {\n    if (!didMountRef.current) {\n      // didMountRef.current = true\n      // console.log(\"email confirmation\");\n      emailConfirmation(props.match.params);\n    } else {\n      console.log('this is component didupdate');\n    }\n  }, [didMountRef]);\n\n  return (\n      <div data-testid=\"message\">\n          {user.includes('Thank you') ? (\n              <div data-testid=\"success-message\">\n                  <Alert severity=\"success\">\n                      <AlertTitle>Success</AlertTitle>\n                      {user}\n                      {' '}\n                      <a href=\"/login\">Login</a>\n                  </Alert>\n              </div>\n      ) : (\n          <div data-testid=\"error-message\">\n              <Alert severity=\"warning\">\n                  <AlertTitle>Error</AlertTitle>\n                  {error}\n              </Alert>\n          </div>\n      )}\n      </div>\n  );\n}\n\nexport default GridHoc(EmailConfirmationSuccess);\n","import React, { Fragment } from 'react';\nimport PostList from '../forms/postList/postList';\nimport GridHoc from '../hoc/grid';\nimport usePostsHook from '../../common/usePostHook';\nimport OurWrapper from '../../common/OurWrapper';\nimport { ILikesType } from '../../utils/types';\n\nfunction Likes({\n  appBar, likePost, deleteComment, dislikePost, deletePostInit, notificationInit, user, appBarShift, appOpen, postCommentInit, isNotified, notification,\n}:ILikesType) {\n  const { posts } = usePostsHook();\n  return (\n      <>\n          <OurWrapper appBar={appBar} appOpen={appOpen} appBarShift={appBarShift}>\n              <PostList\n          likePost={likePost}\n          deletePost={deletePostInit}\n          deleteComment={deleteComment}\n          dislikePost={dislikePost}\n          posts={posts}\n          currentUser={user}\n          postComment={postCommentInit}\n          isNotified={isNotified}\n          getNotifications={notificationInit}\n          notification={notification}\n        />\n          </OurWrapper>\n      </>\n  );\n}\n\nexport default GridHoc(React.memo(Likes));\nexport { Likes as LikesComponent };\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  deleteCommentInit, deletePostInit, dislikePostInit, getPostsInit, likePostInit, notificationInit, postCommentInit,\n} from '../actions/postActions';\nimport Likes from '../components/Likes/Likes';\nimport { getNotification, getUser, getUserLikedPosts } from '../selectors/selectors';\n\nconst mapStateToProps = (state, ownProps) => createStructuredSelector({\n  posts: getUserLikedPosts(ownProps.match.params),\n  user: getUser,\n  notification: getNotification,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  notificationInit: () => dispatch(notificationInit()),\n  getPostsInit: () => dispatch(getPostsInit()),\n  likePost: (id: number) => dispatch(likePostInit(id)),\n  postCommentInit: (commentData: object) => dispatch(postCommentInit(commentData)),\n  dislikePost: (id: number) => dispatch(dislikePostInit(id)),\n  deletePostInit: (id: number, userId: number) => dispatch(deletePostInit(id, userId)),\n  deleteComment: (id: number, postId: number, userId: number) => dispatch(deleteCommentInit(id, postId, userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Likes);\n","import Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\nimport { LoginType } from '../../../utils/types';\n\ntype LoginInterface = {\n  submit: (event) => void;\n  username: string;\n  password: string;\n  usernameChange: (event) => void;\n  passwordChange: (event) => void;\n}\n\nconst LoginForm = ({\n  submit, username, password, passwordChange, usernameChange,\n}: LoginType) => (\n    <form style={{ width: '100%' }} onSubmit={submit}>\n        <TextField label=\"Username\" style={{ width: '100%' }} name=\"username\" value={username} onChange={usernameChange} margin=\"normal\" />\n        <br />\n        <TextField label=\"Password\" name=\"password\" type=\"password\" style={{ width: '100%' }} className=\"\" value={password} onChange={passwordChange} margin=\"normal\" />\n        {/*  */}\n        <br />\n        <br />\n\n        <Button variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Login\n        </Button>\n    </form>\n);\n\nexport default LoginForm;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { initLogin } from '../../actions/userActions';\nimport { AuthHocPropsType, AuthStateType } from '../../utils/types';\n\nexport default function (WrappedComponent) {\n  class IsAuth extends Component<AuthHocPropsType, AuthStateType> {\n    ourState: AuthStateType = {\n      errors: {},\n    };\n\n    componentDidMount() {\n      this.props.initLogin();\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  }\n\n  const mapStateToProps = (state: any) => ({\n    user: state.user,\n  });\n  const mapDispatchToProps = (dispatch: any) => ({\n    initLogin: () => dispatch(initLogin()),\n  });\n\n  return connect(mapStateToProps, mapDispatchToProps)(IsAuth);\n}\n","import React from 'react';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => createStyles({\n  button: {\n    margin: theme.spacing(0, 0, 1),\n    display: 'flex',\n    backgroundColor: '#48A9A6',\n    borderRadius: theme.shape.borderRadius,\n    boxShadow: theme.shadows[1],\n    height: '36px',\n    cursor: 'pointer',\n    textDecoration: 'none',\n    '&:hover': {\n      backgroundColor: '#000',\n    },\n    '&:active': {\n      boxShadow: 'inset 0 0 0 32px rgba(0,0,0,0.1)',\n    },\n  },\n  wrapper: {\n    marginTop: '1px',\n    marginLeft: '1px',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    width: '34px',\n    height: '34px',\n    borderRadius: '2px',\n    backgroundColor: '#fff',\n  },\n  icon: {\n    width: '18px',\n    height: '18px',\n  },\n  text: {\n    margin: '0px 40px',\n    color: '#fff',\n    fontSize: '14px',\n    fontWeight: 'bold',\n    textTransform: 'uppercase',\n    flexGrow: 1,\n    textAlign: 'center',\n    alignSelf: 'center',\n  },\n}));\n\nconst GoogleLoginButton = () => {\n  const classes = useStyles({});\n\n  return (\n      <a href={`${process.env.REACT_APP_BASE_URL}/api/v1/users/auth/google`} className={classes.button}>\n          <div className={classes.wrapper}>\n              <svg className={classes.icon} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 533.5 544.3\">\n                  <path fill=\"#4285f4\" d=\"M533.5 278.4c0-18.5-1.5-37.1-4.7-55.3H272.1v104.8h147c-6.1 33.8-25.7 63.7-54.4 82.7v68h87.7c51.5-47.4 81.1-117.4 81.1-200.2z\" />\n                  <path fill=\"#34a853\" d=\"M272.1 544.3c73.4 0 135.3-24.1 180.4-65.7l-87.7-68c-24.4 16.6-55.9 26-92.6 26-71 0-131.2-47.9-152.8-112.3H28.9v70.1c46.2 91.9 140.3 149.9 243.2 149.9z\" />\n                  <path fill=\"#fbbc04\" d=\"M119.3 324.3c-11.4-33.8-11.4-70.4 0-104.2V150H28.9c-38.6 76.9-38.6 167.5 0 244.4l90.4-70.1z\" />\n                  <path fill=\"#ea4335\" d=\"M272.1 107.7c38.8-.6 76.3 14 104.4 40.8l77.7-77.7C405 24.6 339.7-.8 272.1 0 169.2 0 75.1 58 28.9 150l90.4 70.1c21.5-64.5 81.8-112.4 152.8-112.4z\" />\n              </svg>\n          </div>\n          <p className={classes.text}>Login with Google</p>\n      </a>\n  );\n};\n\nexport { GoogleLoginButton };\n","import Typography from '@material-ui/core/Typography';\nimport Alert from '@material-ui/lab/Alert';\nimport React, { useState, Fragment } from 'react';\nimport Avatar from '@material-ui/core/Avatar';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Grid from '@material-ui/core/Grid';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LoginForm from '../forms/login/login';\nimport IsAuth from '../hoc/isAuthenticated';\nimport { GoogleLoginButton } from '../../common/GoogleButton';\nimport { loginInit } from '../../actions/userActions';\nimport { userStore } from '../../selectors/selectors';\nimport OurWrapper from '../../common/OurWrapper';\n\nexport type loginProps = {\n  onChange: (event: any) => void;\n  loginInit: (event: object, history: object) => void;\n  initLogin: () => void;\n  user?: any;\n  history?: any;\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    width: '100%',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Login(props: any) {\n  const classes = useStyles();\n  const [username, setUsername] = useState<string>('');\n  const [password, setPassword] = useState<string>('');\n  const dispatch = useDispatch();\n  const login = (userData: object, history: object) => dispatch(loginInit(userData, history));\n  const user = useSelector(userStore);\n\n  const goBackEmailConfirmation = () => {\n    props.history.goBack();\n  };\n\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const creds = {\n      username,\n      password,\n    };\n\n    login(creds, props.history);\n  };\n\n  return (\n      <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n          <>\n              <Grid container component=\"main\" className={classes.root}>\n                  <CssBaseline />\n                  <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                  <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                      <div className={classes.paper}>\n                          <Avatar className={classes.avatar}>\n                              <LockOutlinedIcon />\n                          </Avatar>\n                          <Typography component=\"h1\" variant=\"h5\">\n                              Log In\n                          </Typography>\n                          {user.error && (\n                          <div>\n                              <Alert severity=\"warning\">{user.error}</Alert>\n                          </div>\n              )}\n                          {user.error.includes('Please activate') && (\n                          <div style={{ padding: '20px 0px' }}>\n                              <Typography variant=\"h6\" style={{ cursor: 'pointer' }} onClick={goBackEmailConfirmation}>\n                                  {' '}\n                                  Back\n                                  {' '}\n                              </Typography>\n                          </div>\n              )}\n\n                          <LoginForm\n                submit={handleSubmit}\n                username={username}\n                password={password}\n                usernameChange={(e) => setUsername(e.target.value)}\n                passwordChange={(e) => setPassword(e.target.value)}\n              />\n                          <div style={{ margin: '60px 0px' }}>\n                              <GoogleLoginButton />\n                          </div>\n                      </div>\n                  </Grid>\n              </Grid>\n\n              {/* </div> */}\n          </>\n      </OurWrapper>\n  );\n}\n\nexport default IsAuth(Login);\n","import Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport React, { Fragment } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchPostInit } from '../../actions/postActions';\nimport { profile } from '../../selectors/selectors';\n\nfunction Post(props: any) {\n  const dispatch = useDispatch();\n  const postPage = useSelector(profile);\n  const getPost = (id: number) => dispatch(fetchPostInit(id));\n  React.useEffect(() => {\n    const id = parseInt(props.match.params.id);\n    getPost(id);\n  }, []);\n\n  const { title, postContent, author } = postPage;\n\n  return (\n      <>\n          <Grid item sm={12} md={12} style={{ margin: '20px 0px', padding: '0px 200px' }}>\n              <Grid item style={{ padding: '20px 0px' }}>\n                  <Typography variant=\"h2\" align=\"center\">\n                      {title}\n                  </Typography>\n              </Grid>\n              <Grid item sm={12} md={12} style={{ padding: '40px 0px' }}>\n                  <Typography style={{ lineHeight: '32px' }} variant=\"body1\" align=\"left\">\n                      {postContent}\n                  </Typography>\n              </Grid>\n              <Grid item sm={12} md={12} style={{ padding: '20px 0px' }}>\n                  <Typography display=\"inline\" variant=\"h6\" align=\"left\">\n                      By:\n                      {' '}\n                      {author && author ? author.username : ''}\n                  </Typography>\n              </Grid>\n          </Grid>\n      </>\n  );\n}\nexport default Post;\n","import Button from '@material-ui/core/Button';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport React from 'react';\nimport { EditProfileFormType } from '../../../utils/types';\n\nconst EditProfileForm = ({\n  onSubmit, bio, gravatar, handleBio, handleGravatar,\n}: EditProfileFormType) => (\n    <form onSubmit={onSubmit} data-testid=\"edit-form\">\n        <Typography variant=\"subtitle1\">Edit Profile</Typography>\n        <FormGroup style={{ padding: '30px 0px' }}>\n            <FormLabel data-testid=\"form-bio-label\" style={{ display: 'block' }}>\n                Bio\n            </FormLabel>\n            <TextField\n        id=\"outlined-name\"\n        className=\"bio-test\"\n        data-testid=\"bio-test\"\n        style={{\n          width: '100%',\n        }}\n        name=\"bio\"\n        inputProps={{\n          'data-testid': 'bio',\n        }}\n        multiline\n        rows=\"3\"\n        defaultValue={bio}\n        onChange={handleBio}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n            <FormLabel data-testid=\"form-gravatar-label\" style={{ display: 'block' }}>\n                Gravatar\n            </FormLabel>\n            <TextField\n        id=\"outlined-name\"\n        data-testid=\"gravatar-test\"\n        style={{\n          width: '100%',\n        }}\n        inputProps={{\n          'data-testid': 'gravatar',\n        }}\n        name=\"gravatar\"\n        multiline\n        rows=\"3\"\n        onChange={handleGravatar}\n        defaultValue={gravatar}\n        margin=\"normal\"\n        variant=\"outlined\"\n      />\n        </FormGroup>\n        <Button data-testid=\"button-test\" className=\"subBtn\" variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Submit\n        </Button>\n    </form>\n);\n\nexport default EditProfileForm;\n","import React, { useEffect, useRef, useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport { Grid } from '@material-ui/core';\nimport EditProfileForm from '../forms/editProfile/editForm';\nimport GridHoc from '../hoc/grid';\nimport storeMethods from '../../common/storeHooks';\nimport OurWrapper from '../../common/OurWrapper';\n\nfunction EditProfile(props: any) {\n  const [bio, setBio] = useState<string>('');\n  const [gravatar, setGravatar] = useState<string>('');\n  const mounted = useRef<Object>();\n  const {\n    getProfile, profileData, userErr, message, updateProfile,\n  } = storeMethods();\n  useEffect(() => {\n    if (!mounted.current) {\n      getProfile();\n      mounted.current = true;\n    } else {\n      setBio(bio || profileData.bio);\n      setGravatar(gravatar || profileData.gravatar);\n    }\n  });\n  const handleSubmit = React.useCallback(\n    (e: any) => {\n      e.preventDefault();\n      const formData = {\n        bio,\n        gravatar,\n      };\n      updateProfile(formData);\n    },\n    [updateProfile],\n  );\n\n  return (\n      <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n          <Grid container justify=\"center\">\n              <Grid item xs={12} sm={12} md={8} lg={8}>\n                  {userErr && <Typography style={{ color: 'red' }}>{message || userErr}</Typography>}\n                  {message && <Typography style={{ color: 'green' }}>{message || userErr}</Typography>}\n                  <EditProfileForm handleBio={(e) => setBio(e.target.value)} handleGravatar={(e) => setGravatar(e.target.value)} onSubmit={handleSubmit} bio={bio} gravatar={gravatar} />\n              </Grid>\n          </Grid>\n      </OurWrapper>\n  );\n}\n\nexport default GridHoc(EditProfile);\n","import React, { useEffect, useRef, Fragment } from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport PersonIcon from '@material-ui/icons/Person';\nimport { useSelector, useDispatch } from 'react-redux';\nimport OurLink from '../../common/OurLink';\nimport GridHoc from '../hoc/grid';\nimport { getProfileInit, followUserInit, unfollowUserInit } from '../../actions/userActions';\nimport { userStore } from '../../selectors/selectors';\nimport OurWrapper from '../../common/OurWrapper';\nimport { ProfilePropsType } from '../../utils/types';\n\nfunction Profile({\n  match, appBar, appBarShift, appOpen,\n}: ProfilePropsType) {\n  const didMountRef = useRef<Object>();\n  const dispatch = useDispatch();\n  const followUser = (username: string, id: number) => dispatch(followUserInit(username, id));\n  const unfollowUser = (username: string, id: number) => dispatch(unfollowUserInit(username, id));\n  const userData = useSelector(userStore);\n  useEffect(() => {\n    if (!didMountRef.current) {\n      const { username } = match.params;\n      dispatch(getProfileInit(username));\n    } else {\n      // console.log(\"test\");\n    }\n  }, []);\n\n  const user = userData.profilePage;\n  const currentUser = userData.currentUser.user;\n  const userFollowerCount = user && user.UserFollowers ? user.UserFollowers.length : '';\n  const followerPlural = userFollowerCount.length > 1 ? 'Follower' : 'Followers';\n\n  return (\n      <>\n          <OurWrapper appBar={appBar} appOpen={appOpen} appBarShift={appBarShift}>\n              {currentUser && user && (\n              <>\n                  <Avatar src={user.gravatar} />\n                  <Grid item sm={12} md={12} style={{ margin: '20px 0px' }}>\n                      <Typography variant=\"subtitle1\">{user.username}</Typography>\n                      <Typography variant=\"body1\" style={{ margin: '20px 0px', letterSpacing: '1px' }}>\n                          <PersonIcon style={{ margin: '-5px 0px' }} />\n                          {' '}\n                          {user.bio}\n                      </Typography>\n                      <Grid item sm={2} lg={2} style={{ margin: '20px 0px' }}>\n                          {currentUser.id !== user.id ? (\n                              <Typography align=\"left\">\n                                  {user.isFollowing !== true ? (\n                                      <Button variant=\"outlined\" color=\"primary\" onClick={() => followUser(user.username, currentUser.id)}>\n                                        Follow\n                      </Button>\n                    ) : (\n                        <Button style={{ color: '#fff' }} variant=\"contained\" color=\"primary\" onClick={() => unfollowUser(user.username, currentUser.id)}>\n                            Following\n                        </Button>\n                    )}\n                              </Typography>\n                ) : null}\n                      </Grid>\n                      <Grid item sm={12} md={12}>\n                          <Typography variant=\"subtitle1\" style={{ margin: '10px 0px' }}>\n                              {' '}\n                              {userFollowerCount}\n                              {' '}\n                              {followerPlural}\n                              {' '}\n                          </Typography>\n                          {user && userFollowerCount ? (\n                              <>\n                                  {user.UserFollowers.map((followUser, i) => (\n                                      <Fragment key={i}>\n                                        <Paper style={{ margin: '30px 0px', padding: '20px 0px' }}>\n                                          <Typography style={{ padding: '0px 20px' }} variant=\"caption\">\n                                            <OurLink\n                              to={{\n                                pathname: `/profile/${user && followUser && followUser.followerDetails ? followUser.followerDetails.username : ''}`,\n                                state: { followUser },\n                              }}\n                              title={user && followUser && followUser.followerDetails ? followUser.followerDetails.username : ''}\n                            />\n                                        </Typography>\n                                      </Paper>\n                                    </Fragment>\n                    ))}\n                              </>\n                ) : null}\n                      </Grid>\n                  </Grid>\n              </>\n        )}\n          </OurWrapper>\n      </>\n  );\n}\n\nexport default GridHoc(Profile);\n","import Button from '@material-ui/core/Button';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport TextField from '@material-ui/core/TextField';\nimport React from 'react';\n\ntype SignUpFormInterface = {\n  submit: (e) => void;\n  usernameChange: (e) => void;\n  emailChange: (e) => void;\n  passwordChange: (e) => void;\n  passwordConfChange: (e) => void;\n  passwordConf: string;\n  username: string;\n  password: string;\n  email: string;\n  usernameError: any;\n  passwordError: any;\n  emailError: any;\n  passwordConfError: any;\n  disButton: boolean;\n}\n\nconst SignUpForm = (props: SignUpFormInterface) => (\n    <form style={{ width: '100%' }} onSubmit={props.submit}>\n        <TextField\n      label=\"Username\"\n      style={{ width: '100%' }}\n      name=\"username\"\n      value={props.username}\n      error={!(props.usernameError === true || props.usernameError === '')}\n      onChange={props.usernameChange}\n      margin=\"normal\"\n    />\n        <FormHelperText error id=\"component-helper-text\">\n            {props.usernameError}\n        </FormHelperText>\n\n        <TextField\n      label=\"Email\"\n      className=\"\"\n      style={{ width: '100%' }}\n      name=\"email\"\n      error={!(props.emailError === true || props.emailError === '')}\n      value={props.email}\n      onChange={props.emailChange}\n      margin=\"dense\"\n    />\n        <FormHelperText error id=\"component-helper-text\">\n            {props.emailError}\n        </FormHelperText>\n        <TextField\n      label=\"Password\"\n      name=\"password\"\n      type=\"password\"\n      style={{ width: '100%' }}\n      className=\"\"\n      error={!(props.passwordError === true || props.passwordError === '')}\n      value={props.password}\n      onChange={props.passwordChange}\n      margin=\"dense\"\n    />\n        <FormHelperText error id=\"component-helper-text\">\n            {props.passwordError}\n        </FormHelperText>\n        {props.password.length > 6 ? (\n            <TextField\n        label=\"Confirm Pasword\"\n        name=\"passwordConf\"\n        type=\"password\"\n        style={{ width: '100%' }}\n        className=\"\"\n        error={!(props.passwordConfError === true || props.passwordConfError === '')}\n        value={props.passwordConf}\n        onChange={props.passwordConfChange}\n        margin=\"dense\"\n      />\n    ) : null}\n        {props.passwordConfError === true || props.passwordConfError === '' ? (\n      false\n    ) : true ? (\n        <FormHelperText error id=\"component-helper-text\">\n            {props.passwordConfError}\n        </FormHelperText>\n    ) : null}\n        <br />\n        <br />\n        <Button disabled={props.disButton} variant=\"outlined\" color=\"primary\" type=\"submit\">\n            Sign Up\n        </Button>\n    </form>\n);\n\nexport default SignUpForm;\n","import Typography from '@material-ui/core/Typography';\nimport React, { Fragment } from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Avatar from '@material-ui/core/Avatar';\nimport GroupIcon from '@material-ui/icons/Group';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { history } from '../../ourHistory';\nimport useInputChange from '../../common/handleHook';\nimport IsAuth from '../hoc/isAuthenticated';\nimport SignUpForm from '../forms/signUp/signUp';\nimport { userStore } from '../../selectors/selectors';\nimport {\n  addEmail, addPassword, addUsername, signUpInit, addPasswordConf,\n} from '../../actions/userActions';\nimport OurWrapper from '../../common/OurWrapper';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100vh',\n    width: '100%',\n  },\n  image: {\n    backgroundImage: 'url(https://source.unsplash.com/random)',\n    backgroundRepeat: 'no-repeat',\n    backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n    backgroundSize: 'cover',\n    backgroundPosition: 'center',\n  },\n  paper: {\n    margin: theme.spacing(8, 4),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction Register(props: any) {\n  const classes = useStyles();\n  const userData = useSelector(userStore);\n  const dispatch = useDispatch();\n  const signup = (userData: object, history: object) => dispatch(signUpInit(userData, history));\n  const inputData = {\n    addEmail: (email: string) => dispatch(addEmail(email)),\n    addPassword: (password: string) => dispatch(addPassword(password)),\n    addUsername: (username: string) => dispatch(addUsername(username)),\n    addPasswordConf: (passwordConf: string) => dispatch(addPasswordConf(passwordConf)),\n  };\n  const handleInputChange = useInputChange(inputData);\n  const handleSubmit = (e: any) => {\n    e.preventDefault();\n    const { username, email, password } = userData;\n    const creds = {\n      username,\n      email,\n      password,\n    };\n\n    signup(creds, history);\n  };\n\n  const {\n    username, email, password, passwordConf, passwordConfError, usernameError, passwordError, emailError,\n  } = userData;\n  const isEnabled = !(passwordConfError === true && emailError === true && passwordError === true && usernameError === true);\n\n  return (\n      <OurWrapper appBar={props.appBar} appOpen={props.appOpen} appBarShift={props.appBarShift}>\n          <>\n              <Grid container component=\"main\" className={classes.root}>\n                  <CssBaseline />\n                  <Grid item xs={false} sm={4} md={7} className={classes.image} />\n                  <Grid item xs={12} sm={8} md={5} component={Paper} elevation={6} square>\n                      <div className={classes.paper}>\n                          <Avatar className={classes.avatar}>\n                              <GroupIcon />\n                          </Avatar>\n                          <Typography component=\"h1\" variant=\"h5\">\n                              Register\n                          </Typography>\n                          {userData.error && <div>{userData.error}</div>}\n\n                          <SignUpForm\n                submit={handleSubmit}\n                usernameChange={handleInputChange}\n                emailChange={handleInputChange}\n                passwordChange={handleInputChange}\n                passwordConfChange={handleInputChange}\n                username={username}\n                password={password}\n                passwordConf={passwordConf}\n                email={email}\n                usernameError={usernameError}\n                passwordError={passwordError}\n                passwordConfError={passwordConfError}\n                emailError={emailError}\n                disButton={isEnabled}\n              />\n                      </div>\n                  </Grid>\n              </Grid>\n          </>\n      </OurWrapper>\n  );\n}\n\nexport default IsAuth(Register);\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  // const isGoogleAccount = useSelector(getGoogleAccount())\n\n  // if user signed up and verified account, give user access to all authenticated routes,\n  // of if user signed up using google oauth, give user access to all authenticated routes\n  if (rest.googleAccount === true) {\n    return <Route {...rest} render={(props) => <Component {...rest} {...props} />} />;\n  } if (rest.isAuthenticated !== false) {\n    return <Route {...rest} render={(props) => <Component {...rest} {...props} />} />;\n  }\n\n  return <Redirect to={{ pathname: '/login' }} />;\n};\n\nexport default PrivateRoute;\n","import React, { Fragment } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport GridHoc from '../hoc/grid';\n\nconst NotFound: React.FC = () => (\n    <>\n        <Typography variant=\"h4\"> No Page Found :(</Typography>\n        <img style={{ margin: '30px 0px' }} width=\"800\" src=\"https://s3.amazonaws.com/media.thecrimson.com/photos/2019/12/23/142555_1341777.png\" />\n    </>\n);\nexport default GridHoc(NotFound);\n","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton';\nimport Drawer from '@material-ui/core/Drawer';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport MenuIcon from '@material-ui/icons/Menu';\n\nconst drawerWidth = 210;\nconst styles = (theme) => ({\n  buttonCollapse: {\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n    margin: '10px',\n\n    boxShadow: 'none',\n    color: '#333',\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    right: '0px',\n    top: '0px',\n    left: '0px',\n    position: 'absolute' as const,\n    [theme.breakpoints.up('lg')]: {\n      position: 'absolute' as const,\n    },\n    padding: '0px',\n  },\n  appBar: {\n    // position: \"absolute\",\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n  },\n});\n\nfunction OurMenu(props: any) {\n  const { classes, theme } = props;\n\n  return (\n      <div className={classes.buttonCollapse}>\n          <IconButton onClick={() => props.setOpen(!props.appOpen)}>\n              <MenuIcon style={{ color: '#fff' }} />\n          </IconButton>\n\n          <Drawer\n        variant=\"temporary\"\n        anchor={theme.direction === 'right' ? 'right' : 'left'}\n        open={props.appOpen}\n        onClose={() => props.setOpen(!props.appOpen)}\n        classes={{\n          paper: classes.drawerPaper,\n        }}\n        ModalProps={{\n          keepMounted: true, // Better open performance on mobile.\n        }}\n      >\n              <IconButton style={{ marginLeft: 200 }} onClick={() => props.setOpen(!props.appOpen)}>\n                  {/* {theme.direction === \"ltr\" ?  : <MenuIcon />} */}\n              </IconButton>\n              {props.children}\n          </Drawer>\n      </div>\n  );\n}\n\nexport default withStyles(styles, { withTheme: true })(OurMenu);\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport Notification from '../components/notificationPopOver/notification';\nimport { initGetNotifications, markAsReadInit } from '../actions/userActions';\nimport { getNotifications } from '../selectors/selectors';\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  initGetNotifications: (id: number) => dispatch(initGetNotifications(id)),\n  markAsReadInit: (id: number) => dispatch(markAsReadInit(id)),\n});\n\nconst mapStateToProps = createStructuredSelector({\n  getNotifications,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);\n","import React, { Fragment, useEffect, useRef } from 'react';\nimport Popover from '@material-ui/core/Popover';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\n\nexport default function Notification(props: any) {\n  const [anchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const didMountRef = useRef<Object>();\n  const open = Boolean(anchorEl);\n  useEffect(() => {\n    if (!didMountRef.current) {\n      didMountRef.current = true;\n    } else {\n      // console.log(\"test\");\n    }\n  }, []);\n\n  return (\n      <>\n          <div style={{ color: '#fff' }} onClick={props.handleNotificationClick}>\n              {props.title}\n          </div>\n\n          <Popover\n        id={props.id}\n        open={props.open}\n        anchorEl={props.anchorEl}\n        onClose={props.handleClose}\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'center',\n        }}\n        transformOrigin={{\n          vertical: 'top',\n          horizontal: 'center',\n        }}\n      >\n              <Typography style={{ padding: '20px' }} color=\"secondary\" variant=\"h6\">\n                  Notifications:\n                  {' '}\n              </Typography>\n              <Divider />\n              {props.getNotifications.length > 0 && props.getNotifications.find((item) => item.status === 'unread') ? (\n          props.getNotifications.map((notification, i) => (notification.status === 'unread' ? (\n              <Fragment key={i}>\n                  <Typography\n                onClick={() => props.markAsReadInit(notification.notificationId)}\n                style={{\n                  width: '300px', cursor: 'pointer', padding: '20px', backgroundColor: 'rgba(0,0,0,0.08)',\n                }}\n              >\n                      {notification.body}\n                  </Typography>\n                  <Divider />\n              </Fragment>\n          ) : (\n              <Typography key={i} style={{ width: '300px', padding: '20px' }}>\n                  {notification.body}\n              </Typography>\n          )))\n        ) : (\n            <Typography style={{ width: '300px', padding: '20px' }}>No Notifications</Typography>\n        )}\n          </Popover>\n      </>\n  );\n}\n","import React from 'react';\nimport { MenuItem } from '@material-ui/core';\nimport styled from 'styled-components';\n\nconst OurStyledMenuItem = styled(MenuItem)`\n    padding: 10px;\n    a {\n        color: #000;\n    }\n`;\n\nconst OurMenuItem = (props: any) => <OurStyledMenuItem>{props.children}</OurStyledMenuItem>;\n\nexport default OurMenuItem;\n","import React, { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { Link } from 'react-router-dom';\nimport OurMenu from './Menu';\nimport Notification from '../../containers/notificationTooltip';\nimport OurMenuItem from '../../common/OurMenuItem';\n\nfunction CollapasedMenu(props: any) {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  const user = props.currentUser.user ? props.currentUser.user : '';\n\n  return (\n      <Grid item>\n          <OurMenu appOpen={props.appOpen} setOpen={props.setOpen}>\n              {props.isAuthenticated || props.googleAccount === true ? (\n                  <>\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to=\"/\"\n                color=\"primary\"\n              >\n                              Home\n                          </Link>\n                      </OurMenuItem>\n\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  textDecoration: 'none',\n                  fontWeight: '500',\n                }}\n                to=\"/dashboard\"\n              >\n                              Dashboard\n                          </Link>\n                      </OurMenuItem>\n\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  textDecoration: 'none',\n                  fontWeight: '500',\n                }}\n                to={{\n                  pathname: `/${user.id}/likes`,\n                }}\n              >\n                              Your Likes\n                          </Link>\n                      </OurMenuItem>\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  textDecoration: 'none',\n                  fontWeight: '500',\n                }}\n                to={{\n                  pathname: `/${user.id}/posts`,\n                }}\n              >\n                              Your Posts\n                          </Link>\n                      </OurMenuItem>\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to=\"/editProfile\"\n              >\n                              Edit Profile\n                          </Link>\n                      </OurMenuItem>\n                      <OurMenuItem>\n                          <Notification\n                userId={user.id}\n                id={props.notificationId}\n                handleClose={handleClose}\n                open={false}\n                anchorEl={props.anchorEl}\n                handleNotificationClick={props.handleNotificationClick}\n                title=\"Notifications\"\n              />\n                      </OurMenuItem>\n\n                      <OurMenuItem>\n                          <Link\n                style={{\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to={{\n                  pathname: `/profile/${user.username}`,\n                }}\n              >\n                              Profile\n                          </Link>\n                      </OurMenuItem>\n\n                      <OurMenuItem>\n                          <span onClick={props.darkTheme}>Change Theme</span>\n                      </OurMenuItem>\n\n                      <OurMenuItem>\n                          <span onClick={props.logOut}>Log Out</span>\n                      </OurMenuItem>\n                  </>\n        ) : (\n            <>\n                <OurMenuItem style={{ margin: '20px' }}>\n                    <Link\n                style={{\n                  color: '#333',\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to=\"/\"\n              >\n                        Home\n                    </Link>\n                </OurMenuItem>\n                <OurMenuItem style={{ margin: '20px' }}>\n                    <Link\n                style={{\n                  color: '#333',\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to=\"/login\"\n              >\n                        Login\n                    </Link>\n                </OurMenuItem>\n                <OurMenuItem style={{ margin: '20px' }}>\n                    <Link\n                style={{\n                  color: '#333',\n                  fontWeight: '500',\n                  textDecoration: 'none',\n                }}\n                to=\"/register\"\n              >\n                        Register\n                    </Link>\n                </OurMenuItem>\n            </>\n        )}\n          </OurMenu>\n      </Grid>\n  );\n}\n\nexport default CollapasedMenu;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nexport default function NavLink(props) {\n  return (\n      <Link\n      style={{\n        color: '#fff',\n        textDecoration: 'none',\n        fontSize: '0.85rem',\n      }}\n      {...props}\n    >\n          {props.children}\n      </Link>\n  );\n}\n","import React from 'react';\n\nexport default function NavButton(props) {\n  return (\n      <li data-testid=\"nav-button-test\" style={{ padding: '0.5rem' }}>\n          <button\n        style={{\n          color: '#fff', fontWeight: 400, border: 0, margin: 0, outline: 0, padding: 0, backgroundColor: 'transparent', cursor: 'pointer', textDecoration: 'none', fontSize: '0.85rem',\n        }}\n        {...props}\n      >\n              {props.children}\n          </button>\n      </li>\n  );\n}\n","import React, { Fragment } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Notification from '../../containers/notificationTooltip';\nimport menus from './menu.json';\nimport NavLink from '../../common/NavLink';\nimport NavButton from '../../common/NavButton';\nimport Search from '../search/Search';\n\nconst drawerWidth = 210;\nconst styles = makeStyles((theme) => ({\n  buttonBar: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    paddingLeft: '16px',\n    right: 0,\n    // position: \"relative\",\n    width: '100%',\n    background: 'transparent',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n}));\n\nfunction MainNav(props: any) {\n  const [, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const classes = styles();\n\n  return (\n      <Grid item>\n          <div className={classes.buttonBar} id=\"appbar-collapse\">\n              <>\n                  {props.isAuthenticated || props.googleAccount === true ? (\n                      <>\n                          <ul style={{\n                display: 'flex', flexDirection: 'row', flexWrap: 'wrap-reverse', paddingRight: '20px', justifyContent: 'flex-end', listStyleType: 'none',\n              }}\n              >\n                              {menus.menus.map((item, i) => (\n                                  <li key={i} style={{ padding: '0.5rem' }}>\n                                      {item.link !== 'likes' && item.link !== 'posts' && item.link !== 'profile' && item.link !== 'logout' && <NavLink to={`/${item.link}`}>{item.name}</NavLink>}\n                                      {item.link === 'likes' && (\n                                      <NavLink\n                        to={{\n                          pathname: `/${props.user.id}/${item.link}`,\n                        }}\n                      >\n                                        {item.name}\n                                    </NavLink>\n                    )}\n                                      {item.link === 'profile' && (\n                                      <NavLink\n                        to={{\n                          pathname: `/${item.link}/${props.user.username}`,\n                        }}\n                      >\n                                        {item.name}\n                                    </NavLink>\n                    )}\n                                      {item.link === 'posts' && (\n                                      <NavLink\n                        to={{\n                          pathname: `/${props.user.id}/${item.link}`,\n                        }}\n                      >\n                                        {item.name}\n                                    </NavLink>\n                    )}\n                                  </li>\n                ))}\n\n                              <NavButton>\n                                  <Notification\n                    userId={props.currentUser.id}\n                    id={props.notificationId}\n                    handleClose={props.handleClose}\n                    open={props.open}\n                    anchorEl={props.anchorEl}\n                    handleNotificationClick={props.handleNotificationClick}\n                    title=\"Notifications\"\n                  />\n                              </NavButton>\n\n                              <NavButton onClick={props.darkTheme}>Change Theme</NavButton>\n\n                              <NavButton onClick={props.logOut}>Logout</NavButton>\n                          </ul>\n                      </>\n          ) : (\n              <>\n                  <ul style={{\n                display: 'flex', flexDirection: 'row', flexWrap: 'wrap-reverse', paddingRight: '20px', justifyContent: 'flex-end', listStyleType: 'none',\n              }}\n              >\n                      {menus.guestMenu.map((item, i) => (\n                          <li style={{ padding: '0.5rem' }}>\n                              <NavLink to={`/${item.link}`}>{item.name}</NavLink>\n                          </li>\n                ))}\n                  </ul>\n              </>\n          )}\n              </>\n          </div>\n      </Grid>\n  );\n}\n\nexport default MainNav;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst drawerWidth = 210;\nconst styles = makeStyles((theme) => ({\n  buttonBar: {\n    [theme.breakpoints.down('md')]: {\n      display: 'none',\n    },\n    margin: '10px',\n    paddingLeft: '16px',\n    right: 0,\n    // position: \"relative\",\n    width: '100%',\n    background: 'transparent',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    overflowX: 'hidden',\n    // width: theme.spacing.unit * 7 + 1,\n    // [theme.breakpoints.up(\"sm\")]: {\n    //     width: theme.spacing.unit * 9 + 1,\n    // },\n  },\n}));\n\nfunction useWrapperSlide() {\n  const [appOpen, appSetOpen] = React.useState(false);\n  const classes = styles();\n\n  return {\n    appOpen,\n    appSetOpen,\n    classes,\n  };\n}\n\nexport default useWrapperSlide;\n","import React, { Fragment } from 'react';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Button } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport storehooks from '../../common/storeHooks';\nimport { history } from '../../ourHistory';\nimport { SearchType } from '../../utils/types';\n\nconst Search: React.FC<SearchType> = ({ currentUser }) => {\n  const { query, searchQ } = storehooks();\n  const search = (value) => {\n    searchQ(value);\n  };\n\n  const onSubmit = (e) => {\n    e.preventDefault();\n    history.push({ pathname: `/search/posts?q=${query}`, state: { query, currentUser } });\n  };\n\n  const disableIfEmpty = query.length === 0;\n  const ifTyping = query.length > 0 ? '100px' : '-40px';\n  const fadeIfempty = query.length > 0 ? 1 : 0.1;\n\n  return (\n      <>\n          <form onSubmit={onSubmit}>\n              <InputBase placeholder=\"Search…\" style={{ color: '#fff' }} onChange={(e) => search(e.target.value)} value={query} inputProps={{ 'aria-label': 'search' }} />\n              <Button\n          disabled={disableIfEmpty}\n          style={{\n            marginLeft: ifTyping, opacity: fadeIfempty, transition: 'ease 0.4s', outline: 'none', backgroundColor: 'transparent',\n          }}\n          size=\"small\"\n          type=\"submit\"\n          variant=\"outlined\"\n          color=\"primary\"\n        >\n                  <SearchIcon style={{ color: '#fff' }} />\n              </Button>\n          </form>\n      </>\n  );\n};\n\nexport default Search;\n","import React, { Fragment } from 'react';\nimport PostList from '../forms/postList/postList';\nimport GridHoc from '../hoc/grid';\nimport usePostsHook from '../../common/usePostHook';\nimport OurWrapper from '../../common/OurWrapper';\nimport { UserPostsType } from '../../utils/types';\n\nfunction UserPosts({\n  appBar, appBarShift, appOpen, dislikePost, postCommentInit, likePost, user, deleteComment, deletePostInit, isNotified, notification, notificationInit,\n}: UserPostsType) {\n  const { posts } = usePostsHook();\n  return (\n    <>\n      <OurWrapper appBar={appBar} appOpen={appOpen} appBarShift={appBarShift}>\n        <PostList\n          likePost={likePost}\n          deletePost={deletePostInit}\n          deleteComment={deleteComment}\n          dislikePost={dislikePost}\n          posts={posts}\n          currentUser={user}\n          postComment={postCommentInit}\n          isNotified={isNotified}\n          getNotifications={notificationInit}\n          notification={notification}\n        />\n\n      </OurWrapper>\n    </>\n  );\n}\n\nexport default GridHoc(React.memo(UserPosts));\n","import { connect } from 'react-redux';\nimport { createStructuredSelector } from 'reselect';\nimport {\n  deleteCommentInit, deletePostInit, dislikePostInit, getPostsInit, likePostInit, notificationInit, postCommentInit,\n} from '../actions/postActions';\nimport UserPosts from '../components/userPosts/UserPosts';\nimport { getNotification, getUser, getUserPosts } from '../selectors/selectors';\n\nconst mapStateToProps = (state, ownProps) => createStructuredSelector({\n  posts: getUserPosts(ownProps.match.params),\n  user: getUser,\n  notification: getNotification,\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  notificationInit: () => dispatch(notificationInit()),\n  getPostsInit: () => dispatch(getPostsInit()),\n  likePost: (id: number) => dispatch(likePostInit(id)),\n  postCommentInit: (commentData: object) => dispatch(postCommentInit(commentData)),\n  dislikePost: (id: number) => dispatch(dislikePostInit(id)),\n  deletePostInit: (id: number, userId: number) => dispatch(deletePostInit(id, userId)),\n  deleteComment: (id: number, postId: number, userId: number) => dispatch(deleteCommentInit(id, postId, userId)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserPosts);\n","import React, { Fragment } from 'react';\nimport storehooks from '../common/storeHooks';\nimport OurLink from '../common/OurLink';\n\ntype searchResultType = {};\nconst SearchResults: React.FC<searchResultType> = (props) => {\n  const { postResults, query } = storehooks();\n\n  return (\n      <>\n          {postResults.map((item, index) => (\n              <div\n          key={index}\n          style={{\n            width: '30%', padding: '10px', position: 'absolute', marginTop: '20px', backgroundColor: '#fff', border: '1px solid #000',\n          }}\n        >\n                  <img style={{ padding: '0px 8px' }} width=\"10px\" height=\"10px\" src={item.author.gravatar} />\n                  <OurLink\n            style={{ fontSize: '12px' }}\n            to={{\n              pathname: `/post/${item.id}`,\n            }}\n            title={item.title}\n          />\n              </div>\n      ))}\n          {query !== '' && postResults.length === 0 && (\n          <div style={{\n          fontSize: '12px', width: '30%', padding: '10px', position: 'absolute', marginTop: '20px', backgroundColor: '#fff', border: '1px solid #000',\n        }}\n        >\n              No Posts Found\n          </div>\n      )}\n      </>\n  );\n};\n\nexport default SearchResults;\n","import React, { Fragment, useEffect } from 'react';\nimport storehooks from '../../common/storeHooks';\nimport GridHoc from '../hoc/grid';\nimport PostList from '../forms/postList/postList';\nimport { SearchResultsPageType } from '../../utils/types';\n\nconst SearchResultPage: React.FC<SearchResultsPageType> = ({ location }) => {\n  const {\n    posts, getSearch, likePost, deletePost, deleteComment, dislikePost, postComment, editComment, isNotified, notifications,\n  } = storehooks();\n  const { query } = location.state;\n  const { currentUser } = location.state;\n  useEffect(() => {\n    getSearch(query);\n  }, [query]);\n\n  return (\n      <>\n          <PostList\n        likePost={likePost}\n        deletePost={deletePost}\n        deleteComment={deleteComment}\n        dislikePost={dislikePost}\n        posts={posts}\n        currentUser={currentUser}\n        postComment={postComment}\n        isNotified={isNotified}\n        getNotifications={notifications}\n        editComment={editComment}\n      />\n      </>\n  );\n};\n\nexport default GridHoc(SearchResultPage);\n","import React, { Fragment } from 'react';\nimport * as classnames from 'classnames';\nimport AppBar from '@material-ui/core/AppBar';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Route, Router, Redirect, Switch,\n} from 'react-router-dom';\nimport Landing from './components/landing/landing';\nimport Dashboard from './components/dashboard/dashboard';\nimport EmailConfirmation from './components/emailConfirmation/emailConfirmation';\nimport EmailConfirmationSuccess from './components/emailConfirmationSuccess/emailConfirmationSuccess';\nimport Likes from './containers/Likes';\nimport Login from './components/login/login';\nimport Post from './components/post/post';\nimport EditProfile from './components/editProfile/editProfile';\nimport Profile from './components/profile/profile';\nimport Register from './components/register/register';\nimport { history } from './ourHistory';\nimport PrivateRoute from './PrivateRoute';\nimport NotFound from './components/404/404';\nimport CollapasedMenu from './components/menus/CollapsedMenu';\nimport MainNav from './components/menus/MainNav';\nimport useWrapperSlide from './common/useWrapperSlide';\nimport Search from './components/search/Search';\nimport UserPosts from './containers/UserPosts';\nimport storehooks from './common/storeHooks';\nimport OurLink from './common/OurLink';\nimport SearchResults from './common/SearchResults';\nimport SearchResultPage from './components/searchResultPage/searchResultPage';\n\nfunction MyRouter(props) {\n  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n  const { classes, appOpen, appSetOpen } = useWrapperSlide();\n  const { postResults, query } = storehooks();\n  const open = Boolean(anchorEl);\n  const id = open ? 'simple-popover' : undefined;\n  const handleNotificationClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorEl(event.currentTarget);\n    props.notifications(user.id);\n  };\n\n  const handleClose = React.useCallback(() => {\n    setAnchorEl(null);\n  }, [setAnchorEl]);\n  const user = props.currentUser.user ? props.currentUser.user : '';\n\n  return props.hasError ? (\n      <div>Error</div>\n  ) : (\n      <Router history={history}>\n          <AppBar\n        position=\"static\"\n        className={classnames(\n          (classes.appBar,\n          {\n            [classes.appBarShift]: appOpen,\n          }),\n        )}\n      >\n              <Toolbar style={{ height: '1px' }}>\n                  <Grid item lg={2} style={{ flex: 1 }}>\n                      <Typography style={{ color: '#fff' }} variant=\"subtitle1\" color=\"secondary\">\n                          TypeScript React\n                      </Typography>\n                  </Grid>\n                  <Grid item lg={8} style={{ flex: 1 }}>\n                      <Search {...props} />\n                      <SearchResults />\n                  </Grid>\n\n                  <CollapasedMenu setOpen={appSetOpen} appOpen={appOpen} user={user} handleNotificationClick={handleNotificationClick} {...props} />\n                  <MainNav {...props} handleClose={handleClose} user={user} open={open} notificationId={id} anchorEl={anchorEl} handleNotificationClick={handleNotificationClick} />\n              </Toolbar>\n          </AppBar>\n\n          <Switch>\n              <Route exact path=\"/\" render={() => <Landing {...props} {...classes} appOpen={appOpen} />} />\n              <Route\n          path=\"/login\"\n          render={() => (props.isAuthenticated === true || props.googleAccount === true ? <Redirect to=\"/dashboard\" /> : <Login {...props} {...classes} appOpen={appOpen} />)}\n        />\n              <Route\n          path=\"/register\"\n          render={() => (props.isAuthenticated === true || props.googleAccount === true ? <Redirect to=\"/dashboard\" /> : <Register {...props} {...classes} appOpen={appOpen} />)}\n        />\n              <Route path=\"/emailConfirmation\" component={EmailConfirmation} {...props} />\n              {/* <Route path='/resendEmailConfirmation'></Route> */}\n              <Route exact path=\"/search/posts\" component={SearchResultPage} {...props} {...classes} />\n              <Route path=\"/emailConfirmationSuccess/:userId/:token\" component={EmailConfirmationSuccess} {...props} />\n              <PrivateRoute exact path=\"/dashboard\" component={Dashboard} {...props} {...classes} appOpen={appOpen} />\n              <PrivateRoute exact path=\"/profile/:username\" component={Profile} {...props} {...classes} appOpen={appOpen} />\n              <PrivateRoute exact path=\"/editProfile\" component={EditProfile} {...props} {...classes} appOpen={appOpen} />\n              <PrivateRoute exact path=\"/:userId/likes\" component={Likes} {...props} {...classes} appOpen={appOpen} />\n              <PrivateRoute exact path=\"/:userId/posts\" component={UserPosts} {...props} {...classes} appOpen={appOpen} />\n              <Route path=\"/post/:id\" component={Post} {...props} {...classes} appOpen={appOpen} />\n\n              <Route component={NotFound} />\n          </Switch>\n      </Router>\n  );\n}\n\nexport default MyRouter;\n","/* eslint-disable react/destructuring-assignment */\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { getUser, logOutInit, initGetNotifications } from './actions/userActions';\nimport { history } from './ourHistory';\nimport Router from './Router';\n\nexport type routerContainerState = {\n  hasError: boolean;\n};\nexport type routerContainerProps = {\n  getUser: () => void;\n  logOutInit: (data) => void;\n  darkTheme: () => void;\n  initGetNotifications: (id: number) => void;\n  user: {\n    isAuthenticated: boolean;\n  };\n};\n\nclass Nav extends Component<routerContainerProps, routerContainerState> {\n  state: routerContainerState = {\n    hasError: false,\n  };\n\n  componentDidMount() {\n    this.props.getUser();\n  }\n\n  componentDidCatch(error, info) {\n    this.setState({\n      hasError: true,\n    });\n  }\n\n  ourLogOut = (e) => {\n    e.preventDefault();\n    this.props.logOutInit(history);\n  };\n\n  render() {\n    const { hasError } = this.state;\n\n    return (\n      <Router\n        darkTheme={this.props.darkTheme}\n        notifications={this.props.initGetNotifications}\n        hasError={hasError}\n        logOut={this.ourLogOut}\n        user={this.props.user.isAuthenticated}\n        {...this.props.user}\n      />\n    );\n  }\n}\nconst dispatchToProps = (dispatch: any) => ({\n  getUser: () => dispatch(getUser()),\n  logOutInit: (data: object) => dispatch(logOutInit(data)),\n  initGetNotifications: (id: number) => dispatch(initGetNotifications(id)),\n});\n\nconst mapStateToProps = (state: any) => ({\n  user: state.user,\n});\nexport default connect(mapStateToProps, dispatchToProps)(Nav);\n","import React from 'react';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { connect } from 'react-redux';\nimport { setDark } from './actions/userActions';\nimport Nav from './Nav';\nimport { userSession } from './utils';\n\nuserSession.userSession();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#48A9A6',\n    },\n    secondary: {\n      main: '#000000',\n    },\n  },\n});\n\nconst defaultTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#48A9A6',\n    },\n    secondary: {\n      main: '#000000',\n    },\n  },\n});\ndefaultTheme.typography.h6 = {\n  fontSize: '0.9rem',\n  '@media (min-width:600px)': {\n    fontSize: '0.5rem',\n  },\n  [theme.breakpoints.up('lg')]: {\n    fontSize: '1.4rem',\n  },\n  [theme.breakpoints.up('sm')]: {\n    fontSize: '1.4rem',\n  },\n};\ndefaultTheme.typography.h5 = {\n  '@media (min-width:600px)': {\n    fontSize: '0.9rem',\n  },\n  [theme.breakpoints.up('md')]: {\n    fontSize: '1.4rem',\n  },\n};\n\nconst dark = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#000',\n    },\n    secondary: {\n      main: '#000',\n    },\n  },\n});\n\nfunction App(props: any) {\n  const darkTheme = () => {\n    props.setDark();\n  };\n\n  return (\n      <ThemeProvider theme={props.user.notDark ? defaultTheme : dark}>\n          <Nav darkTheme={darkTheme} />\n      </ThemeProvider>\n  );\n}\n\nconst mapStateToProps = (state: any) => ({\n  user: state.user,\n});\nconst mapDispatchToProps = (dispatch: any) => ({\n  setDark: () => dispatch(setDark()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport * as serviceWorker from './serviceWorker';\nimport { store, persitor } from './store';\nimport App from './App';\n\nconst app = (\n    <Provider store={store}>\n        <PersistGate persistor={persitor}>\n            <App />\n        </PersistGate>\n    </Provider>\n);\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}